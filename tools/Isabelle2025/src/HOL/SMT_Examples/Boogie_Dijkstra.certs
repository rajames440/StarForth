0a2d12aeeed9535b86d7d58cd35af090d5095447 2983 0
unsat
((set-logic AUFLIA)
(declare-fun ?v0!20 () B_Vertex$)
(declare-fun ?v0!19 () B_Vertex$)
(declare-fun ?v1!18 () B_Vertex$)
(declare-fun ?v0!17 () B_Vertex$)
(declare-fun ?v1!16 () B_Vertex$)
(declare-fun ?v0!15 () B_Vertex$)
(declare-fun ?v0!14 () B_Vertex$)
(declare-fun ?v0!13 () B_Vertex$)
(declare-fun ?v0!12 () B_Vertex$)
(declare-fun ?v0!11 () B_Vertex$)
(declare-fun ?v1!10 () B_Vertex$)
(declare-fun ?v1!9 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!8 () B_Vertex$)
(declare-fun ?v1!7 (B_Vertex$) B_Vertex$)
(declare-fun ?v1!6 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!5 () B_Vertex$)
(declare-fun ?v0!4 () B_Vertex$)
(declare-fun ?v1!3 () B_Vertex$)
(declare-fun ?v0!2 () B_Vertex$)
(declare-fun ?v1!1 () B_Vertex$)
(declare-fun ?v0!0 () B_Vertex$)
(proof
(let ((?x260 (fun_upd$ v_b_Visited_G_1$ v_b_v_G_1$ true)))
(let (($x5237 (fun_app$ ?x260 ?v0!20)))
(let (($x9037 (not $x5237)))
(let (($x261 (= v_b_Visited_G_2$ ?x260)))
(let (($x3724 (forall ((?v1 B_Vertex$) )(! (let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x2237 (= (+ ?x268 ?x1907 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(or (>= (+ ?x268 ?x1907) 0) $x295 (not $x2237)))))))) :pattern ( (v_b_SP_G_2$ ?v1) ) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!20) ) :qid k!38))
))
(let (($x3729 (not $x3724)))
(let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x1908 (+ b_Infinity$ ?x1907)))
(let (($x1909 (<= ?x1908 0)))
(let (($x1904 (= ?v0!20 b_Source$)))
(let (($x3715 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x298 (v_b_SP_G_2$ ?v0)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1277 (>= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(or $x295 $x917 $x1277))))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!38))
))
(let (($x3720 (not $x3715)))
(let (($x3732 (or $x3720 $x1904 $x1909 $x3729)))
(let (($x3735 (not $x3732)))
(let ((?x1888 (v_b_SP_G_2$ ?v0!19)))
(let ((?x1889 (* (- 1) ?x1888)))
(let ((?x1887 (v_b_SP_G_2$ ?v1!18)))
(let ((?x1879 (pair$ ?v1!18 ?v0!19)))
(let ((?x1880 (b_G$ ?x1879)))
(let (($x1891 (>= (+ ?x1880 ?x1887 ?x1889) 0)))
(let (($x1883 (<= (+ b_Infinity$ (* (- 1) ?x1880)) 0)))
(let (($x1878 (fun_app$ v_b_Visited_G_2$ ?v1!18)))
(let (($x2786 (not $x1878)))
(let (($x2801 (or $x2786 $x1883 $x1891)))
(let (($x2806 (not $x2801)))
(let (($x3738 (or $x2806 $x3735)))
(let (($x3741 (not $x3738)))
(let (($x3707 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1257 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x2763 (not $x296)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x286 $x2763 $x1257))))) :pattern ( (v_b_SP_G_2$ ?v1) (v_b_SP_G_2$ ?v0) ) :qid k!38))
))
(let (($x3712 (not $x3707)))
(let (($x3744 (or $x3712 $x3741)))
(let (($x3747 (not $x3744)))
(let (($x1864 (>= (+ (v_b_SP_G_2$ ?v1!16) (* (- 1) (v_b_SP_G_2$ ?v0!17))) 0)))
(let (($x1857 (fun_app$ v_b_Visited_G_2$ ?v0!17)))
(let (($x2740 (not $x1857)))
(let (($x1855 (fun_app$ v_b_Visited_G_2$ ?v1!16)))
(let (($x2755 (or $x1855 $x2740 $x1864)))
(let (($x2760 (not $x2755)))
(let (($x3750 (or $x2760 $x3747)))
(let (($x3753 (not $x3750)))
(let (($x3698 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(>= ?x268 0)) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!38))
))
(let (($x3703 (not $x3698)))
(let (($x3756 (or $x3703 $x3753)))
(let (($x3759 (not $x3756)))
(let ((?x1841 (v_b_SP_G_2$ ?v0!15)))
(let (($x1842 (>= ?x1841 0)))
(let (($x1843 (not $x1842)))
(let (($x3762 (or $x1843 $x3759)))
(let (($x3765 (not $x3762)))
(let ((?x291 (v_b_SP_G_2$ b_Source$)))
(let (($x292 (= ?x291 0)))
(let (($x768 (not $x292)))
(let (($x3768 (or $x768 $x3765)))
(let (($x3771 (not $x3768)))
(let (($x3774 (or $x768 $x3771)))
(let (($x3777 (not $x3774)))
(let (($x3690 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x295 (not $x286)))
(or $x295 $x273)))))) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :qid k!38))
))
(let (($x3695 (not $x3690)))
(let (($x3780 (or $x3695 $x3777)))
(let (($x3783 (not $x3780)))
(let ((?x1822 (fun_app$a v_b_SP_G_1$ ?v0!14)))
(let ((?x1821 (v_b_SP_G_2$ ?v0!14)))
(let (($x1823 (= ?x1821 ?x1822)))
(let (($x1824 (or (not (fun_app$ v_b_Visited_G_2$ ?v0!14)) $x1823)))
(let (($x1825 (not $x1824)))
(let (($x3786 (or $x1825 $x3783)))
(let (($x3789 (not $x3786)))
(let (($x3681 (forall ((?v0 B_Vertex$) )(! (>= (+ (fun_app$a v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!38))
))
(let (($x3686 (not $x3681)))
(let (($x3792 (or $x3686 $x3789)))
(let (($x3795 (not $x3792)))
(let ((?x1804 (v_b_SP_G_2$ ?v0!13)))
(let ((?x1805 (* (- 1) ?x1804)))
(let ((?x1803 (fun_app$a v_b_SP_G_1$ ?v0!13)))
(let ((?x1806 (+ ?x1803 ?x1805)))
(let (($x1807 (>= ?x1806 0)))
(let (($x1808 (not $x1807)))
(let (($x3798 (or $x1808 $x3795)))
(let (($x3801 (not $x3798)))
(let (($x3673 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let (($x1170 (<= (+ ?x171 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2712 (or $x1164 $x1170)))
(let (($x2713 (not $x2712)))
(or $x2713 $x273)))))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!38))
))
(let (($x3678 (not $x3673)))
(let (($x3665 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(let ((?x1181 (* (- 1) ?x268)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1180 (= (+ ?x254 ?x263 ?x1181) 0)))
(let (($x1170 (<= (+ (fun_app$a v_b_SP_G_1$ ?v0) (* (- 1) ?x254) (* (- 1) ?x263)) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) ?x263)) 0)))
(or $x1164 $x1170 $x1180)))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!38))
))
(let (($x3670 (not $x3665)))
(let (($x2930 (not $x261)))
(let (($x3655 (forall ((?v0 B_Vertex$) )(! (let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x175 (>= (+ ?x171 ?x1168) 0)))))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :qid k!38))
))
(let (($x3660 (not $x3655)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let ((?x1207 (+ b_Infinity$ ?x1168)))
(let (($x1208 (<= ?x1207 0)))
(let (($x252 (fun_app$ v_b_Visited_G_1$ v_b_v_G_1$)))
(let ((?x1770 (fun_app$a v_b_SP_G_1$ ?v0!12)))
(let ((?x1771 (* (- 1) ?x1770)))
(let ((?x1772 (+ b_Infinity$ ?x1771)))
(let (($x1773 (<= ?x1772 0)))
(let (($x1768 (fun_app$ v_b_Visited_G_1$ ?v0!12)))
(let (($x3804 (or $x1768 $x1773 $x252 $x1208 $x3660 $x2930 $x3670 $x3678 $x3801)))
(let (($x3807 (not $x3804)))
(let ((?x242 (fun_app$a v_b_SP_G_3$ b_Source$)))
(let (($x243 (= ?x242 0)))
(let (($x3617 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1135 (>= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(or $x1094 $x917 $x1135)))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!38))
))
(let (($x3622 (not $x3617)))
(let (($x3625 (or $x3622 $x243)))
(let (($x3628 (not $x3625)))
(let ((?x1729 (fun_app$a v_b_SP_G_3$ ?v0!11)))
(let ((?x1730 (* (- 1) ?x1729)))
(let ((?x1721 (pair$ ?v1!10 ?v0!11)))
(let ((?x1722 (b_G$ ?x1721)))
(let ((?x1716 (fun_app$a v_b_SP_G_3$ ?v1!10)))
(let ((?x2201 (+ ?x1716 ?x1722 ?x1730)))
(let (($x2204 (>= ?x2201 0)))
(let (($x1725 (<= (+ b_Infinity$ (* (- 1) ?x1722)) 0)))
(let (($x1719 (<= (+ b_Infinity$ (* (- 1) ?x1716)) 0)))
(let (($x2640 (or $x1719 $x1725 $x2204)))
(let (($x2645 (not $x2640)))
(let (($x3631 (or $x2645 $x3628)))
(let (($x3634 (not $x3631)))
(let (($x3609 (forall ((?v0 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let ((?x2186 (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2187 (= ?x2186 0)))
(let (($x2171 (<= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2612 (not (or $x2171 (not $x2187)))))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x1094 $x2612)))))))) :pattern ( (fun_app$a v_b_SP_G_3$ ?v0) ) :qid k!38))
))
(let (($x3614 (not $x3609)))
(let (($x3637 (or $x3614 $x3634)))
(let (($x3640 (not $x3637)))
(let (($x3595 (forall ((?v1 B_Vertex$) )(! (let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let (($x2143 (= (+ ?x227 ?x1657 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x227 ?x1657) 0) (not $x2143)))))) :pattern ( (fun_app$a v_b_SP_G_3$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!8) ) :qid k!38))
))
(let (($x3600 (not $x3595)))
(let (($x1659 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0!8))) 0)))
(let (($x1654 (= ?v0!8 b_Source$)))
(let (($x3603 (or $x1654 $x1659 $x3600)))
(let (($x3606 (not $x3603)))
(let (($x3643 (or $x3606 $x3640)))
(let (($x3646 (not $x3643)))
(let (($x217 (= v_b_oldSP_G_1$ v_b_oldSP_G_0$)))
(let (($x2704 (not $x217)))
(let (($x214 (= v_b_SP_G_3$ v_b_SP_G_1$)))
(let (($x2703 (not $x214)))
(let (($x212 (= v_b_v_G_2$ v_b_v_G_0$)))
(let (($x2702 (not $x212)))
(let (($x209 (= v_b_Visited_G_3$ v_b_Visited_G_1$)))
(let (($x2701 (not $x209)))
(let (($x3585 (forall ((?v0 B_Vertex$) )(! (let (($x997 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x175 $x997))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :qid k!38))
))
(let (($x3590 (not $x3585)))
(let (($x3649 (or $x3590 $x2701 $x2702 $x2703 $x2704 $x3646)))
(let (($x3652 (not $x3649)))
(let (($x3810 (or $x3652 $x3807)))
(let (($x3813 (not $x3810)))
(let (($x3576 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x2123 (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2124 (= ?x2123 0)))
(let (($x2108 (<= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2546 (not (or $x2108 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2124)))))
(let (($x997 (<= (+ b_Infinity$ (* (- 1) ?x171)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x997 $x2546)))))))) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :qid k!38))
))
(let (($x3581 (not $x3576)))
(let (($x3568 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x985 (>= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x176 (not $x175)))
(or $x176 $x917 $x985))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!38))
))
(let (($x3573 (not $x3568)))
(let (($x3560 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x175 (not (fun_app$ v_b_Visited_G_1$ ?v0)) $x1010)))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v1) (fun_app$ v_b_Visited_G_1$ ?v0) ) :qid k!38))
))
(let (($x3565 (not $x3560)))
(let (($x3551 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(>= ?x171 0)) :pattern ( (fun_app$a v_b_SP_G_1$ ?v0) ) :qid k!38))
))
(let (($x3556 (not $x3551)))
(let ((?x169 (fun_app$a v_b_SP_G_1$ b_Source$)))
(let (($x170 (= ?x169 0)))
(let (($x2947 (not $x170)))
(let (($x3542 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(let ((?x2085 (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2086 (= ?x2085 0)))
(let (($x2070 (<= (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2473 (not (or $x2070 (not (fun_app$ v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2086)))))
(let (($x942 (<= (+ b_Infinity$ (* (- 1) ?x124)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x942 $x2473)))))))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!38))
))
(let (($x3547 (not $x3542)))
(let (($x3816 (or $x3547 $x2947 $x3556 $x3565 $x3573 $x3581 $x3813)))
(let (($x3819 (not $x3816)))
(let (($x3528 (forall ((?v1 B_Vertex$) )(! (let ((?x1535 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1536 (* (- 1) ?x1535)))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(or (>= (+ ?x124 ?x1536) 0) $x134 (not (= (+ ?x124 ?x1536 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))) :pattern ( (v_b_SP_G_0$ ?v1) ) :pattern ( (fun_app$ v_b_Visited_G_0$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!5) ) :qid k!38))
))
(let (($x3533 (not $x3528)))
(let ((?x1535 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1536 (* (- 1) ?x1535)))
(let ((?x1537 (+ b_Infinity$ ?x1536)))
(let (($x1538 (<= ?x1537 0)))
(let (($x1533 (= ?v0!5 b_Source$)))
(let (($x3536 (or $x1533 $x1538 $x3533)))
(let (($x1534 (not $x1533)))
(let ((@x5072 (unit-resolution (def-axiom (or $x3536 $x1534)) (hypothesis (not $x3536)) $x1534)))
(let (($x5500 (= b_Infinity$ ?x1535)))
(let (($x6555 (not $x5500)))
(let (($x1539 (not $x1538)))
(let ((@x5027 (unit-resolution (def-axiom (or $x3536 $x1539)) (hypothesis (not $x3536)) $x1539)))
(let ((@x5583 (symm (commutativity (= $x5500 (= ?x1535 b_Infinity$))) (= (= ?x1535 b_Infinity$) $x5500))))
(let (($x5648 (= ?x1535 b_Infinity$)))
(let (($x3488 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(or $x123 (= (v_b_SP_G_0$ ?v0) b_Infinity$))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!38))
))
(let (($x355 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(or $x123 (= (v_b_SP_G_0$ ?v0) b_Infinity$))) :qid k!38))
))
(let (($x123 (= ?0 b_Source$)))
(let (($x352 (or $x123 (= (v_b_SP_G_0$ ?0) b_Infinity$))))
(let (($x135 (forall ((?v0 B_Vertex$) )(! (let (($x133 (fun_app$ v_b_Visited_G_0$ ?v0)))
(not $x133)) :qid k!38))
))
(let (($x349 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(or $x128 (= (v_b_SP_G_0$ ?v0) 0)))) :qid k!38))
))
(let (($x885 (and $x349 $x355 $x135)))
(let (($x1324 (forall ((?v0 B_Vertex$) )(! (let (($x1318 (exists ((?v1 B_Vertex$) )(! (let ((?x298 (v_b_SP_G_2$ ?v0)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1301 (= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1257 (>= (+ ?x268 ?x1258) 0)))
(let (($x1304 (not $x1257)))
(and $x1304 $x286 $x1301))))))))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1295 (and $x128 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))))
(or (not $x1295) $x1318))))) :qid k!38))
))
(let (($x1284 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x298 (v_b_SP_G_2$ ?v0)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1277 (>= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x918 (not $x917)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1271 (and $x286 $x918)))
(let (($x1274 (not $x1271)))
(or $x1274 $x1277))))))))))) :qid k!38))
))
(let (($x1287 (not $x1284)))
(let (($x1327 (or $x1287 $x1324)))
(let (($x1330 (and $x1284 $x1327)))
(let (($x1265 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1257 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(let (($x297 (and $x295 $x296)))
(let (($x659 (not $x297)))
(or $x659 $x1257))))))) :qid k!38))
))
(let (($x1268 (not $x1265)))
(let (($x1333 (or $x1268 $x1330)))
(let (($x1336 (and $x1265 $x1333)))
(let (($x1251 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(>= ?x268 0)) :qid k!38))
))
(let (($x1254 (not $x1251)))
(let (($x1339 (or $x1254 $x1336)))
(let (($x1342 (and $x1251 $x1339)))
(let (($x1345 (or $x768 $x1342)))
(let (($x1348 (and $x292 $x1345)))
(let (($x647 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x295 (not $x286)))
(or $x295 $x273)))))) :qid k!38))
))
(let (($x780 (not $x647)))
(let (($x1351 (or $x780 $x1348)))
(let (($x1354 (and $x647 $x1351)))
(let (($x1242 (forall ((?v0 B_Vertex$) )(! (>= (+ (fun_app$a v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0) :qid k!38))
))
(let (($x1245 (not $x1242)))
(let (($x1357 (or $x1245 $x1354)))
(let (($x1360 (and $x1242 $x1357)))
(let (($x1194 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let (($x1170 (<= (+ ?x171 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1174 (and (not $x1164) (not $x1170))))
(or $x1174 $x273))))))))) :qid k!38))
))
(let (($x1188 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(let ((?x1181 (* (- 1) ?x268)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1180 (= (+ ?x254 ?x263 ?x1181) 0)))
(let (($x1170 (<= (+ (fun_app$a v_b_SP_G_1$ ?v0) (* (- 1) ?x254) (* (- 1) ?x263)) 0)))
(let (($x1174 (and (not (<= (+ b_Infinity$ (* (- 1) ?x263)) 0)) (not $x1170))))
(let (($x1177 (not $x1174)))
(or $x1177 $x1180))))))))) :qid k!38))
))
(let (($x1204 (forall ((?v0 B_Vertex$) )(! (let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x175 (>= (+ ?x171 ?x1168) 0)))))) :qid k!38))
))
(let (($x1209 (not $x1208)))
(let (($x253 (not $x252)))
(let (($x1075 (exists ((?v0 B_Vertex$) )(! (let (($x997 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x998 (not $x997)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x176 (not $x175)))
(and $x176 $x998))))) :qid k!38))
))
(let (($x1230 (and $x1075 $x253 $x1209 $x1204 $x261 $x1188 $x1194)))
(let (($x1235 (not $x1230)))
(let (($x1363 (or $x1235 $x1360)))
(let (($x1141 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1135 (>= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x918 (not $x917)))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(let (($x1095 (not $x1094)))
(let (($x1129 (and $x1095 $x918)))
(let (($x1132 (not $x1129)))
(or $x1132 $x1135)))))))))) :qid k!38))
))
(let (($x1144 (not $x1141)))
(let (($x1147 (or $x1144 $x243)))
(let (($x1150 (and $x1141 $x1147)))
(let (($x1123 (forall ((?v0 B_Vertex$) )(! (let (($x1117 (exists ((?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(and (not (>= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)) (= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)))) :qid k!38))
))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)))
(let (($x1095 (not $x1094)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1098 (and $x128 $x1095)))
(let (($x1101 (not $x1098)))
(or $x1101 $x1117)))))))) :qid k!38))
))
(let (($x1126 (not $x1123)))
(let (($x1153 (or $x1126 $x1150)))
(let (($x1156 (and $x1123 $x1153)))
(let (($x1078 (not $x1075)))
(let (($x1084 (and $x1078 $x209 $x212 $x214 $x217)))
(let (($x1089 (not $x1084)))
(let (($x1159 (or $x1089 $x1156)))
(let (($x1366 (and $x1159 $x1363)))
(let (($x1032 (forall ((?v0 B_Vertex$) )(! (let (($x1026 (exists ((?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1007 (= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x1012 (not $x1010)))
(and $x1012 $x175 $x1007))))))) :qid k!38))
))
(let (($x997 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x998 (not $x997)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1001 (and $x128 $x998)))
(let (($x1004 (not $x1001)))
(or $x1004 $x1026)))))))) :qid k!38))
))
(let (($x992 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x985 (>= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x918 (not $x917)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x978 (and $x175 $x918)))
(let (($x981 (not $x978)))
(or $x981 $x985))))))))) :qid k!38))
))
(let (($x1040 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x177 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x176 (not $x175)))
(let (($x178 (and $x176 $x177)))
(let (($x398 (not $x178)))
(or $x398 $x1010)))))))) :qid k!38))
))
(let (($x1046 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(>= ?x171 0)) :qid k!38))
))
(let (($x975 (forall ((?v0 B_Vertex$) )(! (let (($x969 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x952 (= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x152) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x902 (>= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x955 (not $x902)))
(and $x955 $x133 $x952))))))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x946 (and $x128 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))))
(let (($x949 (not $x946)))
(or $x949 $x969)))))) :qid k!38))
))
(let (($x1064 (and $x975 $x170 $x1046 $x1040 $x992 $x1032)))
(let (($x1069 (not $x1064)))
(let (($x1369 (or $x1069 $x1366)))
(let (($x1372 (and $x975 $x1369)))
(let (($x934 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x928 (>= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x152) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x918 (not $x917)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x921 (and $x133 $x918)))
(let (($x924 (not $x921)))
(or $x924 $x928))))))))) :qid k!38))
))
(let (($x937 (not $x934)))
(let (($x1375 (or $x937 $x1372)))
(let (($x1378 (and $x934 $x1375)))
(let (($x909 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x902 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(let (($x146 (and $x134 (fun_app$ v_b_Visited_G_0$ ?v0))))
(let (($x377 (not $x146)))
(or $x377 $x902)))))) :qid k!38))
))
(let (($x912 (not $x909)))
(let (($x1381 (or $x912 $x1378)))
(let (($x1384 (and $x909 $x1381)))
(let (($x894 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(>= ?x124 0)) :qid k!38))
))
(let (($x897 (not $x894)))
(let (($x1387 (or $x897 $x1384)))
(let (($x1390 (and $x894 $x1387)))
(let ((?x141 (v_b_SP_G_0$ b_Source$)))
(let (($x142 (= ?x141 0)))
(let (($x864 (not $x142)))
(let (($x1393 (or $x864 $x1390)))
(let (($x1396 (and $x142 $x1393)))
(let (($x1402 (not (or (not $x885) $x1396))))
(let (($x315 (forall ((?v0 B_Vertex$) )(! (let (($x313 (exists ((?v1 B_Vertex$) )(! (let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x311 (and $x286 (= (v_b_SP_G_2$ ?v0) (+ (v_b_SP_G_2$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x309 (< ?x268 ?x298)))
(and $x309 $x311)))))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x308 (and $x128 (< (v_b_SP_G_2$ ?v0) b_Infinity$))))
(=> $x308 $x313))))) :qid k!38))
))
(let (($x316 (and $x315 false)))
(let (($x317 (=> $x316 true)))
(let (($x318 (and $x315 $x317)))
(let (($x306 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x303 (+ ?x268 ?x152)))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x302 (and $x286 $x153)))
(=> $x302 (<= ?x298 ?x303))))))))) :qid k!38))
))
(let (($x319 (=> $x306 $x318)))
(let (($x301 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let (($x299 (<= ?x298 ?x268)))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(let (($x297 (and $x295 $x296)))
(=> $x297 $x299)))))))) :qid k!38))
))
(let (($x321 (=> $x301 (and $x306 $x319))))
(let (($x294 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(<= 0 ?x268)) :qid k!38))
))
(let (($x323 (=> $x294 (and $x301 $x321))))
(let (($x325 (=> $x292 (and $x294 $x323))))
(let (($x288 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v0)))
(=> $x286 $x273))))) :qid k!38))
))
(let (($x290 (and $x288 (and true true))))
(let (($x327 (=> $x290 (and $x292 $x325))))
(let (($x285 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(<= ?x268 ?x171))) :qid k!38))
))
(let (($x329 (=> $x285 (and $x288 $x327))))
(let (($x275 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x265 (+ ?x254 ?x263)))
(let (($x267 (and (< ?x263 b_Infinity$) (< ?x265 ?x171))))
(let (($x272 (not $x267)))
(=> $x272 $x273))))))))) :qid k!38))
))
(let (($x271 (forall ((?v0 B_Vertex$) )(! (let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x265 (+ ?x254 ?x263)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x269 (= ?x268 ?x265)))
(let (($x267 (and (< ?x263 b_Infinity$) (< ?x265 (fun_app$a v_b_SP_G_1$ ?v0)))))
(=> $x267 $x269))))))) :qid k!38))
))
(let (($x258 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x256 (<= ?x254 ?x171)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x176 (not $x175)))
(=> $x176 $x256)))))) :qid k!38))
))
(let (($x255 (< ?x254 b_Infinity$)))
(let (($x206 (exists ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x188 (< ?x171 b_Infinity$)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x176 (not $x175)))
(and $x176 $x188))))) :qid k!38))
))
(let (($x281 (and $x206 (and $x253 (and $x255 (and $x258 (and $x261 (and $x271 $x275))))))))
(let (($x282 (and true $x281)))
(let (($x283 (and true $x282)))
(let (($x331 (=> $x283 (and $x285 $x329))))
(let (($x245 (and $x243 (=> $x243 true))))
(let (($x241 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x232 (+ ?x227 ?x152)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x228 (< ?x227 b_Infinity$)))
(let (($x238 (and $x228 $x153)))
(=> $x238 (<= ?x230 ?x232))))))))) :qid k!38))
))
(let (($x246 (=> $x241 $x245)))
(let (($x237 (forall ((?v0 B_Vertex$) )(! (let (($x235 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x232 (+ ?x227 ?x152)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x231 (< ?x227 ?x230)))
(and $x231 (= ?x230 ?x232))))))) :qid k!38))
))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x228 (< ?x227 b_Infinity$)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x229 (and $x128 $x228)))
(=> $x229 $x235))))))) :qid k!38))
))
(let (($x248 (=> $x237 (and $x241 $x246))))
(let (($x222 (and true (and $x209 (and $x212 (and $x214 (and $x217 true)))))))
(let (($x223 (and true $x222)))
(let (($x207 (not $x206)))
(let (($x225 (and true (and $x207 $x223))))
(let (($x226 (and true $x225)))
(let (($x250 (=> $x226 (and $x237 $x248))))
(let (($x196 (forall ((?v0 B_Vertex$) )(! (let (($x194 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x184 (+ ?x171 ?x152)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x190 (< ?x171 ?x179)))
(and $x190 (and $x175 (= ?x179 ?x184))))))))) :qid k!38))
))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x188 (< ?x171 b_Infinity$)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x189 (and $x128 $x188)))
(=> $x189 $x194))))))) :qid k!38))
))
(let (($x197 (and $x196 true)))
(let (($x187 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x184 (+ ?x171 ?x152)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x183 (and $x175 $x153)))
(=> $x183 (<= ?x179 ?x184))))))))) :qid k!38))
))
(let (($x182 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x180 (<= ?x179 ?x171)))
(let (($x177 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x176 (not $x175)))
(let (($x178 (and $x176 $x177)))
(=> $x178 $x180)))))))) :qid k!38))
))
(let (($x173 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(<= 0 ?x171)) :qid k!38))
))
(let (($x202 (and true (and $x170 (and $x173 (and $x182 (and $x187 $x197)))))))
(let (($x203 (and true $x202)))
(let (($x167 (forall ((?v0 B_Vertex$) )(! (let (($x165 (exists ((?v1 B_Vertex$) )(! (let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x163 (and $x133 (= (v_b_SP_G_0$ ?v0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?v0)) $x163))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x160 (and $x128 (< (v_b_SP_G_0$ ?v0) b_Infinity$))))
(=> $x160 $x165))))) :qid k!38))
))
(let (($x333 (=> (and $x167 $x203) (and $x250 $x331))))
(let (($x158 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x147 (v_b_SP_G_0$ ?v0)))
(let (($x156 (<= ?x147 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x154 (and $x133 $x153)))
(=> $x154 $x156))))))) :qid k!38))
))
(let (($x335 (=> $x158 (and $x167 $x333))))
(let (($x150 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v1)))
(let ((?x147 (v_b_SP_G_0$ ?v0)))
(let (($x148 (<= ?x147 ?x124)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(let (($x146 (and $x134 (fun_app$ v_b_Visited_G_0$ ?v0))))
(=> $x146 $x148))))))) :qid k!38))
))
(let (($x337 (=> $x150 (and $x158 $x335))))
(let (($x144 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(<= 0 ?x124)) :qid k!38))
))
(let (($x339 (=> $x144 (and $x150 $x337))))
(let (($x341 (=> $x142 (and $x144 $x339))))
(let (($x131 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(=> $x128 (= (v_b_SP_G_0$ ?v0) b_Infinity$)))) :qid k!38))
))
(let (($x127 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(=> $x123 (= (v_b_SP_G_0$ ?v0) 0))) :qid k!38))
))
(let (($x139 (and true (and $x127 (and $x131 (and $x135 true))))))
(let (($x140 (and true $x139)))
(let (($x343 (=> $x140 (and $x142 $x341))))
(let (($x344 (not $x343)))
(let (($x705 (forall ((?v0 B_Vertex$) )(! (let (($x693 (exists ((?v1 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x666 (+ ?x152 ?x268)))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let (($x684 (= ?x298 ?x666)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x687 (and $x286 $x684)))
(let (($x309 (< ?x268 ?x298)))
(and $x309 $x687))))))))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x308 (and $x128 (< (v_b_SP_G_2$ ?v0) b_Infinity$))))
(or (not $x308) $x693))))) :qid k!38))
))
(let (($x681 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x666 (+ ?x152 ?x268)))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let (($x669 (<= ?x298 ?x666)))
(or (not (and (fun_app$ v_b_Visited_G_2$ ?v1) (< ?x152 b_Infinity$))) $x669)))))) :qid k!38))
))
(let (($x733 (or (not $x681) $x705)))
(let (($x738 (and $x681 $x733)))
(let (($x663 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x298 (v_b_SP_G_2$ ?v0)))
(let (($x299 (<= ?x298 ?x268)))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(let (($x297 (and $x295 $x296)))
(let (($x659 (not $x297)))
(or $x659 $x299))))))))) :qid k!38))
))
(let (($x745 (or (not $x663) $x738)))
(let (($x750 (and $x663 $x745)))
(let (($x757 (or (not $x294) $x750)))
(let (($x762 (and $x294 $x757)))
(let (($x769 (or $x768 $x762)))
(let (($x774 (and $x292 $x769)))
(let (($x781 (or $x780 $x774)))
(let (($x786 (and $x647 $x781)))
(let (($x793 (or (not $x285) $x786)))
(let (($x798 (and $x285 $x793)))
(let (($x612 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x265 (+ ?x254 ?x263)))
(let (($x267 (and (< ?x263 b_Infinity$) (< ?x265 ?x171))))
(or $x267 $x273)))))))) :qid k!38))
))
(let (($x606 (forall ((?v0 B_Vertex$) )(! (let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x265 (+ ?x254 ?x263)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x269 (= ?x268 ?x265)))
(let (($x267 (and (< ?x263 b_Infinity$) (< ?x265 (fun_app$a v_b_SP_G_1$ ?v0)))))
(let (($x272 (not $x267)))
(or $x272 $x269)))))))) :qid k!38))
))
(let (($x615 (and $x606 $x612)))
(let (($x618 (and $x261 $x615)))
(let (($x600 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x256 (<= ?x254 ?x171)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x175 $x256))))) :qid k!38))
))
(let (($x621 (and $x600 $x618)))
(let (($x624 (and $x255 $x621)))
(let (($x627 (and $x253 $x624)))
(let (($x630 (and $x206 $x627)))
(let (($x805 (or (not $x630) $x798)))
(let (($x552 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x516 (+ ?x152 ?x227)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x540 (<= ?x230 ?x516)))
(or (not (and (< ?x227 b_Infinity$) (< ?x152 b_Infinity$))) $x540)))))) :qid k!38))
))
(let (($x568 (or (not $x552) $x243)))
(let (($x573 (and $x552 $x568)))
(let (($x537 (forall ((?v0 B_Vertex$) )(! (let (($x525 (exists ((?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x516 (+ ?x152 ?x227)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x519 (= ?x230 ?x516)))
(let (($x231 (< ?x227 ?x230)))
(and $x231 $x519))))))) :qid k!38))
))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let (($x228 (< ?x227 b_Infinity$)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x229 (and $x128 $x228)))
(or (not $x229) $x525))))))) :qid k!38))
))
(let (($x580 (or (not $x537) $x573)))
(let (($x585 (and $x537 $x580)))
(let (($x592 (or (not (and $x207 (and $x209 (and $x212 (and $x214 $x217))))) $x585)))
(let (($x810 (and $x592 $x805)))
(let (($x444 (forall ((?v0 B_Vertex$) )(! (let (($x432 (exists ((?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x405 (+ ?x152 ?x171)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x423 (= ?x179 ?x405)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x426 (and $x175 $x423)))
(let (($x190 (< ?x171 ?x179)))
(and $x190 $x426))))))))) :qid k!38))
))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x188 (< ?x171 b_Infinity$)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x189 (and $x128 $x188)))
(or (not $x189) $x432))))))) :qid k!38))
))
(let (($x420 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x405 (+ ?x152 ?x171)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x408 (<= ?x179 ?x405)))
(or (not (and (fun_app$ v_b_Visited_G_1$ ?v1) (< ?x152 b_Infinity$))) $x408)))))) :qid k!38))
))
(let (($x454 (and $x420 $x444)))
(let (($x402 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?v0)))
(let (($x180 (<= ?x179 ?x171)))
(let (($x177 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x176 (not $x175)))
(let (($x178 (and $x176 $x177)))
(let (($x398 (not $x178)))
(or $x398 $x180))))))))) :qid k!38))
))
(let (($x457 (and $x402 $x454)))
(let (($x460 (and $x173 $x457)))
(let (($x463 (and $x170 $x460)))
(let (($x395 (forall ((?v0 B_Vertex$) )(! (let (($x165 (exists ((?v1 B_Vertex$) )(! (let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x163 (and $x133 (= (v_b_SP_G_0$ ?v0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?v0)) $x163))) :qid k!38))
))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x160 (and $x128 (< (v_b_SP_G_0$ ?v0) b_Infinity$))))
(or (not $x160) $x165))))) :qid k!38))
))
(let (($x477 (and $x395 $x463)))
(let (($x817 (or (not $x477) $x810)))
(let (($x822 (and $x395 $x817)))
(let (($x388 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x147 (v_b_SP_G_0$ ?v0)))
(let (($x156 (<= ?x147 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x154 (and $x133 $x153)))
(or (not $x154) $x156))))))) :qid k!38))
))
(let (($x829 (or (not $x388) $x822)))
(let (($x834 (and $x388 $x829)))
(let (($x381 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v1)))
(let ((?x147 (v_b_SP_G_0$ ?v0)))
(let (($x148 (<= ?x147 ?x124)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(let (($x146 (and $x134 (fun_app$ v_b_Visited_G_0$ ?v0))))
(let (($x377 (not $x146)))
(or $x377 $x148)))))))) :qid k!38))
))
(let (($x841 (or (not $x381) $x834)))
(let (($x846 (and $x381 $x841)))
(let (($x853 (or (not $x144) $x846)))
(let (($x858 (and $x144 $x853)))
(let (($x865 (or $x864 $x858)))
(let (($x870 (and $x142 $x865)))
(let (($x877 (or (not (and $x349 (and $x355 $x135))) $x870)))
(let (($x1318 (exists ((?v1 B_Vertex$) )(! (let ((?x298 (v_b_SP_G_2$ ?0)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let (($x1301 (= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1257 (>= (+ ?x268 ?x1258) 0)))
(let (($x1304 (not $x1257)))
(and $x1304 $x286 $x1301))))))))) :qid k!38))
))
(let (($x128 (not $x123)))
(let (($x1295 (and $x128 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?0))) 0)))))
(let (($x693 (exists ((?v1 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x666 (+ ?x152 ?x268)))
(let ((?x298 (v_b_SP_G_2$ ?0)))
(let (($x684 (= ?x298 ?x666)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x687 (and $x286 $x684)))
(let (($x309 (< ?x268 ?x298)))
(and $x309 $x687))))))))) :qid k!38))
))
(let (($x700 (or (not (and $x128 (< (v_b_SP_G_2$ ?0) b_Infinity$))) $x693)))
(let ((?x298 (v_b_SP_G_2$ ?1)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?0)))
(let ((?x152 (b_G$ (pair$ ?0 ?1))))
(let (($x1301 (= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?0)))
(let (($x1257 (>= (+ ?x268 ?x1258) 0)))
(let (($x1304 (not $x1257)))
(let (($x1313 (and $x1304 $x286 $x1301)))
(let ((?x666 (+ ?x152 ?x268)))
(let (($x684 (= ?x298 ?x666)))
(let (($x687 (and $x286 $x684)))
(let (($x309 (< ?x268 ?x298)))
(let (($x690 (and $x309 $x687)))
(let ((@x1312 (monotonicity (rewrite (= $x309 $x1304)) (monotonicity (rewrite (= $x684 $x1301)) (= $x687 (and $x286 $x1301))) (= $x690 (and $x1304 (and $x286 $x1301))))))
(let ((@x1317 (trans @x1312 (rewrite (= (and $x1304 (and $x286 $x1301)) $x1313)) (= $x690 $x1313))))
(let (($x1293 (= (< ?x268 b_Infinity$) (not (<= (+ b_Infinity$ (* (- 1) ?x268)) 0)))))
(let ((@x1297 (monotonicity (rewrite $x1293) (= (and $x128 (< ?x268 b_Infinity$)) $x1295))))
(let ((@x1300 (monotonicity @x1297 (= (not (and $x128 (< ?x268 b_Infinity$))) (not $x1295)))))
(let ((@x1323 (monotonicity @x1300 (quant-intro @x1317 (= $x693 $x1318)) (= $x700 (or (not $x1295) $x1318)))))
(let (($x1277 (>= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x918 (not $x917)))
(let (($x1271 (and $x286 $x918)))
(let (($x1274 (not $x1271)))
(let (($x1281 (or $x1274 $x1277)))
(let (($x669 (<= ?x298 ?x666)))
(let (($x676 (or (not (and $x286 (< ?x152 b_Infinity$))) $x669)))
(let ((@x920 (rewrite (= (< ?x152 b_Infinity$) $x918))))
(let ((@x1276 (monotonicity (monotonicity @x920 (= (and $x286 (< ?x152 b_Infinity$)) $x1271)) (= (not (and $x286 (< ?x152 b_Infinity$))) $x1274))))
(let ((@x1286 (quant-intro (monotonicity @x1276 (rewrite (= $x669 $x1277)) (= $x676 $x1281)) (= $x681 $x1284))))
(let ((@x1329 (monotonicity (monotonicity @x1286 (= (not $x681) $x1287)) (quant-intro @x1323 (= $x705 $x1324)) (= $x733 $x1327))))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?1)))
(let (($x295 (not $x286)))
(let (($x297 (and $x295 $x296)))
(let (($x659 (not $x297)))
(let (($x1262 (or $x659 $x1257)))
(let (($x299 (<= ?x298 ?x268)))
(let (($x660 (or $x659 $x299)))
(let ((@x1267 (quant-intro (monotonicity (rewrite (= $x299 $x1257)) (= $x660 $x1262)) (= $x663 $x1265))))
(let ((@x1335 (monotonicity (monotonicity @x1267 (= (not $x663) $x1268)) (monotonicity @x1286 @x1329 (= $x738 $x1330)) (= $x745 $x1333))))
(let ((@x1253 (quant-intro (rewrite (= (<= 0 ?x268) (>= ?x268 0))) (= $x294 $x1251))))
(let ((@x1341 (monotonicity (monotonicity @x1253 (= (not $x294) $x1254)) (monotonicity @x1267 @x1335 (= $x750 $x1336)) (= $x757 $x1339))))
(let ((@x1347 (monotonicity (monotonicity @x1253 @x1341 (= $x762 $x1342)) (= $x769 $x1345))))
(let ((@x1356 (monotonicity (monotonicity (monotonicity @x1347 (= $x774 $x1348)) (= $x781 $x1351)) (= $x786 $x1354))))
(let (($x1238 (>= (+ (fun_app$a v_b_SP_G_1$ ?0) (* (- 1) ?x268)) 0)))
(let ((@x1244 (quant-intro (rewrite (= (<= ?x268 (fun_app$a v_b_SP_G_1$ ?0)) $x1238)) (= $x285 $x1242))))
(let ((@x1359 (monotonicity (monotonicity @x1244 (= (not $x285) $x1245)) @x1356 (= $x793 $x1357))))
(let (($x1227 (and $x1075 (and $x253 (and $x1209 (and $x1204 (and $x261 (and $x1188 $x1194))))))))
(let (($x1225 (= $x627 (and $x253 (and $x1209 (and $x1204 (and $x261 (and $x1188 $x1194))))))))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?0)))
(let (($x273 (= ?x268 ?x171)))
(let (($x1170 (<= (+ ?x171 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?0)))) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?0)))) 0)))
(let (($x1174 (and (not $x1164) (not $x1170))))
(let (($x1191 (or $x1174 $x273)))
(let (($x267 (and (< (b_G$ (pair$ v_b_v_G_1$ ?0)) b_Infinity$) (< (+ ?x254 (b_G$ (pair$ v_b_v_G_1$ ?0))) ?x171))))
(let (($x609 (or $x267 $x273)))
(let ((@x1173 (rewrite (= (< (+ ?x254 (b_G$ (pair$ v_b_v_G_1$ ?0))) ?x171) (not $x1170)))))
(let ((@x1167 (rewrite (= (< (b_G$ (pair$ v_b_v_G_1$ ?0)) b_Infinity$) (not $x1164)))))
(let ((@x1193 (monotonicity (monotonicity @x1167 @x1173 (= $x267 $x1174)) (= $x609 $x1191))))
(let (($x1180 (= (+ ?x254 (b_G$ (pair$ v_b_v_G_1$ ?0)) (* (- 1) ?x268)) 0)))
(let (($x1177 (not $x1174)))
(let (($x1185 (or $x1177 $x1180)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?0))))
(let ((?x265 (+ ?x254 ?x263)))
(let (($x269 (= ?x268 ?x265)))
(let (($x272 (not $x267)))
(let (($x603 (or $x272 $x269)))
(let ((@x1179 (monotonicity (monotonicity @x1167 @x1173 (= $x267 $x1174)) (= $x272 $x1177))))
(let ((@x1190 (quant-intro (monotonicity @x1179 (rewrite (= $x269 $x1180)) (= $x603 $x1185)) (= $x606 $x1188))))
(let ((@x1214 (monotonicity @x1190 (quant-intro @x1193 (= $x612 $x1194)) (= $x615 (and $x1188 $x1194)))))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?0)))
(let (($x1201 (or $x175 (>= (+ ?x171 ?x1168) 0))))
(let (($x256 (<= ?x254 ?x171)))
(let (($x597 (or $x175 $x256)))
(let ((@x1203 (monotonicity (rewrite (= $x256 (>= (+ ?x171 ?x1168) 0))) (= $x597 $x1201))))
(let ((@x1220 (monotonicity (quant-intro @x1203 (= $x600 $x1204)) (monotonicity @x1214 (= $x618 (and $x261 (and $x1188 $x1194)))) (= $x621 (and $x1204 (and $x261 (and $x1188 $x1194)))))))
(let ((@x1223 (monotonicity (rewrite (= $x255 $x1209)) @x1220 (= $x624 (and $x1209 (and $x1204 (and $x261 (and $x1188 $x1194))))))))
(let (($x997 (<= (+ b_Infinity$ (* (- 1) ?x171)) 0)))
(let (($x998 (not $x997)))
(let (($x176 (not $x175)))
(let (($x1072 (and $x176 $x998)))
(let ((@x1074 (monotonicity (rewrite (= (< ?x171 b_Infinity$) $x998)) (= (and $x176 (< ?x171 b_Infinity$)) $x1072))))
(let ((@x1229 (monotonicity (quant-intro @x1074 (= $x206 $x1075)) (monotonicity @x1223 $x1225) (= $x630 $x1227))))
(let ((@x1237 (monotonicity (trans @x1229 (rewrite (= $x1227 $x1230)) (= $x630 $x1230)) (= (not $x630) $x1235))))
(let ((@x1365 (monotonicity @x1237 (monotonicity @x1244 @x1359 (= $x798 $x1360)) (= $x805 $x1363))))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?0)))
(let (($x1135 (>= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?1))) 0)))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(let (($x1095 (not $x1094)))
(let (($x1129 (and $x1095 $x918)))
(let (($x1132 (not $x1129)))
(let (($x1138 (or $x1132 $x1135)))
(let ((?x516 (+ ?x152 ?x227)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?1)))
(let (($x540 (<= ?x230 ?x516)))
(let (($x547 (or (not (and (< ?x227 b_Infinity$) (< ?x152 b_Infinity$))) $x540)))
(let ((@x1131 (monotonicity (rewrite (= (< ?x227 b_Infinity$) $x1095)) @x920 (= (and (< ?x227 b_Infinity$) (< ?x152 b_Infinity$)) $x1129))))
(let ((@x1134 (monotonicity @x1131 (= (not (and (< ?x227 b_Infinity$) (< ?x152 b_Infinity$))) $x1132))))
(let ((@x1143 (quant-intro (monotonicity @x1134 (rewrite (= $x540 $x1135)) (= $x547 $x1138)) (= $x552 $x1141))))
(let ((@x1149 (monotonicity (monotonicity @x1143 (= (not $x552) $x1144)) (= $x568 $x1147))))
(let (($x1117 (exists ((?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(and (not (>= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?0))) 0)) (= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?0))) 0)))) :qid k!38))
))
(let (($x1098 (and $x128 $x1095)))
(let (($x1101 (not $x1098)))
(let (($x1120 (or $x1101 $x1117)))
(let (($x525 (exists ((?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x516 (+ ?x152 ?x227)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?0)))
(let (($x519 (= ?x230 ?x516)))
(let (($x231 (< ?x227 ?x230)))
(and $x231 $x519))))))) :qid k!38))
))
(let (($x532 (or (not (and $x128 (< ?x227 b_Infinity$))) $x525)))
(let (($x1114 (and (not (>= (+ ?x227 (* (- 1) ?x230)) 0)) (= (+ ?x152 ?x227 (* (- 1) ?x230)) 0))))
(let (($x519 (= ?x230 ?x516)))
(let (($x231 (< ?x227 ?x230)))
(let (($x522 (and $x231 $x519)))
(let ((@x1116 (monotonicity (rewrite (= $x231 (not (>= (+ ?x227 (* (- 1) ?x230)) 0)))) (rewrite (= $x519 (= (+ ?x152 ?x227 (* (- 1) ?x230)) 0))) (= $x522 $x1114))))
(let ((@x1100 (monotonicity (rewrite (= (< ?x227 b_Infinity$) $x1095)) (= (and $x128 (< ?x227 b_Infinity$)) $x1098))))
(let ((@x1122 (monotonicity (monotonicity @x1100 (= (not (and $x128 (< ?x227 b_Infinity$))) $x1101)) (quant-intro @x1116 (= $x525 $x1117)) (= $x532 $x1120))))
(let ((@x1128 (monotonicity (quant-intro @x1122 (= $x537 $x1123)) (= (not $x537) $x1126))))
(let ((@x1155 (monotonicity @x1128 (monotonicity @x1143 @x1149 (= $x573 $x1150)) (= $x580 $x1153))))
(let ((@x1086 (rewrite (= (and $x1078 (and $x209 (and $x212 (and $x214 $x217)))) $x1084))))
(let (($x488 (and $x209 (and $x212 (and $x214 $x217)))))
(let (($x502 (and $x207 $x488)))
(let ((@x1083 (monotonicity (monotonicity (quant-intro @x1074 (= $x206 $x1075)) (= $x207 $x1078)) (= $x502 (and $x1078 $x488)))))
(let ((@x1091 (monotonicity (trans @x1083 @x1086 (= $x502 $x1084)) (= (not $x502) $x1089))))
(let ((@x1161 (monotonicity @x1091 (monotonicity (quant-intro @x1122 (= $x537 $x1123)) @x1155 (= $x585 $x1156)) (= $x592 $x1159))))
(let (($x1065 (= (and $x975 (and $x170 (and $x1046 (and $x1040 (and $x992 $x1032))))) $x1064)))
(let (($x1062 (= $x477 (and $x975 (and $x170 (and $x1046 (and $x1040 (and $x992 $x1032))))))))
(let (($x1026 (exists ((?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let (($x1007 (= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?0))) 0)))
(let (($x1012 (not $x1010)))
(and $x1012 $x175 $x1007))))))) :qid k!38))
))
(let (($x1001 (and $x128 $x998)))
(let (($x1004 (not $x1001)))
(let (($x1029 (or $x1004 $x1026)))
(let (($x432 (exists ((?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x405 (+ ?x152 ?x171)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?0)))
(let (($x423 (= ?x179 ?x405)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x426 (and $x175 $x423)))
(let (($x190 (< ?x171 ?x179)))
(and $x190 $x426))))))))) :qid k!38))
))
(let (($x439 (or (not (and $x128 (< ?x171 b_Infinity$))) $x432)))
(let (($x1007 (= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?1))) 0)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?1))) 0)))
(let (($x1012 (not $x1010)))
(let (($x1021 (and $x1012 $x175 $x1007)))
(let ((?x405 (+ ?x152 ?x171)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?1)))
(let (($x423 (= ?x179 ?x405)))
(let (($x426 (and $x175 $x423)))
(let (($x190 (< ?x171 ?x179)))
(let (($x429 (and $x190 $x426)))
(let ((@x1020 (monotonicity (rewrite (= $x190 $x1012)) (monotonicity (rewrite (= $x423 $x1007)) (= $x426 (and $x175 $x1007))) (= $x429 (and $x1012 (and $x175 $x1007))))))
(let ((@x1025 (trans @x1020 (rewrite (= (and $x1012 (and $x175 $x1007)) $x1021)) (= $x429 $x1021))))
(let ((@x1003 (monotonicity (rewrite (= (< ?x171 b_Infinity$) $x998)) (= (and $x128 (< ?x171 b_Infinity$)) $x1001))))
(let ((@x1031 (monotonicity (monotonicity @x1003 (= (not (and $x128 (< ?x171 b_Infinity$))) $x1004)) (quant-intro @x1025 (= $x432 $x1026)) (= $x439 $x1029))))
(let (($x985 (>= (+ ?x152 ?x171 (* (- 1) ?x179)) 0)))
(let (($x978 (and $x175 $x918)))
(let (($x981 (not $x978)))
(let (($x989 (or $x981 $x985)))
(let (($x408 (<= ?x179 ?x405)))
(let (($x415 (or (not (and $x175 (< ?x152 b_Infinity$))) $x408)))
(let ((@x983 (monotonicity (monotonicity @x920 (= (and $x175 (< ?x152 b_Infinity$)) $x978)) (= (not (and $x175 (< ?x152 b_Infinity$))) $x981))))
(let ((@x994 (quant-intro (monotonicity @x983 (rewrite (= $x408 $x985)) (= $x415 $x989)) (= $x420 $x992))))
(let ((@x1051 (monotonicity @x994 (quant-intro @x1031 (= $x444 $x1032)) (= $x454 (and $x992 $x1032)))))
(let (($x177 (fun_app$ v_b_Visited_G_1$ ?1)))
(let (($x178 (and $x176 $x177)))
(let (($x398 (not $x178)))
(let (($x1037 (or $x398 $x1010)))
(let (($x180 (<= ?x179 ?x171)))
(let (($x399 (or $x398 $x180)))
(let ((@x1042 (quant-intro (monotonicity (rewrite (= $x180 $x1010)) (= $x399 $x1037)) (= $x402 $x1040))))
(let ((@x1048 (quant-intro (rewrite (= (<= 0 ?x171) (>= ?x171 0))) (= $x173 $x1046))))
(let ((@x1057 (monotonicity @x1048 (monotonicity @x1042 @x1051 (= $x457 (and $x1040 (and $x992 $x1032)))) (= $x460 (and $x1046 (and $x1040 (and $x992 $x1032)))))))
(let ((@x1060 (monotonicity @x1057 (= $x463 (and $x170 (and $x1046 (and $x1040 (and $x992 $x1032))))))))
(let (($x969 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x952 (= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?0)) ?x152) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x902 (>= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?0))) 0)))
(let (($x955 (not $x902)))
(and $x955 $x133 $x952))))))) :qid k!38))
))
(let (($x946 (and $x128 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?0))) 0)))))
(let (($x949 (not $x946)))
(let (($x972 (or $x949 $x969)))
(let (($x165 (exists ((?v1 B_Vertex$) )(! (let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x163 (and $x133 (= (v_b_SP_G_0$ ?0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?0)) $x163))) :qid k!38))
))
(let (($x392 (or (not (and $x128 (< (v_b_SP_G_0$ ?0) b_Infinity$))) $x165)))
(let (($x952 (= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1)) ?x152) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?0)))
(let (($x902 (>= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1))) 0)))
(let (($x955 (not $x902)))
(let (($x964 (and $x955 $x133 $x952)))
(let (($x164 (and (< (v_b_SP_G_0$ ?0) (v_b_SP_G_0$ ?1)) (and $x133 (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x152))))))
(let (($x959 (= (and $x133 (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x152))) (and $x133 $x952))))
(let ((@x954 (rewrite (= (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x152)) $x952))))
(let ((@x963 (monotonicity (rewrite (= (< (v_b_SP_G_0$ ?0) (v_b_SP_G_0$ ?1)) $x955)) (monotonicity @x954 $x959) (= $x164 (and $x955 (and $x133 $x952))))))
(let ((@x968 (trans @x963 (rewrite (= (and $x955 (and $x133 $x952)) $x964)) (= $x164 $x964))))
(let (($x944 (= (< (v_b_SP_G_0$ ?0) b_Infinity$) (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?0))) 0)))))
(let ((@x948 (monotonicity (rewrite $x944) (= (and $x128 (< (v_b_SP_G_0$ ?0) b_Infinity$)) $x946))))
(let ((@x951 (monotonicity @x948 (= (not (and $x128 (< (v_b_SP_G_0$ ?0) b_Infinity$))) $x949))))
(let ((@x977 (quant-intro (monotonicity @x951 (quant-intro @x968 (= $x165 $x969)) (= $x392 $x972)) (= $x395 $x975))))
(let ((@x1071 (monotonicity (trans (monotonicity @x977 @x1060 $x1062) (rewrite $x1065) (= $x477 $x1064)) (= (not $x477) $x1069))))
(let ((@x1371 (monotonicity @x1071 (monotonicity @x1161 @x1365 (= $x810 $x1366)) (= $x817 $x1369))))
(let (($x928 (>= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1)) ?x152) 0)))
(let (($x921 (and $x133 $x918)))
(let (($x924 (not $x921)))
(let (($x931 (or $x924 $x928)))
(let ((?x147 (v_b_SP_G_0$ ?1)))
(let (($x156 (<= ?x147 (+ (v_b_SP_G_0$ ?0) ?x152))))
(let (($x385 (or (not (and $x133 (< ?x152 b_Infinity$))) $x156)))
(let ((@x926 (monotonicity (monotonicity @x920 (= (and $x133 (< ?x152 b_Infinity$)) $x921)) (= (not (and $x133 (< ?x152 b_Infinity$))) $x924))))
(let ((@x936 (quant-intro (monotonicity @x926 (rewrite (= $x156 $x928)) (= $x385 $x931)) (= $x388 $x934))))
(let ((@x1377 (monotonicity (monotonicity @x936 (= (not $x388) $x937)) (monotonicity @x977 @x1371 (= $x822 $x1372)) (= $x829 $x1375))))
(let (($x134 (not $x133)))
(let (($x146 (and $x134 (fun_app$ v_b_Visited_G_0$ ?1))))
(let (($x377 (not $x146)))
(let (($x906 (or $x377 $x902)))
(let ((?x124 (v_b_SP_G_0$ ?0)))
(let (($x148 (<= ?x147 ?x124)))
(let (($x378 (or $x377 $x148)))
(let ((@x911 (quant-intro (monotonicity (rewrite (= $x148 $x902)) (= $x378 $x906)) (= $x381 $x909))))
(let ((@x1383 (monotonicity (monotonicity @x911 (= (not $x381) $x912)) (monotonicity @x936 @x1377 (= $x834 $x1378)) (= $x841 $x1381))))
(let ((@x896 (quant-intro (rewrite (= (<= 0 ?x124) (>= ?x124 0))) (= $x144 $x894))))
(let ((@x1389 (monotonicity (monotonicity @x896 (= (not $x144) $x897)) (monotonicity @x911 @x1383 (= $x846 $x1384)) (= $x853 $x1387))))
(let ((@x1395 (monotonicity (monotonicity @x896 @x1389 (= $x858 $x1390)) (= $x865 $x1393))))
(let ((@x890 (monotonicity (rewrite (= (and $x349 (and $x355 $x135)) $x885)) (= (not (and $x349 (and $x355 $x135))) (not $x885)))))
(let ((@x1401 (monotonicity @x890 (monotonicity @x1395 (= $x870 $x1396)) (= $x877 (or (not $x885) $x1396)))))
(let (($x313 (exists ((?v1 B_Vertex$) )(! (let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x311 (and $x286 (= (v_b_SP_G_2$ ?0) (+ (v_b_SP_G_2$ ?v1) (b_G$ (pair$ ?v1 ?0)))))))
(let ((?x298 (v_b_SP_G_2$ ?0)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x309 (< ?x268 ?x298)))
(and $x309 $x311)))))) :qid k!38))
))
(let (($x308 (and $x128 (< ?x268 b_Infinity$))))
(let (($x314 (=> $x308 $x313)))
(let ((@x686 (monotonicity (rewrite (= (+ ?x268 ?x152) ?x666)) (= (= ?x298 (+ ?x268 ?x152)) $x684))))
(let ((@x692 (monotonicity (monotonicity @x686 (= (and $x286 (= ?x298 (+ ?x268 ?x152))) $x687)) (= (and $x309 (and $x286 (= ?x298 (+ ?x268 ?x152)))) $x690))))
(let ((@x698 (monotonicity (quant-intro @x692 (= $x313 $x693)) (= $x314 (=> $x308 $x693)))))
(let ((@x707 (quant-intro (trans @x698 (rewrite (= (=> $x308 $x693) $x700)) (= $x314 $x700)) (= $x315 $x705))))
(let ((@x714 (trans (monotonicity @x707 (= $x316 (and $x705 false))) (rewrite (= (and $x705 false) false)) (= $x316 false))))
(let ((@x721 (trans (monotonicity @x714 (= $x317 (=> false true))) (rewrite (= (=> false true) true)) (= $x317 true))))
(let ((@x728 (trans (monotonicity @x707 @x721 (= $x318 (and $x705 true))) (rewrite (= (and $x705 true) $x705)) (= $x318 $x705))))
(let (($x153 (< ?x152 b_Infinity$)))
(let (($x302 (and $x286 $x153)))
(let (($x305 (=> $x302 (<= ?x298 (+ ?x268 ?x152)))))
(let ((@x671 (monotonicity (rewrite (= (+ ?x268 ?x152) ?x666)) (= (<= ?x298 (+ ?x268 ?x152)) $x669))))
(let ((@x680 (trans (monotonicity @x671 (= $x305 (=> $x302 $x669))) (rewrite (= (=> $x302 $x669) $x676)) (= $x305 $x676))))
(let ((@x731 (monotonicity (quant-intro @x680 (= $x306 $x681)) @x728 (= $x319 (=> $x681 $x705)))))
(let ((@x740 (monotonicity (quant-intro @x680 (= $x306 $x681)) (trans @x731 (rewrite (= (=> $x681 $x705) $x733)) (= $x319 $x733)) (= (and $x306 $x319) $x738))))
(let ((@x743 (monotonicity (quant-intro (rewrite (= (=> $x297 $x299) $x660)) (= $x301 $x663)) @x740 (= $x321 (=> $x663 $x738)))))
(let ((@x752 (monotonicity (quant-intro (rewrite (= (=> $x297 $x299) $x660)) (= $x301 $x663)) (trans @x743 (rewrite (= (=> $x663 $x738) $x745)) (= $x321 $x745)) (= (and $x301 $x321) $x750))))
(let ((@x761 (trans (monotonicity @x752 (= $x323 (=> $x294 $x750))) (rewrite (= (=> $x294 $x750) $x757)) (= $x323 $x757))))
(let ((@x767 (monotonicity (monotonicity @x761 (= (and $x294 $x323) $x762)) (= $x325 (=> $x292 $x762)))))
(let ((@x776 (monotonicity (trans @x767 (rewrite (= (=> $x292 $x762) $x769)) (= $x325 $x769)) (= (and $x292 $x325) $x774))))
(let ((@x649 (quant-intro (rewrite (= (=> $x286 $x273) (or $x295 $x273))) (= $x288 $x647))))
(let ((@x654 (monotonicity @x649 (rewrite (= (and true true) true)) (= $x290 (and $x647 true)))))
(let ((@x779 (monotonicity (trans @x654 (rewrite (= (and $x647 true) $x647)) (= $x290 $x647)) @x776 (= $x327 (=> $x647 $x774)))))
(let ((@x788 (monotonicity @x649 (trans @x779 (rewrite (= (=> $x647 $x774) $x781)) (= $x327 $x781)) (= (and $x288 $x327) $x786))))
(let ((@x797 (trans (monotonicity @x788 (= $x329 (=> $x285 $x786))) (rewrite (= (=> $x285 $x786) $x793)) (= $x329 $x793))))
(let (($x628 (= (and $x253 (and $x255 (and $x258 (and $x261 (and $x271 $x275))))) $x627)))
(let ((@x617 (monotonicity (quant-intro (rewrite (= (=> $x267 $x269) $x603)) (= $x271 $x606)) (quant-intro (rewrite (= (=> $x272 $x273) $x609)) (= $x275 $x612)) (= (and $x271 $x275) $x615))))
(let ((@x623 (monotonicity (quant-intro (rewrite (= (=> $x176 $x256) $x597)) (= $x258 $x600)) (monotonicity @x617 (= (and $x261 (and $x271 $x275)) $x618)) (= (and $x258 (and $x261 (and $x271 $x275))) $x621))))
(let ((@x626 (monotonicity @x623 (= (and $x255 (and $x258 (and $x261 (and $x271 $x275)))) $x624))))
(let ((@x635 (monotonicity (monotonicity (monotonicity @x626 $x628) (= $x281 $x630)) (= $x282 (and true $x630)))))
(let ((@x641 (monotonicity (trans @x635 (rewrite (= (and true $x630) $x630)) (= $x282 $x630)) (= $x283 (and true $x630)))))
(let ((@x803 (monotonicity (trans @x641 (rewrite (= (and true $x630) $x630)) (= $x283 $x630)) (monotonicity @x797 (= (and $x285 $x329) $x798)) (= $x331 (=> $x630 $x798)))))
(let ((@x559 (monotonicity (rewrite (= (=> $x243 true) true)) (= $x245 (and $x243 true)))))
(let (($x228 (< ?x227 b_Infinity$)))
(let (($x238 (and $x228 $x153)))
(let (($x240 (=> $x238 (<= ?x230 (+ ?x227 ?x152)))))
(let ((@x542 (monotonicity (rewrite (= (+ ?x227 ?x152) ?x516)) (= (<= ?x230 (+ ?x227 ?x152)) $x540))))
(let ((@x551 (trans (monotonicity @x542 (= $x240 (=> $x238 $x540))) (rewrite (= (=> $x238 $x540) $x547)) (= $x240 $x547))))
(let ((@x566 (monotonicity (quant-intro @x551 (= $x241 $x552)) (trans @x559 (rewrite (= (and $x243 true) $x243)) (= $x245 $x243)) (= $x246 (=> $x552 $x243)))))
(let ((@x575 (monotonicity (quant-intro @x551 (= $x241 $x552)) (trans @x566 (rewrite (= (=> $x552 $x243) $x568)) (= $x246 $x568)) (= (and $x241 $x246) $x573))))
(let (($x235 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x232 (+ ?x227 ?x152)))
(let ((?x230 (fun_app$a v_b_SP_G_3$ ?0)))
(let (($x231 (< ?x227 ?x230)))
(and $x231 (= ?x230 ?x232))))))) :qid k!38))
))
(let (($x229 (and $x128 $x228)))
(let (($x236 (=> $x229 $x235)))
(let ((@x521 (monotonicity (rewrite (= (+ ?x227 ?x152) ?x516)) (= (= ?x230 (+ ?x227 ?x152)) $x519))))
(let ((@x527 (quant-intro (monotonicity @x521 (= (and $x231 (= ?x230 (+ ?x227 ?x152))) $x522)) (= $x235 $x525))))
(let ((@x536 (trans (monotonicity @x527 (= $x236 (=> $x229 $x525))) (rewrite (= (=> $x229 $x525) $x532)) (= $x236 $x532))))
(let ((@x578 (monotonicity (quant-intro @x536 (= $x237 $x537)) @x575 (= $x248 (=> $x537 $x573)))))
(let ((@x587 (monotonicity (quant-intro @x536 (= $x237 $x537)) (trans @x578 (rewrite (= (=> $x537 $x573) $x580)) (= $x248 $x580)) (= (and $x237 $x248) $x585))))
(let (($x486 (= (and $x212 (and $x214 (and $x217 true))) (and $x212 (and $x214 $x217)))))
(let ((@x484 (monotonicity (rewrite (= (and $x217 true) $x217)) (= (and $x214 (and $x217 true)) (and $x214 $x217)))))
(let ((@x490 (monotonicity (monotonicity @x484 $x486) (= (and $x209 (and $x212 (and $x214 (and $x217 true)))) $x488))))
(let ((@x497 (trans (monotonicity @x490 (= $x222 (and true $x488))) (rewrite (= (and true $x488) $x488)) (= $x222 $x488))))
(let ((@x501 (trans (monotonicity @x497 (= $x223 (and true $x488))) (rewrite (= (and true $x488) $x488)) (= $x223 $x488))))
(let ((@x507 (monotonicity (monotonicity @x501 (= (and $x207 $x223) $x502)) (= $x225 (and true $x502)))))
(let ((@x513 (monotonicity (trans @x507 (rewrite (= (and true $x502) $x502)) (= $x225 $x502)) (= $x226 (and true $x502)))))
(let ((@x590 (monotonicity (trans @x513 (rewrite (= (and true $x502) $x502)) (= $x226 $x502)) @x587 (= $x250 (=> $x502 $x585)))))
(let ((@x812 (monotonicity (trans @x590 (rewrite (= (=> $x502 $x585) $x592)) (= $x250 $x592)) (trans @x803 (rewrite (= (=> $x630 $x798) $x805)) (= $x331 $x805)) (= (and $x250 $x331) $x810))))
(let (($x194 (exists ((?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?0))))
(let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x184 (+ ?x171 ?x152)))
(let ((?x179 (fun_app$a v_b_SP_G_1$ ?0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x190 (< ?x171 ?x179)))
(and $x190 (and $x175 (= ?x179 ?x184))))))))) :qid k!38))
))
(let (($x188 (< ?x171 b_Infinity$)))
(let (($x189 (and $x128 $x188)))
(let (($x195 (=> $x189 $x194)))
(let ((@x425 (monotonicity (rewrite (= (+ ?x171 ?x152) ?x405)) (= (= ?x179 (+ ?x171 ?x152)) $x423))))
(let ((@x431 (monotonicity (monotonicity @x425 (= (and $x175 (= ?x179 (+ ?x171 ?x152))) $x426)) (= (and $x190 (and $x175 (= ?x179 (+ ?x171 ?x152)))) $x429))))
(let ((@x437 (monotonicity (quant-intro @x431 (= $x194 $x432)) (= $x195 (=> $x189 $x432)))))
(let ((@x446 (quant-intro (trans @x437 (rewrite (= (=> $x189 $x432) $x439)) (= $x195 $x439)) (= $x196 $x444))))
(let ((@x453 (trans (monotonicity @x446 (= $x197 (and $x444 true))) (rewrite (= (and $x444 true) $x444)) (= $x197 $x444))))
(let (($x183 (and $x175 $x153)))
(let (($x186 (=> $x183 (<= ?x179 (+ ?x171 ?x152)))))
(let ((@x410 (monotonicity (rewrite (= (+ ?x171 ?x152) ?x405)) (= (<= ?x179 (+ ?x171 ?x152)) $x408))))
(let ((@x419 (trans (monotonicity @x410 (= $x186 (=> $x183 $x408))) (rewrite (= (=> $x183 $x408) $x415)) (= $x186 $x415))))
(let ((@x456 (monotonicity (quant-intro @x419 (= $x187 $x420)) @x453 (= (and $x187 $x197) $x454))))
(let ((@x459 (monotonicity (quant-intro (rewrite (= (=> $x178 $x180) $x399)) (= $x182 $x402)) @x456 (= (and $x182 (and $x187 $x197)) $x457))))
(let ((@x465 (monotonicity (monotonicity @x459 (= (and $x173 (and $x182 (and $x187 $x197))) $x460)) (= (and $x170 (and $x173 (and $x182 (and $x187 $x197)))) $x463))))
(let ((@x472 (trans (monotonicity @x465 (= $x202 (and true $x463))) (rewrite (= (and true $x463) $x463)) (= $x202 $x463))))
(let ((@x476 (trans (monotonicity @x472 (= $x203 (and true $x463))) (rewrite (= (and true $x463) $x463)) (= $x203 $x463))))
(let ((@x397 (quant-intro (rewrite (= (=> (and $x128 (< ?x124 b_Infinity$)) $x165) $x392)) (= $x167 $x395))))
(let ((@x815 (monotonicity (monotonicity @x397 @x476 (= (and $x167 $x203) $x477)) @x812 (= $x333 (=> $x477 $x810)))))
(let ((@x824 (monotonicity @x397 (trans @x815 (rewrite (= (=> $x477 $x810) $x817)) (= $x333 $x817)) (= (and $x167 $x333) $x822))))
(let ((@x390 (quant-intro (rewrite (= (=> (and $x133 $x153) $x156) $x385)) (= $x158 $x388))))
(let ((@x833 (trans (monotonicity @x390 @x824 (= $x335 (=> $x388 $x822))) (rewrite (= (=> $x388 $x822) $x829)) (= $x335 $x829))))
(let ((@x839 (monotonicity (quant-intro (rewrite (= (=> $x146 $x148) $x378)) (= $x150 $x381)) (monotonicity @x390 @x833 (= (and $x158 $x335) $x834)) (= $x337 (=> $x381 $x834)))))
(let ((@x848 (monotonicity (quant-intro (rewrite (= (=> $x146 $x148) $x378)) (= $x150 $x381)) (trans @x839 (rewrite (= (=> $x381 $x834) $x841)) (= $x337 $x841)) (= (and $x150 $x337) $x846))))
(let ((@x857 (trans (monotonicity @x848 (= $x339 (=> $x144 $x846))) (rewrite (= (=> $x144 $x846) $x853)) (= $x339 $x853))))
(let ((@x863 (monotonicity (monotonicity @x857 (= (and $x144 $x339) $x858)) (= $x341 (=> $x142 $x858)))))
(let ((@x872 (monotonicity (trans @x863 (rewrite (= (=> $x142 $x858) $x865)) (= $x341 $x865)) (= (and $x142 $x341) $x870))))
(let (($x363 (and $x349 (and $x355 $x135))))
(let (($x366 (and true $x363)))
(let ((@x357 (quant-intro (rewrite (= (=> $x128 (= ?x124 b_Infinity$)) $x352)) (= $x131 $x355))))
(let ((@x362 (monotonicity @x357 (rewrite (= (and $x135 true) $x135)) (= (and $x131 (and $x135 true)) (and $x355 $x135)))))
(let ((@x351 (quant-intro (rewrite (= (=> $x123 (= ?x124 0)) (or $x128 (= ?x124 0)))) (= $x127 $x349))))
(let ((@x365 (monotonicity @x351 @x362 (= (and $x127 (and $x131 (and $x135 true))) $x363))))
(let ((@x372 (trans (monotonicity @x365 (= $x139 $x366)) (rewrite (= $x366 $x363)) (= $x139 $x363))))
(let ((@x376 (trans (monotonicity @x372 (= $x140 $x366)) (rewrite (= $x366 $x363)) (= $x140 $x363))))
(let ((@x881 (trans (monotonicity @x376 @x872 (= $x343 (=> $x363 $x870))) (rewrite (= (=> $x363 $x870) $x877)) (= $x343 $x877))))
(let ((@x1406 (trans (monotonicity @x881 (= $x344 (not $x877))) (monotonicity @x1401 (= (not $x877) $x1402)) (= $x344 $x1402))))
(let ((@x1408 (not-or-elim (mp (asserted $x344) @x1406 $x1402) $x885)))
(let ((@x1458 (mp~ (and-elim @x1408 $x355) (nnf-pos (refl (~ $x352 $x352)) (~ $x355 $x355)) $x355)))
(let ((@x3493 (mp @x1458 (quant-intro (refl (= $x352 $x352)) (= $x355 $x3488)) $x3488)))
(let ((@x5494 (rewrite (= (or (not $x3488) (or $x1533 $x5648)) (or (not $x3488) $x1533 $x5648)))))
(let ((@x5498 (mp ((_ quant-inst ?v0!5) (or (not $x3488) (or $x1533 $x5648))) @x5494 (or (not $x3488) $x1533 $x5648))))
(let ((@x6448 (unit-resolution (hypothesis $x6555) (mp (unit-resolution @x5498 @x3493 (hypothesis $x1534) $x5648) @x5583 $x5500) false)))
(let ((@x3189 (unit-resolution (lemma @x6448 (or $x5500 $x1533)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x6555 $x1538)) @x5027 $x6555) @x5072 false)))
(let (($x3539 (not $x3536)))
(let (($x3822 (or $x3539 $x3819)))
(let (($x3825 (not $x3822)))
(let (($x3519 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x928 (>= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x152) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(or $x134 $x917 $x928))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!38))
))
(let (($x3524 (not $x3519)))
(let (($x3828 (or $x3524 $x3825)))
(let (($x3831 (not $x3828)))
(let ((?x1517 (v_b_SP_G_0$ ?v0!4)))
(let ((?x1518 (* (- 1) ?x1517)))
(let ((?x1516 (v_b_SP_G_0$ ?v1!3)))
(let ((?x1508 (pair$ ?v1!3 ?v0!4)))
(let ((?x1509 (b_G$ ?x1508)))
(let ((?x2040 (+ ?x1509 ?x1516 ?x1518)))
(let (($x2043 (>= ?x2040 0)))
(let (($x1512 (<= (+ b_Infinity$ (* (- 1) ?x1509)) 0)))
(let (($x1507 (fun_app$ v_b_Visited_G_0$ ?v1!3)))
(let (($x2389 (not $x1507)))
(let (($x2404 (or $x2389 $x1512 $x2043)))
(let (($x3495 (forall ((?v0 B_Vertex$) )(! (let (($x133 (fun_app$ v_b_Visited_G_0$ ?v0)))
(not $x133)) :pattern ( (fun_app$ v_b_Visited_G_0$ ?v0) ) :qid k!38))
))
(let ((@x1463 (mp~ (and-elim @x1408 $x135) (nnf-pos (refl (~ $x134 $x134)) (~ $x135 $x135)) $x135)))
(let ((@x3500 (mp @x1463 (quant-intro (refl (= $x134 $x134)) (= $x135 $x3495)) $x3495)))
(let ((@x4007 (unit-resolution ((_ quant-inst ?v1!3) (or (not $x3495) $x2389)) @x3500 (hypothesis $x1507) false)))
(let (($x2409 (not $x2404)))
(let (($x3834 (or $x2409 $x3831)))
(let (($x3837 (not $x3834)))
(let (($x3510 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x902 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(or $x133 (not (fun_app$ v_b_Visited_G_0$ ?v0)) $x902))) :pattern ( (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?v0) ) :qid k!38))
))
(let (($x3515 (not $x3510)))
(let (($x3840 (or $x3515 $x3837)))
(let (($x3843 (not $x3840)))
(let (($x1493 (>= (+ (v_b_SP_G_0$ ?v1!1) (* (- 1) (v_b_SP_G_0$ ?v0!2))) 0)))
(let (($x1486 (fun_app$ v_b_Visited_G_0$ ?v0!2)))
(let (($x2343 (not $x1486)))
(let (($x1484 (fun_app$ v_b_Visited_G_0$ ?v1!1)))
(let (($x2358 (or $x1484 $x2343 $x1493)))
(let (($x2363 (not $x2358)))
(let (($x3846 (or $x2363 $x3843)))
(let (($x3849 (not $x3846)))
(let (($x3501 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(>= ?x124 0)) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!38))
))
(let (($x3506 (not $x3501)))
(let (($x3852 (or $x3506 $x3849)))
(let (($x3855 (not $x3852)))
(let ((?x1470 (v_b_SP_G_0$ ?v0!0)))
(let (($x1471 (>= ?x1470 0)))
(let (($x1472 (not $x1471)))
(let ((@x5071 (hypothesis $x1472)))
(let (($x5774 (<= ?x1470 0)))
(let (($x82 (<= b_Infinity$ 0)))
(let (($x83 (not $x82)))
(let ((@x86 (mp (asserted (< 0 b_Infinity$)) (rewrite (= (< 0 b_Infinity$) $x83)) $x83)))
(let (($x5117 (= b_Infinity$ ?x1470)))
(let ((@x5579 (symm (commutativity (= $x5117 (= ?x1470 b_Infinity$))) (= (= ?x1470 b_Infinity$) $x5117))))
(let (($x3131 (= ?x1470 b_Infinity$)))
(let (($x5739 (= ?v0!0 b_Source$)))
(let (($x5713 (not $x5739)))
(let ((@x5595 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1470 0)) $x1471)) @x5071 (not (= ?x1470 0)))))
(let (($x3482 (forall ((?v0 B_Vertex$) )(! (let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(or $x128 (= (v_b_SP_G_0$ ?v0) 0)))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!38))
))
(let ((@x3486 (quant-intro (refl (= (or $x128 (= ?x124 0)) (or $x128 (= ?x124 0)))) (= $x349 $x3482))))
(let ((@x1452 (nnf-pos (refl (~ (or $x128 (= ?x124 0)) (or $x128 (= ?x124 0)))) (~ $x349 $x349))))
(let ((@x3487 (mp (mp~ (and-elim @x1408 $x349) @x1452 $x349) @x3486 $x3482)))
(let (($x5769 (= (or (not $x3482) (or $x5713 (= ?x1470 0))) (or (not $x3482) $x5713 (= ?x1470 0)))))
(let ((@x5448 (mp ((_ quant-inst ?v0!0) (or (not $x3482) (or $x5713 (= ?x1470 0)))) (rewrite $x5769) (or (not $x3482) $x5713 (= ?x1470 0)))))
(let ((@x6281 (rewrite (= (or (not $x3488) (or $x5739 $x3131)) (or (not $x3488) $x5739 $x3131)))))
(let ((@x6173 (mp ((_ quant-inst ?v0!0) (or (not $x3488) (or $x5739 $x3131))) @x6281 (or (not $x3488) $x5739 $x3131))))
(let ((@x6446 (mp (unit-resolution @x6173 @x3493 (unit-resolution @x5448 @x3487 @x5595 $x5713) $x3131) @x5579 $x5117)))
(let ((@x6386 ((_ th-lemma arith triangle-eq) (or (not $x5117) (<= (+ b_Infinity$ (* (- 1) ?x1470)) 0)))))
(let ((@x6387 (unit-resolution @x6386 @x6446 (<= (+ b_Infinity$ (* (- 1) ?x1470)) 0))))
(let ((@x3142 (lemma ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x5774) @x6387 @x86 false) (or (not $x5774) $x1471))))
(let ((@x5085 (unit-resolution @x3142 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x5774 $x1471)) @x5071 $x5774) @x5071 false)))
(let (($x3858 (or $x1472 $x3855)))
(let (($x3861 (not $x3858)))
(let (($x3864 (or $x864 $x3861)))
(let (($x3867 (not $x3864)))
(let (($x5885 (not $x3482)))
(let (($x3145 (or $x5885 $x142)))
(let ((@x4320 (monotonicity (rewrite (= (= b_Source$ b_Source$) true)) (= (not (= b_Source$ b_Source$)) (not true)))))
(let ((@x5484 (trans @x4320 (rewrite (= (not true) false)) (= (not (= b_Source$ b_Source$)) false))))
(let ((@x5457 (monotonicity @x5484 (= (or (not (= b_Source$ b_Source$)) $x142) (or false $x142)))))
(let ((@x5606 (trans @x5457 (rewrite (= (or false $x142) $x142)) (= (or (not (= b_Source$ b_Source$)) $x142) $x142))))
(let ((@x4948 (monotonicity @x5606 (= (or $x5885 (or (not (= b_Source$ b_Source$)) $x142)) $x3145))))
(let ((@x5799 (trans @x4948 (rewrite (= $x3145 $x3145)) (= (or $x5885 (or (not (= b_Source$ b_Source$)) $x142)) $x3145))))
(let ((@x5800 (mp ((_ quant-inst b_Source$) (or $x5885 (or (not (= b_Source$ b_Source$)) $x142))) @x5799 $x3145)))
(let (($x3870 (or $x864 $x3867)))
(let (($x2843 (forall ((?v1 B_Vertex$) )(! (let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x2237 (= (+ ?x268 ?x1907 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(or (>= (+ ?x268 ?x1907) 0) $x295 (not $x2237)))))))) :qid k!38))
))
(let (($x2828 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x298 (v_b_SP_G_2$ ?v0)))
(let ((?x1258 (* (- 1) ?x298)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1277 (>= (+ ?x152 ?x268 ?x1258) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x295 (not $x286)))
(or $x295 $x917 $x1277))))))))) :qid k!38))
))
(let (($x2852 (not (or (not $x2828) $x1904 $x1909 (not $x2843)))))
(let (($x2857 (or $x2806 $x2852)))
(let (($x2783 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1257 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x296 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x2763 (not $x296)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x286 $x2763 $x1257))))) :qid k!38))
))
(let (($x2866 (not (or (not $x2783) (not $x2857)))))
(let (($x2871 (or $x2760 $x2866)))
(let (($x2879 (not (or $x1254 (not $x2871)))))
(let (($x2884 (or $x1843 $x2879)))
(let (($x2892 (not (or $x768 (not $x2884)))))
(let (($x2897 (or $x768 $x2892)))
(let (($x2905 (not (or $x780 (not $x2897)))))
(let (($x2910 (or $x1825 $x2905)))
(let (($x2918 (not (or $x1245 (not $x2910)))))
(let (($x2923 (or $x1808 $x2918)))
(let (($x2737 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x268 (v_b_SP_G_2$ ?v0)))
(let (($x273 (= ?x268 ?x171)))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1168 (* (- 1) ?x254)))
(let (($x1170 (<= (+ ?x171 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2712 (or $x1164 $x1170)))
(let (($x2713 (not $x2712)))
(or $x2713 $x273)))))))))) :qid k!38))
))
(let (($x2731 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (v_b_SP_G_2$ ?v0)))
(let ((?x1181 (* (- 1) ?x268)))
(let ((?x263 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x254 (fun_app$a v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1180 (= (+ ?x254 ?x263 ?x1181) 0)))
(let (($x1170 (<= (+ (fun_app$a v_b_SP_G_1$ ?v0) (* (- 1) ?x254) (* (- 1) ?x263)) 0)))
(let (($x1164 (<= (+ b_Infinity$ (* (- 1) ?x263)) 0)))
(or $x1164 $x1170 $x1180)))))))) :qid k!38))
))
(let (($x2934 (or $x1768 $x1773 $x252 $x1208 (not $x1204) $x2930 (not $x2731) (not $x2737) (not $x2923))))
(let (($x2935 (not $x2934)))
(let (($x2667 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1135 (>= (+ ?x152 ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(or $x1094 $x917 $x1135)))))) :qid k!38))
))
(let (($x2675 (not (or (not $x2667) $x243))))
(let (($x2680 (or $x2645 $x2675)))
(let (($x2623 (forall ((?v0 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let ((?x2186 (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2187 (= ?x2186 0)))
(let (($x2171 (<= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2612 (not (or $x2171 (not $x2187)))))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x1094 $x2612)))))))) :qid k!38))
))
(let (($x2689 (not (or (not $x2623) (not $x2680)))))
(let (($x2586 (forall ((?v1 B_Vertex$) )(! (let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let (($x2143 (= (+ ?x227 ?x1657 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x227 ?x1657) 0) (not $x2143)))))) :qid k!38))
))
(let (($x2594 (not (or $x1654 $x1659 (not $x2586)))))
(let (($x2694 (or $x2594 $x2689)))
(let (($x2571 (forall ((?v0 B_Vertex$) )(! (let (($x997 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x175 $x997))) :qid k!38))
))
(let (($x2707 (not (or (not $x2571) $x2701 $x2702 $x2703 $x2704 (not $x2694)))))
(let (($x2940 (or $x2707 $x2935)))
(let (($x2557 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x2123 (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2124 (= ?x2123 0)))
(let (($x2108 (<= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2546 (not (or $x2108 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2124)))))
(let (($x997 (<= (+ b_Infinity$ (* (- 1) ?x171)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x997 $x2546)))))))) :qid k!38))
))
(let (($x2529 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let (($x985 (>= (+ ?x152 ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x176 (not $x175)))
(or $x176 $x917 $x985))))))) :qid k!38))
))
(let (($x2507 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v1)))
(let (($x1010 (>= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x175 (not (fun_app$ v_b_Visited_G_1$ ?v0)) $x1010)))) :qid k!38))
))
(let (($x2484 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(let ((?x2085 (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2086 (= ?x2085 0)))
(let (($x2070 (<= (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2473 (not (or $x2070 (not (fun_app$ v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2086)))))
(let (($x942 (<= (+ b_Infinity$ (* (- 1) ?x124)) 0)))
(let (($x123 (= ?v0 b_Source$)))
(or $x123 $x942 $x2473)))))))) :qid k!38))
))
(let (($x2953 (or (not $x2484) $x2947 (not $x1046) (not $x2507) (not $x2529) (not $x2557) (not $x2940))))
(let (($x2954 (not $x2953)))
(let (($x2446 (forall ((?v1 B_Vertex$) )(! (let ((?x1535 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1536 (* (- 1) ?x1535)))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(or (>= (+ ?x124 ?x1536) 0) $x134 (not (= (+ ?x124 ?x1536 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))) :qid k!38))
))
(let (($x2454 (not (or $x1533 $x1538 (not $x2446)))))
(let (($x2959 (or $x2454 $x2954)))
(let (($x2431 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x152 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x928 (>= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x152) 0)))
(let (($x917 (<= (+ b_Infinity$ (* (- 1) ?x152)) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x134 (not $x133)))
(or $x134 $x917 $x928))))))) :qid k!38))
))
(let (($x2968 (not (or (not $x2431) (not $x2959)))))
(let (($x2973 (or $x2409 $x2968)))
(let (($x2386 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x902 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(or $x133 (not (fun_app$ v_b_Visited_G_0$ ?v0)) $x902))) :qid k!38))
))
(let (($x2982 (not (or (not $x2386) (not $x2973)))))
(let (($x2987 (or $x2363 $x2982)))
(let (($x2995 (not (or $x897 (not $x2987)))))
(let (($x3000 (or $x1472 $x2995)))
(let (($x3008 (not (or $x864 (not $x3000)))))
(let (($x3013 (or $x864 $x3008)))
(let (($x2832 (or (>= (+ ?x268 ?x1907) 0) $x295 (not (= (+ ?x268 ?x1907 (b_G$ (pair$ ?0 ?v0!20))) 0)))))
(let ((@x3731 (monotonicity (quant-intro (refl (= $x2832 $x2832)) (= $x2843 $x3724)) (= (not $x2843) $x3729))))
(let ((@x3719 (quant-intro (refl (= (or $x295 $x917 $x1277) (or $x295 $x917 $x1277))) (= $x2828 $x3715))))
(let ((@x3734 (monotonicity (monotonicity @x3719 (= (not $x2828) $x3720)) @x3731 (= (or (not $x2828) $x1904 $x1909 (not $x2843)) $x3732))))
(let ((@x3743 (monotonicity (monotonicity (monotonicity @x3734 (= $x2852 $x3735)) (= $x2857 $x3738)) (= (not $x2857) $x3741))))
(let ((@x3711 (quant-intro (refl (= (or $x286 (not $x296) $x1257) (or $x286 (not $x296) $x1257))) (= $x2783 $x3707))))
(let ((@x3746 (monotonicity (monotonicity @x3711 (= (not $x2783) $x3712)) @x3743 (= (or (not $x2783) (not $x2857)) $x3744))))
(let ((@x3755 (monotonicity (monotonicity (monotonicity @x3746 (= $x2866 $x3747)) (= $x2871 $x3750)) (= (not $x2871) $x3753))))
(let ((@x3702 (quant-intro (refl (= (>= ?x268 0) (>= ?x268 0))) (= $x1251 $x3698))))
(let ((@x3758 (monotonicity (monotonicity @x3702 (= $x1254 $x3703)) @x3755 (= (or $x1254 (not $x2871)) $x3756))))
(let ((@x3767 (monotonicity (monotonicity (monotonicity @x3758 (= $x2879 $x3759)) (= $x2884 $x3762)) (= (not $x2884) $x3765))))
(let ((@x3773 (monotonicity (monotonicity @x3767 (= (or $x768 (not $x2884)) $x3768)) (= $x2892 $x3771))))
(let ((@x3779 (monotonicity (monotonicity @x3773 (= $x2897 $x3774)) (= (not $x2897) $x3777))))
(let ((@x3694 (quant-intro (refl (= (or $x295 $x273) (or $x295 $x273))) (= $x647 $x3690))))
(let ((@x3782 (monotonicity (monotonicity @x3694 (= $x780 $x3695)) @x3779 (= (or $x780 (not $x2897)) $x3780))))
(let ((@x3791 (monotonicity (monotonicity (monotonicity @x3782 (= $x2905 $x3783)) (= $x2910 $x3786)) (= (not $x2910) $x3789))))
(let ((@x3688 (monotonicity (quant-intro (refl (= $x1238 $x1238)) (= $x1242 $x3681)) (= $x1245 $x3686))))
(let ((@x3797 (monotonicity (monotonicity @x3688 @x3791 (= (or $x1245 (not $x2910)) $x3792)) (= $x2918 $x3795))))
(let ((@x3803 (monotonicity (monotonicity @x3797 (= $x2923 $x3798)) (= (not $x2923) $x3801))))
(let ((@x3675 (refl (= (or (not (or $x1164 $x1170)) $x273) (or (not (or $x1164 $x1170)) $x273)))))
(let ((@x3680 (monotonicity (quant-intro @x3675 (= $x2737 $x3673)) (= (not $x2737) $x3678))))
(let ((@x3669 (quant-intro (refl (= (or $x1164 $x1170 $x1180) (or $x1164 $x1170 $x1180))) (= $x2731 $x3665))))
(let ((@x3662 (monotonicity (quant-intro (refl (= $x1201 $x1201)) (= $x1204 $x3655)) (= (not $x1204) $x3660))))
(let ((@x3806 (monotonicity @x3662 (monotonicity @x3669 (= (not $x2731) $x3670)) @x3680 @x3803 (= $x2934 $x3804))))
(let ((@x3621 (quant-intro (refl (= (or $x1094 $x917 $x1135) (or $x1094 $x917 $x1135))) (= $x2667 $x3617))))
(let ((@x3627 (monotonicity (monotonicity @x3621 (= (not $x2667) $x3622)) (= (or (not $x2667) $x243) $x3625))))
(let ((@x3636 (monotonicity (monotonicity (monotonicity @x3627 (= $x2675 $x3628)) (= $x2680 $x3631)) (= (not $x2680) $x3634))))
(let ((?x2186 (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?0) ?0))))))
(let (($x2187 (= ?x2186 0)))
(let (($x2171 (<= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?0)))) 0)))
(let (($x2612 (not (or $x2171 (not $x2187)))))
(let (($x2618 (or $x123 $x1094 $x2612)))
(let ((@x3616 (monotonicity (quant-intro (refl (= $x2618 $x2618)) (= $x2623 $x3609)) (= (not $x2623) $x3614))))
(let ((@x3642 (monotonicity (monotonicity @x3616 @x3636 (= (or (not $x2623) (not $x2680)) $x3637)) (= $x2689 $x3640))))
(let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let (($x2143 (= (+ ?x227 ?x1657 (b_G$ (pair$ ?0 ?v0!8))) 0)))
(let (($x2575 (or (>= (+ ?x227 ?x1657) 0) (not $x2143))))
(let ((@x3602 (monotonicity (quant-intro (refl (= $x2575 $x2575)) (= $x2586 $x3595)) (= (not $x2586) $x3600))))
(let ((@x3608 (monotonicity (monotonicity @x3602 (= (or $x1654 $x1659 (not $x2586)) $x3603)) (= $x2594 $x3606))))
(let ((@x3648 (monotonicity (monotonicity @x3608 @x3642 (= $x2694 $x3643)) (= (not $x2694) $x3646))))
(let ((@x3589 (quant-intro (refl (= (or $x175 $x997) (or $x175 $x997))) (= $x2571 $x3585))))
(let ((@x3651 (monotonicity (monotonicity @x3589 (= (not $x2571) $x3590)) @x3648 (= (or (not $x2571) $x2701 $x2702 $x2703 $x2704 (not $x2694)) $x3649))))
(let ((@x3812 (monotonicity (monotonicity @x3651 (= $x2707 $x3652)) (monotonicity @x3806 (= $x2935 $x3807)) (= $x2940 $x3810))))
(let ((?x2123 (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?0) ?0))))))
(let (($x2124 (= ?x2123 0)))
(let (($x2108 (<= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?0)))) 0)))
(let (($x2546 (not (or $x2108 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?0))) (not $x2124)))))
(let (($x2552 (or $x123 $x997 $x2546)))
(let ((@x3583 (monotonicity (quant-intro (refl (= $x2552 $x2552)) (= $x2557 $x3576)) (= (not $x2557) $x3581))))
(let ((@x3572 (quant-intro (refl (= (or $x176 $x917 $x985) (or $x176 $x917 $x985))) (= $x2529 $x3568))))
(let ((@x3564 (quant-intro (refl (= (or $x175 (not $x177) $x1010) (or $x175 (not $x177) $x1010))) (= $x2507 $x3560))))
(let ((@x3555 (quant-intro (refl (= (>= ?x171 0) (>= ?x171 0))) (= $x1046 $x3551))))
(let ((?x2085 (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?0) ?0))))))
(let (($x2086 (= ?x2085 0)))
(let (($x2070 (<= (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0)))) 0)))
(let (($x2473 (not (or $x2070 (not (fun_app$ v_b_Visited_G_0$ (?v1!6 ?0))) (not $x2086)))))
(let (($x942 (<= (+ b_Infinity$ (* (- 1) ?x124)) 0)))
(let (($x2479 (or $x123 $x942 $x2473)))
(let ((@x3549 (monotonicity (quant-intro (refl (= $x2479 $x2479)) (= $x2484 $x3542)) (= (not $x2484) $x3547))))
(let ((@x3818 (monotonicity @x3549 (monotonicity @x3555 (= (not $x1046) $x3556)) (monotonicity @x3564 (= (not $x2507) $x3565)) (monotonicity @x3572 (= (not $x2529) $x3573)) @x3583 (monotonicity @x3812 (= (not $x2940) $x3813)) (= $x2953 $x3816))))
(let (($x2435 (or (>= (+ ?x124 ?x1536) 0) $x134 (not (= (+ ?x124 ?x1536 (b_G$ (pair$ ?0 ?v0!5))) 0)))))
(let ((@x3535 (monotonicity (quant-intro (refl (= $x2435 $x2435)) (= $x2446 $x3528)) (= (not $x2446) $x3533))))
(let ((@x3541 (monotonicity (monotonicity @x3535 (= (or $x1533 $x1538 (not $x2446)) $x3536)) (= $x2454 $x3539))))
(let ((@x3824 (monotonicity @x3541 (monotonicity @x3818 (= $x2954 $x3819)) (= $x2959 $x3822))))
(let ((@x3523 (quant-intro (refl (= (or $x134 $x917 $x928) (or $x134 $x917 $x928))) (= $x2431 $x3519))))
(let ((@x3830 (monotonicity (monotonicity @x3523 (= (not $x2431) $x3524)) (monotonicity @x3824 (= (not $x2959) $x3825)) (= (or (not $x2431) (not $x2959)) $x3828))))
(let ((@x3839 (monotonicity (monotonicity (monotonicity @x3830 (= $x2968 $x3831)) (= $x2973 $x3834)) (= (not $x2973) $x3837))))
(let (($x2381 (or $x133 (not (fun_app$ v_b_Visited_G_0$ ?1)) $x902)))
(let ((@x3517 (monotonicity (quant-intro (refl (= $x2381 $x2381)) (= $x2386 $x3510)) (= (not $x2386) $x3515))))
(let ((@x3845 (monotonicity (monotonicity @x3517 @x3839 (= (or (not $x2386) (not $x2973)) $x3840)) (= $x2982 $x3843))))
(let ((@x3851 (monotonicity (monotonicity @x3845 (= $x2987 $x3846)) (= (not $x2987) $x3849))))
(let ((@x3505 (quant-intro (refl (= (>= ?x124 0) (>= ?x124 0))) (= $x894 $x3501))))
(let ((@x3854 (monotonicity (monotonicity @x3505 (= $x897 $x3506)) @x3851 (= (or $x897 (not $x2987)) $x3852))))
(let ((@x3863 (monotonicity (monotonicity (monotonicity @x3854 (= $x2995 $x3855)) (= $x3000 $x3858)) (= (not $x3000) $x3861))))
(let ((@x3869 (monotonicity (monotonicity @x3863 (= (or $x864 (not $x3000)) $x3864)) (= $x3008 $x3867))))
(let (($x2246 (forall ((?v1 B_Vertex$) )(! (let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x2237 (= (+ ?x268 ?x1907 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x2240 (and (not (>= (+ ?x268 ?x1907) 0)) $x286 $x2237)))
(not $x2240))))))) :qid k!38))
))
(let (($x1910 (not $x1909)))
(let (($x1905 (not $x1904)))
(let (($x2255 (and $x1284 $x1905 $x1910 $x2246)))
(let (($x1886 (not (and $x1878 (not $x1883)))))
(let (($x1892 (or $x1886 $x1891)))
(let (($x1893 (not $x1892)))
(let (($x2260 (or $x1893 $x2255)))
(let (($x2263 (and $x1265 $x2260)))
(let (($x1859 (not (and (not $x1855) $x1857))))
(let (($x1865 (or $x1859 $x1864)))
(let (($x1866 (not $x1865)))
(let (($x2266 (or $x1866 $x2263)))
(let (($x2269 (and $x1251 $x2266)))
(let (($x2272 (or $x1843 $x2269)))
(let (($x2275 (and $x292 $x2272)))
(let (($x2278 (or $x768 $x2275)))
(let (($x2281 (and $x647 $x2278)))
(let (($x2284 (or $x1825 $x2281)))
(let (($x2287 (and $x1242 $x2284)))
(let (($x2290 (or $x1808 $x2287)))
(let (($x1774 (not $x1773)))
(let (($x1769 (not $x1768)))
(let (($x2296 (and $x1769 $x1774 $x253 $x1209 $x1204 $x261 $x1188 $x1194 $x2290)))
(let (($x1744 (not $x243)))
(let (($x1747 (and $x1141 $x1744)))
(let (($x1728 (not (and (not $x1719) (not $x1725)))))
(let (($x2207 (or $x1728 $x2204)))
(let (($x2210 (not $x2207)))
(let (($x2213 (or $x2210 $x1747)))
(let (($x2198 (forall ((?v0 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let ((?x2186 (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2187 (= ?x2186 0)))
(let (($x2171 (<= (+ ?x227 (* (- 1) (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2192 (and (not $x2171) $x2187)))
(let (($x1094 (<= (+ b_Infinity$ (* (- 1) ?x227)) 0)))
(let (($x1095 (not $x1094)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1098 (and $x128 $x1095)))
(let (($x1101 (not $x1098)))
(or $x1101 $x2192)))))))))))) :qid k!38))
))
(let (($x2216 (and $x2198 $x2213)))
(let (($x2152 (forall ((?v1 B_Vertex$) )(! (let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let (($x2143 (= (+ ?x227 ?x1657 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(let (($x2146 (and (not (>= (+ ?x227 ?x1657) 0)) $x2143)))
(not $x2146)))))) :qid k!38))
))
(let (($x1660 (not $x1659)))
(let (($x1655 (not $x1654)))
(let (($x2158 (and $x1655 $x1660 $x2152)))
(let (($x2219 (or $x2158 $x2216)))
(let (($x1636 (forall ((?v0 B_Vertex$) )(! (let (($x997 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0))) 0)))
(let (($x998 (not $x997)))
(let (($x175 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x176 (not $x175)))
(let (($x1072 (and $x176 $x998)))
(not $x1072)))))) :qid k!38))
))
(let (($x2225 (and $x1636 $x209 $x212 $x214 $x217 $x2219)))
(let (($x2301 (or $x2225 $x2296)))
(let (($x2135 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x2123 (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2124 (= ?x2123 0)))
(let ((?x1608 (?v1!7 ?v0)))
(let (($x1613 (fun_app$ v_b_Visited_G_1$ ?x1608)))
(let (($x2129 (and (not (<= (+ ?x171 (* (- 1) (fun_app$a v_b_SP_G_1$ ?x1608))) 0)) $x1613 $x2124)))
(let (($x997 (<= (+ b_Infinity$ (* (- 1) ?x171)) 0)))
(let (($x998 (not $x997)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1001 (and $x128 $x998)))
(let (($x1004 (not $x1001)))
(or $x1004 $x2129))))))))))))) :qid k!38))
))
(let (($x2097 (forall ((?v0 B_Vertex$) )(! (let ((?x124 (v_b_SP_G_0$ ?v0)))
(let ((?x2085 (+ ?x124 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2086 (= ?x2085 0)))
(let ((?x1573 (?v1!6 ?v0)))
(let (($x1578 (fun_app$ v_b_Visited_G_0$ ?x1573)))
(let (($x2091 (and (not (<= (+ ?x124 (* (- 1) (v_b_SP_G_0$ ?x1573))) 0)) $x1578 $x2086)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x946 (and $x128 (not (<= (+ b_Infinity$ (* (- 1) ?x124)) 0)))))
(let (($x949 (not $x946)))
(or $x949 $x2091))))))))))) :qid k!38))
))
(let (($x2310 (and $x2097 $x170 $x1046 $x1040 $x992 $x2135 $x2301)))
(let (($x1562 (forall ((?v1 B_Vertex$) )(! (let ((?x1535 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1536 (* (- 1) ?x1535)))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(let (($x1549 (and (not (>= (+ ?x124 ?x1536) 0)) $x133 (= (+ ?x124 ?x1536 (b_G$ (pair$ ?v1 ?v0!5))) 0))))
(not $x1549)))))) :qid k!38))
))
(let (($x2057 (and $x1534 $x1539 $x1562)))
(let (($x2315 (or $x2057 $x2310)))
(let (($x2318 (and $x934 $x2315)))
(let (($x1515 (not (and $x1507 (not $x1512)))))
(let (($x2046 (or $x1515 $x2043)))
(let (($x2049 (not $x2046)))
(let (($x2321 (or $x2049 $x2318)))
(let (($x2324 (and $x909 $x2321)))
(let (($x1488 (not (and (not $x1484) $x1486))))
(let (($x1494 (or $x1488 $x1493)))
(let (($x1495 (not $x1494)))
(let (($x2327 (or $x1495 $x2324)))
(let (($x2330 (and $x894 $x2327)))
(let (($x2333 (or $x1472 $x2330)))
(let (($x2336 (and $x142 $x2333)))
(let (($x2339 (or $x864 $x2336)))
(let ((@x2937 (rewrite (= (and $x1769 $x1774 $x253 $x1209 $x1204 $x261 $x2731 $x2737 $x2923) $x2935))))
(let (($x2237 (= (+ ?x268 ?x1907 (b_G$ (pair$ ?0 ?v0!20))) 0)))
(let (($x2240 (and (not (>= (+ ?x268 ?x1907) 0)) $x286 $x2237)))
(let (($x2243 (not $x2240)))
(let ((@x2838 (monotonicity (rewrite (= $x2240 (not $x2832))) (= $x2243 (not (not $x2832))))))
(let ((@x2845 (quant-intro (trans @x2838 (rewrite (= (not (not $x2832)) $x2832)) (= $x2243 $x2832)) (= $x2246 $x2843))))
(let ((@x2815 (monotonicity (rewrite (= $x1271 (not (or $x295 $x917)))) (= $x1274 (not (not (or $x295 $x917)))))))
(let ((@x2819 (trans @x2815 (rewrite (= (not (not (or $x295 $x917))) (or $x295 $x917))) (= $x1274 (or $x295 $x917)))))
(let ((@x2827 (trans (monotonicity @x2819 (= $x1281 (or (or $x295 $x917) $x1277))) (rewrite (= (or (or $x295 $x917) $x1277) (or $x295 $x917 $x1277))) (= $x1281 (or $x295 $x917 $x1277)))))
(let ((@x2848 (monotonicity (quant-intro @x2827 (= $x1284 $x2828)) @x2845 (= $x2255 (and $x2828 $x1905 $x1910 $x2843)))))
(let ((@x2856 (trans @x2848 (rewrite (= (and $x2828 $x1905 $x1910 $x2843) $x2852)) (= $x2255 $x2852))))
(let ((@x2793 (monotonicity (rewrite (= (and $x1878 (not $x1883)) (not (or $x2786 $x1883)))) (= $x1886 (not (not (or $x2786 $x1883)))))))
(let ((@x2797 (trans @x2793 (rewrite (= (not (not (or $x2786 $x1883))) (or $x2786 $x1883))) (= $x1886 (or $x2786 $x1883)))))
(let ((@x2805 (trans (monotonicity @x2797 (= $x1892 (or (or $x2786 $x1883) $x1891))) (rewrite (= (or (or $x2786 $x1883) $x1891) $x2801)) (= $x1892 $x2801))))
(let ((@x2859 (monotonicity (monotonicity @x2805 (= $x1893 $x2806)) @x2856 (= $x2260 $x2857))))
(let ((@x2780 (rewrite (= (or (or $x286 (not $x296)) $x1257) (or $x286 (not $x296) $x1257)))))
(let ((@x2772 (rewrite (= (not (not (or $x286 (not $x296)))) (or $x286 (not $x296))))))
(let ((@x2770 (monotonicity (rewrite (= $x297 (not (or $x286 (not $x296))))) (= $x659 (not (not (or $x286 (not $x296))))))))
(let ((@x2777 (monotonicity (trans @x2770 @x2772 (= $x659 (or $x286 (not $x296)))) (= $x1262 (or (or $x286 (not $x296)) $x1257)))))
(let ((@x2785 (quant-intro (trans @x2777 @x2780 (= $x1262 (or $x286 (not $x296) $x1257))) (= $x1265 $x2783))))
(let ((@x2870 (trans (monotonicity @x2785 @x2859 (= $x2263 (and $x2783 $x2857))) (rewrite (= (and $x2783 $x2857) $x2866)) (= $x2263 $x2866))))
(let ((@x2747 (monotonicity (rewrite (= (and (not $x1855) $x1857) (not (or $x1855 $x2740)))) (= $x1859 (not (not (or $x1855 $x2740)))))))
(let ((@x2751 (trans @x2747 (rewrite (= (not (not (or $x1855 $x2740))) (or $x1855 $x2740))) (= $x1859 (or $x1855 $x2740)))))
(let ((@x2759 (trans (monotonicity @x2751 (= $x1865 (or (or $x1855 $x2740) $x1864))) (rewrite (= (or (or $x1855 $x2740) $x1864) $x2755)) (= $x1865 $x2755))))
(let ((@x2873 (monotonicity (monotonicity @x2759 (= $x1866 $x2760)) @x2870 (= $x2266 $x2871))))
(let ((@x2883 (trans (monotonicity @x2873 (= $x2269 (and $x1251 $x2871))) (rewrite (= (and $x1251 $x2871) $x2879)) (= $x2269 $x2879))))
(let ((@x2889 (monotonicity (monotonicity @x2883 (= $x2272 $x2884)) (= $x2275 (and $x292 $x2884)))))
(let ((@x2899 (monotonicity (trans @x2889 (rewrite (= (and $x292 $x2884) $x2892)) (= $x2275 $x2892)) (= $x2278 $x2897))))
(let ((@x2909 (trans (monotonicity @x2899 (= $x2281 (and $x647 $x2897))) (rewrite (= (and $x647 $x2897) $x2905)) (= $x2281 $x2905))))
(let ((@x2915 (monotonicity (monotonicity @x2909 (= $x2284 $x2910)) (= $x2287 (and $x1242 $x2910)))))
(let ((@x2925 (monotonicity (trans @x2915 (rewrite (= (and $x1242 $x2910) $x2918)) (= $x2287 $x2918)) (= $x2290 $x2923))))
(let ((@x2736 (monotonicity (rewrite (= $x1174 (not (or $x1164 $x1170)))) (= $x1191 (or (not (or $x1164 $x1170)) $x273)))))
(let ((@x2718 (monotonicity (rewrite (= $x1174 (not (or $x1164 $x1170)))) (= $x1177 (not (not (or $x1164 $x1170)))))))
(let ((@x2722 (trans @x2718 (rewrite (= (not (not (or $x1164 $x1170))) (or $x1164 $x1170))) (= $x1177 (or $x1164 $x1170)))))
(let ((@x2730 (trans (monotonicity @x2722 (= $x1185 (or (or $x1164 $x1170) $x1180))) (rewrite (= (or (or $x1164 $x1170) $x1180) (or $x1164 $x1170 $x1180))) (= $x1185 (or $x1164 $x1170 $x1180)))))
(let ((@x2928 (monotonicity (quant-intro @x2730 (= $x1188 $x2731)) (quant-intro @x2736 (= $x1194 $x2737)) @x2925 (= $x2296 (and $x1769 $x1774 $x253 $x1209 $x1204 $x261 $x2731 $x2737 $x2923)))))
(let ((@x2654 (monotonicity (rewrite (= $x1129 (not (or $x1094 $x917)))) (= $x1132 (not (not (or $x1094 $x917)))))))
(let ((@x2658 (trans @x2654 (rewrite (= (not (not (or $x1094 $x917))) (or $x1094 $x917))) (= $x1132 (or $x1094 $x917)))))
(let ((@x2666 (trans (monotonicity @x2658 (= $x1138 (or (or $x1094 $x917) $x1135))) (rewrite (= (or (or $x1094 $x917) $x1135) (or $x1094 $x917 $x1135))) (= $x1138 (or $x1094 $x917 $x1135)))))
(let ((@x2672 (monotonicity (quant-intro @x2666 (= $x1141 $x2667)) (= $x1747 (and $x2667 $x1744)))))
(let ((@x2632 (monotonicity (rewrite (= (and (not $x1719) (not $x1725)) (not (or $x1719 $x1725)))) (= $x1728 (not (not (or $x1719 $x1725)))))))
(let ((@x2636 (trans @x2632 (rewrite (= (not (not (or $x1719 $x1725))) (or $x1719 $x1725))) (= $x1728 (or $x1719 $x1725)))))
(let ((@x2644 (trans (monotonicity @x2636 (= $x2207 (or (or $x1719 $x1725) $x2204))) (rewrite (= (or (or $x1719 $x1725) $x2204) $x2640)) (= $x2207 $x2640))))
(let ((@x2682 (monotonicity (monotonicity @x2644 (= $x2210 $x2645)) (trans @x2672 (rewrite (= (and $x2667 $x1744) $x2675)) (= $x1747 $x2675)) (= $x2213 $x2680))))
(let ((@x2605 (monotonicity (rewrite (= $x1098 (not (or $x123 $x1094)))) (= $x1101 (not (not (or $x123 $x1094)))))))
(let ((@x2609 (trans @x2605 (rewrite (= (not (not (or $x123 $x1094))) (or $x123 $x1094))) (= $x1101 (or $x123 $x1094)))))
(let ((@x2617 (monotonicity @x2609 (rewrite (= (and (not $x2171) $x2187) $x2612)) (= (or $x1101 (and (not $x2171) $x2187)) (or (or $x123 $x1094) $x2612)))))
(let ((@x2622 (trans @x2617 (rewrite (= (or (or $x123 $x1094) $x2612) $x2618)) (= (or $x1101 (and (not $x2171) $x2187)) $x2618))))
(let ((@x2685 (monotonicity (quant-intro @x2622 (= $x2198 $x2623)) @x2682 (= $x2216 (and $x2623 $x2680)))))
(let (($x2146 (and (not (>= (+ ?x227 ?x1657) 0)) $x2143)))
(let (($x2149 (not $x2146)))
(let ((@x2581 (monotonicity (rewrite (= $x2146 (not $x2575))) (= $x2149 (not (not $x2575))))))
(let ((@x2588 (quant-intro (trans @x2581 (rewrite (= (not (not $x2575)) $x2575)) (= $x2149 $x2575)) (= $x2152 $x2586))))
(let ((@x2598 (trans (monotonicity @x2588 (= $x2158 (and $x1655 $x1660 $x2586))) (rewrite (= (and $x1655 $x1660 $x2586) $x2594)) (= $x2158 $x2594))))
(let ((@x2696 (monotonicity @x2598 (trans @x2685 (rewrite (= (and $x2623 $x2680) $x2689)) (= $x2216 $x2689)) (= $x2219 $x2694))))
(let ((@x2566 (monotonicity (rewrite (= $x1072 (not (or $x175 $x997)))) (= (not $x1072) (not (not (or $x175 $x997)))))))
(let ((@x2570 (trans @x2566 (rewrite (= (not (not (or $x175 $x997))) (or $x175 $x997))) (= (not $x1072) (or $x175 $x997)))))
(let ((@x2699 (monotonicity (quant-intro @x2570 (= $x1636 $x2571)) @x2696 (= $x2225 (and $x2571 $x209 $x212 $x214 $x217 $x2694)))))
(let ((@x2711 (trans @x2699 (rewrite (= (and $x2571 $x209 $x212 $x214 $x217 $x2694) $x2707)) (= $x2225 $x2707))))
(let ((?x1608 (?v1!7 ?0)))
(let (($x1613 (fun_app$ v_b_Visited_G_1$ ?x1608)))
(let (($x2129 (and (not $x2108) $x1613 $x2124)))
(let (($x2132 (or $x1004 $x2129)))
(let ((@x2538 (monotonicity (rewrite (= $x1001 (not (or $x123 $x997)))) (= $x1004 (not (not (or $x123 $x997)))))))
(let ((@x2542 (trans @x2538 (rewrite (= (not (not (or $x123 $x997))) (or $x123 $x997))) (= $x1004 (or $x123 $x997)))))
(let ((@x2551 (monotonicity @x2542 (rewrite (= $x2129 $x2546)) (= $x2132 (or (or $x123 $x997) $x2546)))))
(let ((@x2556 (trans @x2551 (rewrite (= (or (or $x123 $x997) $x2546) $x2552)) (= $x2132 $x2552))))
(let ((@x2516 (monotonicity (rewrite (= $x978 (not (or $x176 $x917)))) (= $x981 (not (not (or $x176 $x917)))))))
(let ((@x2520 (trans @x2516 (rewrite (= (not (not (or $x176 $x917))) (or $x176 $x917))) (= $x981 (or $x176 $x917)))))
(let ((@x2528 (trans (monotonicity @x2520 (= $x989 (or (or $x176 $x917) $x985))) (rewrite (= (or (or $x176 $x917) $x985) (or $x176 $x917 $x985))) (= $x989 (or $x176 $x917 $x985)))))
(let ((@x2504 (rewrite (= (or (or $x175 (not $x177)) $x1010) (or $x175 (not $x177) $x1010)))))
(let ((@x2496 (rewrite (= (not (not (or $x175 (not $x177)))) (or $x175 (not $x177))))))
(let ((@x2494 (monotonicity (rewrite (= $x178 (not (or $x175 (not $x177))))) (= $x398 (not (not (or $x175 (not $x177))))))))
(let ((@x2501 (monotonicity (trans @x2494 @x2496 (= $x398 (or $x175 (not $x177)))) (= $x1037 (or (or $x175 (not $x177)) $x1010)))))
(let ((@x2509 (quant-intro (trans @x2501 @x2504 (= $x1037 (or $x175 (not $x177) $x1010))) (= $x1040 $x2507))))
(let ((?x1573 (?v1!6 ?0)))
(let (($x1578 (fun_app$ v_b_Visited_G_0$ ?x1573)))
(let (($x2091 (and (not $x2070) $x1578 $x2086)))
(let (($x2094 (or $x949 $x2091)))
(let ((@x2465 (monotonicity (rewrite (= $x946 (not (or $x123 $x942)))) (= $x949 (not (not (or $x123 $x942)))))))
(let ((@x2469 (trans @x2465 (rewrite (= (not (not (or $x123 $x942))) (or $x123 $x942))) (= $x949 (or $x123 $x942)))))
(let ((@x2478 (monotonicity @x2469 (rewrite (= $x2091 $x2473)) (= $x2094 (or (or $x123 $x942) $x2473)))))
(let ((@x2483 (trans @x2478 (rewrite (= (or (or $x123 $x942) $x2473) $x2479)) (= $x2094 $x2479))))
(let ((@x2945 (monotonicity (quant-intro @x2483 (= $x2097 $x2484)) @x2509 (quant-intro @x2528 (= $x992 $x2529)) (quant-intro @x2556 (= $x2135 $x2557)) (monotonicity @x2711 (trans @x2928 @x2937 (= $x2296 $x2935)) (= $x2301 $x2940)) (= $x2310 (and $x2484 $x170 $x1046 $x2507 $x2529 $x2557 $x2940)))))
(let ((@x2958 (trans @x2945 (rewrite (= (and $x2484 $x170 $x1046 $x2507 $x2529 $x2557 $x2940) $x2954)) (= $x2310 $x2954))))
(let (($x1549 (and (not (>= (+ ?x124 ?x1536) 0)) $x133 (= (+ ?x124 ?x1536 (b_G$ (pair$ ?0 ?v0!5))) 0))))
(let (($x1559 (not $x1549)))
(let ((@x2441 (monotonicity (rewrite (= $x1549 (not $x2435))) (= $x1559 (not (not $x2435))))))
(let ((@x2448 (quant-intro (trans @x2441 (rewrite (= (not (not $x2435)) $x2435)) (= $x1559 $x2435)) (= $x1562 $x2446))))
(let ((@x2458 (trans (monotonicity @x2448 (= $x2057 (and $x1534 $x1539 $x2446))) (rewrite (= (and $x1534 $x1539 $x2446) $x2454)) (= $x2057 $x2454))))
(let ((@x2418 (monotonicity (rewrite (= $x921 (not (or $x134 $x917)))) (= $x924 (not (not (or $x134 $x917)))))))
(let ((@x2422 (trans @x2418 (rewrite (= (not (not (or $x134 $x917))) (or $x134 $x917))) (= $x924 (or $x134 $x917)))))
(let ((@x2430 (trans (monotonicity @x2422 (= $x931 (or (or $x134 $x917) $x928))) (rewrite (= (or (or $x134 $x917) $x928) (or $x134 $x917 $x928))) (= $x931 (or $x134 $x917 $x928)))))
(let ((@x2964 (monotonicity (quant-intro @x2430 (= $x934 $x2431)) (monotonicity @x2458 @x2958 (= $x2315 $x2959)) (= $x2318 (and $x2431 $x2959)))))
(let ((@x2396 (monotonicity (rewrite (= (and $x1507 (not $x1512)) (not (or $x2389 $x1512)))) (= $x1515 (not (not (or $x2389 $x1512)))))))
(let ((@x2400 (trans @x2396 (rewrite (= (not (not (or $x2389 $x1512))) (or $x2389 $x1512))) (= $x1515 (or $x2389 $x1512)))))
(let ((@x2408 (trans (monotonicity @x2400 (= $x2046 (or (or $x2389 $x1512) $x2043))) (rewrite (= (or (or $x2389 $x1512) $x2043) $x2404)) (= $x2046 $x2404))))
(let ((@x2975 (monotonicity (monotonicity @x2408 (= $x2049 $x2409)) (trans @x2964 (rewrite (= (and $x2431 $x2959) $x2968)) (= $x2318 $x2968)) (= $x2321 $x2973))))
(let (($x2382 (= (or (or $x133 (not (fun_app$ v_b_Visited_G_0$ ?1))) $x902) $x2381)))
(let (($x2379 (= $x906 (or (or $x133 (not (fun_app$ v_b_Visited_G_0$ ?1))) $x902))))
(let (($x2367 (or $x133 (not (fun_app$ v_b_Visited_G_0$ ?1)))))
(let ((@x2373 (monotonicity (rewrite (= $x146 (not $x2367))) (= $x377 (not (not $x2367))))))
(let ((@x2380 (monotonicity (trans @x2373 (rewrite (= (not (not $x2367)) $x2367)) (= $x377 $x2367)) $x2379)))
(let ((@x2388 (quant-intro (trans @x2380 (rewrite $x2382) (= $x906 $x2381)) (= $x909 $x2386))))
(let ((@x2986 (trans (monotonicity @x2388 @x2975 (= $x2324 (and $x2386 $x2973))) (rewrite (= (and $x2386 $x2973) $x2982)) (= $x2324 $x2982))))
(let ((@x2350 (monotonicity (rewrite (= (and (not $x1484) $x1486) (not (or $x1484 $x2343)))) (= $x1488 (not (not (or $x1484 $x2343)))))))
(let ((@x2354 (trans @x2350 (rewrite (= (not (not (or $x1484 $x2343))) (or $x1484 $x2343))) (= $x1488 (or $x1484 $x2343)))))
(let ((@x2362 (trans (monotonicity @x2354 (= $x1494 (or (or $x1484 $x2343) $x1493))) (rewrite (= (or (or $x1484 $x2343) $x1493) $x2358)) (= $x1494 $x2358))))
(let ((@x2989 (monotonicity (monotonicity @x2362 (= $x1495 $x2363)) @x2986 (= $x2327 $x2987))))
(let ((@x2999 (trans (monotonicity @x2989 (= $x2330 (and $x894 $x2987))) (rewrite (= (and $x894 $x2987) $x2995)) (= $x2330 $x2995))))
(let ((@x3005 (monotonicity (monotonicity @x2999 (= $x2333 $x3000)) (= $x2336 (and $x142 $x3000)))))
(let ((@x3015 (monotonicity (trans @x3005 (rewrite (= (and $x142 $x3000) $x3008)) (= $x2336 $x3008)) (= $x2339 $x3013))))
(let (($x1933 (forall ((?v1 B_Vertex$) )(! (let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1920 (and (not (>= (+ ?x268 ?x1907) 0)) $x286 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x268 ?x1907) 0))))
(not $x1920)))))) :qid k!38))
))
(let (($x1927 (not (not (and $x1905 $x1910)))))
(let (($x1937 (and $x1927 $x1933)))
(let (($x1942 (and $x1284 $x1937)))
(let (($x1946 (or $x1893 $x1942)))
(let (($x1950 (and $x1265 $x1946)))
(let (($x1954 (or $x1866 $x1950)))
(let (($x1958 (and $x1251 $x1954)))
(let (($x1962 (or $x1843 $x1958)))
(let (($x1837 (not $x768)))
(let (($x1966 (and $x1837 $x1962)))
(let (($x1970 (or $x768 $x1966)))
(let (($x1974 (and $x647 $x1970)))
(let (($x1978 (or $x1825 $x1974)))
(let (($x1982 (and $x1242 $x1978)))
(let (($x1986 (or $x1808 $x1982)))
(let (($x1796 (and (and $x1769 $x1774) $x253 $x1209 $x1204 $x261 $x1188 $x1194)))
(let (($x1990 (and $x1796 $x1986)))
(let (($x1734 (not (or $x1728 (>= (+ ?x1722 ?x1716 ?x1730) 0)))))
(let (($x1751 (or $x1734 $x1747)))
(let (($x1708 (forall ((?v0 B_Vertex$) )(! (let ((?x227 (fun_app$a v_b_SP_G_3$ ?v0)))
(let ((?x1092 (* (- 1) ?x227)))
(let ((?x1694 (fun_app$a v_b_SP_G_3$ (?v1!9 ?v0))))
(let ((?x1699 (b_G$ (pair$ (?v1!9 ?v0) ?v0))))
(let (($x1701 (= (+ ?x1699 ?x1694 ?x1092) 0)))
(let (($x1702 (and (not (>= (+ ?x1694 ?x1092) 0)) $x1701)))
(let (($x1094 (<= (+ b_Infinity$ ?x1092) 0)))
(let (($x1095 (not $x1094)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1098 (and $x128 $x1095)))
(let (($x1101 (not $x1098)))
(or $x1101 $x1702))))))))))))) :qid k!38))
))
(let (($x1755 (and $x1708 $x1751)))
(let (($x1682 (forall ((?v1 B_Vertex$) )(! (let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(let (($x1670 (and (not (>= (+ ?x227 ?x1657) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x227 ?x1657) 0))))
(not $x1670))))) :qid k!38))
))
(let (($x1676 (not (not (and $x1655 $x1660)))))
(let (($x1686 (and $x1676 $x1682)))
(let (($x1759 (or $x1686 $x1755)))
(let (($x1647 (and $x1636 $x209 $x212 $x214 $x217)))
(let (($x1763 (and $x1647 $x1759)))
(let (($x1994 (or $x1763 $x1990)))
(let (($x1624 (forall ((?v0 B_Vertex$) )(! (let ((?x171 (fun_app$a v_b_SP_G_1$ ?v0)))
(let ((?x995 (* (- 1) ?x171)))
(let ((?x1608 (?v1!7 ?v0)))
(let ((?x1609 (fun_app$a v_b_SP_G_1$ ?x1608)))
(let ((?x1615 (b_G$ (pair$ ?x1608 ?v0))))
(let (($x1617 (= (+ ?x1615 ?x1609 ?x995) 0)))
(let (($x1613 (fun_app$ v_b_Visited_G_1$ ?x1608)))
(let (($x1618 (and (not (>= (+ ?x1609 ?x995) 0)) $x1613 $x1617)))
(let (($x997 (<= (+ b_Infinity$ ?x995) 0)))
(let (($x998 (not $x997)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x1001 (and $x128 $x998)))
(let (($x1004 (not $x1001)))
(or $x1004 $x1618))))))))))))))) :qid k!38))
))
(let (($x1589 (forall ((?v0 B_Vertex$) )(! (let ((?x1580 (b_G$ (pair$ (?v1!6 ?v0) ?v0))))
(let ((?x124 (v_b_SP_G_0$ ?v0)))
(let ((?x940 (* (- 1) ?x124)))
(let ((?x1573 (?v1!6 ?v0)))
(let ((?x1574 (v_b_SP_G_0$ ?x1573)))
(let (($x1582 (= (+ ?x1574 ?x940 ?x1580) 0)))
(let (($x1578 (fun_app$ v_b_Visited_G_0$ ?x1573)))
(let (($x1583 (and (not (>= (+ ?x1574 ?x940) 0)) $x1578 $x1582)))
(let (($x123 (= ?v0 b_Source$)))
(let (($x128 (not $x123)))
(let (($x946 (and $x128 (not (<= (+ b_Infinity$ ?x940) 0)))))
(let (($x949 (not $x946)))
(or $x949 $x1583))))))))))))) :qid k!38))
))
(let (($x1627 (and $x1589 $x170 $x1046 $x1040 $x992 $x1624)))
(let (($x1998 (and $x1627 $x1994)))
(let (($x1556 (not (not (and $x1534 $x1539)))))
(let (($x1566 (and $x1556 $x1562)))
(let (($x2002 (or $x1566 $x1998)))
(let (($x2006 (and $x934 $x2002)))
(let (($x1522 (not (or $x1515 (>= (+ ?x1516 ?x1518 ?x1509) 0)))))
(let (($x2010 (or $x1522 $x2006)))
(let (($x2014 (and $x909 $x2010)))
(let (($x2018 (or $x1495 $x2014)))
(let (($x2022 (and $x894 $x2018)))
(let (($x2026 (or $x1472 $x2022)))
(let (($x1466 (not $x864)))
(let (($x2030 (and $x1466 $x2026)))
(let (($x2034 (or $x864 $x2030)))
(let (($x1920 (and (not (>= (+ ?x268 ?x1907) 0)) $x286 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x268 ?x1907) 0))))
(let (($x1930 (not $x1920)))
(let (($x2235 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x268 ?x1907) (+ ?x268 ?x1907 (b_G$ (pair$ ?0 ?v0!20))))))
(let ((@x2239 (monotonicity (rewrite $x2235) (= (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x268 ?x1907) 0) $x2237))))
(let ((@x2248 (quant-intro (monotonicity (monotonicity @x2239 (= $x1920 $x2240)) (= $x1930 $x2243)) (= $x1933 $x2246))))
(let ((@x2251 (monotonicity (rewrite (= $x1927 (and $x1905 $x1910))) @x2248 (= $x1937 (and (and $x1905 $x1910) $x2246)))))
(let ((@x2259 (trans (monotonicity @x2251 (= $x1942 (and $x1284 (and (and $x1905 $x1910) $x2246)))) (rewrite (= (and $x1284 (and (and $x1905 $x1910) $x2246)) $x2255)) (= $x1942 $x2255))))
(let ((@x2268 (monotonicity (monotonicity (monotonicity @x2259 (= $x1946 $x2260)) (= $x1950 $x2263)) (= $x1954 $x2266))))
(let ((@x2277 (monotonicity (rewrite (= $x1837 $x292)) (monotonicity (monotonicity @x2268 (= $x1958 $x2269)) (= $x1962 $x2272)) (= $x1966 $x2275))))
(let ((@x2286 (monotonicity (monotonicity (monotonicity @x2277 (= $x1970 $x2278)) (= $x1974 $x2281)) (= $x1978 $x2284))))
(let ((@x2295 (monotonicity (monotonicity (monotonicity @x2286 (= $x1982 $x2287)) (= $x1986 $x2290)) (= $x1990 (and $x1796 $x2290)))))
(let ((@x2206 (monotonicity (rewrite (= (+ ?x1722 ?x1716 ?x1730) ?x2201)) (= (>= (+ ?x1722 ?x1716 ?x1730) 0) $x2204))))
(let ((@x2209 (monotonicity @x2206 (= (or $x1728 (>= (+ ?x1722 ?x1716 ?x1730) 0)) $x2207))))
(let (($x2192 (and (not $x2171) $x2187)))
(let (($x2195 (or $x1101 $x2192)))
(let ((?x1092 (* (- 1) ?x227)))
(let ((?x1694 (fun_app$a v_b_SP_G_3$ (?v1!9 ?0))))
(let ((?x1699 (b_G$ (pair$ (?v1!9 ?0) ?0))))
(let (($x1701 (= (+ ?x1699 ?x1694 ?x1092) 0)))
(let (($x1702 (and (not (>= (+ ?x1694 ?x1092) 0)) $x1701)))
(let (($x1705 (or $x1101 $x1702)))
(let ((@x2184 (monotonicity (rewrite (= (+ ?x1699 ?x1694 ?x1092) (+ ?x1092 ?x1694 ?x1699))) (= $x1701 (= (+ ?x1092 ?x1694 ?x1699) 0)))))
(let ((@x2191 (trans @x2184 (rewrite (= (= (+ ?x1092 ?x1694 ?x1699) 0) $x2187)) (= $x1701 $x2187))))
(let ((@x2168 (monotonicity (rewrite (= (+ ?x1694 ?x1092) (+ ?x1092 ?x1694))) (= (>= (+ ?x1694 ?x1092) 0) (>= (+ ?x1092 ?x1694) 0)))))
(let ((@x2175 (trans @x2168 (rewrite (= (>= (+ ?x1092 ?x1694) 0) $x2171)) (= (>= (+ ?x1694 ?x1092) 0) $x2171))))
(let ((@x2194 (monotonicity (monotonicity @x2175 (= (not (>= (+ ?x1694 ?x1092) 0)) (not $x2171))) @x2191 (= $x1702 $x2192))))
(let ((@x2218 (monotonicity (quant-intro (monotonicity @x2194 (= $x1705 $x2195)) (= $x1708 $x2198)) (monotonicity (monotonicity @x2209 (= $x1734 $x2210)) (= $x1751 $x2213)) (= $x1755 $x2216))))
(let (($x1670 (and (not (>= (+ ?x227 ?x1657) 0)) (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x227 ?x1657) 0))))
(let (($x1679 (not $x1670)))
(let (($x2141 (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x227 ?x1657) (+ ?x227 ?x1657 (b_G$ (pair$ ?0 ?v0!8))))))
(let ((@x2145 (monotonicity (rewrite $x2141) (= (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x227 ?x1657) 0) $x2143))))
(let ((@x2154 (quant-intro (monotonicity (monotonicity @x2145 (= $x1670 $x2146)) (= $x1679 $x2149)) (= $x1682 $x2152))))
(let ((@x2157 (monotonicity (rewrite (= $x1676 (and $x1655 $x1660))) @x2154 (= $x1686 (and (and $x1655 $x1660) $x2152)))))
(let ((@x2162 (trans @x2157 (rewrite (= (and (and $x1655 $x1660) $x2152) $x2158)) (= $x1686 $x2158))))
(let ((@x2224 (monotonicity (monotonicity @x2162 @x2218 (= $x1759 $x2219)) (= $x1763 (and $x1647 $x2219)))))
(let ((@x2303 (monotonicity (trans @x2224 (rewrite (= (and $x1647 $x2219) $x2225)) (= $x1763 $x2225)) (trans @x2295 (rewrite (= (and $x1796 $x2290) $x2296)) (= $x1990 $x2296)) (= $x1994 $x2301))))
(let ((?x995 (* (- 1) ?x171)))
(let ((?x1609 (fun_app$a v_b_SP_G_1$ ?x1608)))
(let ((?x1615 (b_G$ (pair$ ?x1608 ?0))))
(let (($x1617 (= (+ ?x1615 ?x1609 ?x995) 0)))
(let (($x1618 (and (not (>= (+ ?x1609 ?x995) 0)) $x1613 $x1617)))
(let (($x1621 (or $x1004 $x1618)))
(let ((@x2121 (monotonicity (rewrite (= (+ ?x1615 ?x1609 ?x995) (+ ?x995 ?x1609 ?x1615))) (= $x1617 (= (+ ?x995 ?x1609 ?x1615) 0)))))
(let ((@x2128 (trans @x2121 (rewrite (= (= (+ ?x995 ?x1609 ?x1615) 0) $x2124)) (= $x1617 $x2124))))
(let ((@x2105 (monotonicity (rewrite (= (+ ?x1609 ?x995) (+ ?x995 ?x1609))) (= (>= (+ ?x1609 ?x995) 0) (>= (+ ?x995 ?x1609) 0)))))
(let ((@x2112 (trans @x2105 (rewrite (= (>= (+ ?x995 ?x1609) 0) $x2108)) (= (>= (+ ?x1609 ?x995) 0) $x2108))))
(let ((@x2131 (monotonicity (monotonicity @x2112 (= (not (>= (+ ?x1609 ?x995) 0)) (not $x2108))) @x2128 (= $x1618 $x2129))))
(let (($x1582 (= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124) (b_G$ (pair$ ?x1573 ?0))) 0)))
(let (($x1583 (and (not (>= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124)) 0)) $x1578 $x1582)))
(let (($x1586 (or $x949 $x1583)))
(let (($x2081 (= (+ (* (- 1) ?x124) (v_b_SP_G_0$ ?x1573) (b_G$ (pair$ ?x1573 ?0))) 0)))
(let (($x2079 (= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124) (b_G$ (pair$ ?x1573 ?0))) (+ (* (- 1) ?x124) (v_b_SP_G_0$ ?x1573) (b_G$ (pair$ ?x1573 ?0))))))
(let ((@x2090 (trans (monotonicity (rewrite $x2079) (= $x1582 $x2081)) (rewrite (= $x2081 $x2086)) (= $x1582 $x2086))))
(let (($x2076 (= (not (>= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124)) 0)) (not $x2070))))
(let (($x1576 (>= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124)) 0)))
(let (($x2063 (= (+ (v_b_SP_G_0$ ?x1573) (* (- 1) ?x124)) (+ (* (- 1) ?x124) (v_b_SP_G_0$ ?x1573)))))
(let ((@x2067 (monotonicity (rewrite $x2063) (= $x1576 (>= (+ (* (- 1) ?x124) (v_b_SP_G_0$ ?x1573)) 0)))))
(let ((@x2074 (trans @x2067 (rewrite (= (>= (+ (* (- 1) ?x124) (v_b_SP_G_0$ ?x1573)) 0) $x2070)) (= $x1576 $x2070))))
(let ((@x2096 (monotonicity (monotonicity (monotonicity @x2074 $x2076) @x2090 (= $x1583 $x2091)) (= $x1586 $x2094))))
(let ((@x2306 (monotonicity (quant-intro @x2096 (= $x1589 $x2097)) (quant-intro (monotonicity @x2131 (= $x1621 $x2132)) (= $x1624 $x2135)) (= $x1627 (and $x2097 $x170 $x1046 $x1040 $x992 $x2135)))))
(let ((@x2309 (monotonicity @x2306 @x2303 (= $x1998 (and (and $x2097 $x170 $x1046 $x1040 $x992 $x2135) $x2301)))))
(let ((@x2314 (trans @x2309 (rewrite (= (and (and $x2097 $x170 $x1046 $x1040 $x992 $x2135) $x2301) $x2310)) (= $x1998 $x2310))))
(let ((@x2056 (monotonicity (rewrite (= $x1556 (and $x1534 $x1539))) (= $x1566 (and (and $x1534 $x1539) $x1562)))))
(let ((@x2061 (trans @x2056 (rewrite (= (and (and $x1534 $x1539) $x1562) $x2057)) (= $x1566 $x2057))))
(let ((@x2320 (monotonicity (monotonicity @x2061 @x2314 (= $x2002 $x2315)) (= $x2006 $x2318))))
(let ((@x2045 (monotonicity (rewrite (= (+ ?x1516 ?x1518 ?x1509) ?x2040)) (= (>= (+ ?x1516 ?x1518 ?x1509) 0) $x2043))))
(let ((@x2048 (monotonicity @x2045 (= (or $x1515 (>= (+ ?x1516 ?x1518 ?x1509) 0)) $x2046))))
(let ((@x2323 (monotonicity (monotonicity @x2048 (= $x1522 $x2049)) @x2320 (= $x2010 $x2321))))
(let ((@x2332 (monotonicity (monotonicity (monotonicity @x2323 (= $x2014 $x2324)) (= $x2018 $x2327)) (= $x2022 $x2330))))
(let ((@x2338 (monotonicity (rewrite (= $x1466 $x142)) (monotonicity @x2332 (= $x2026 $x2333)) (= $x2030 $x2336))))
(let (($x1921 (exists ((?v1 B_Vertex$) )(! (let ((?x1906 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1907 (* (- 1) ?x1906)))
(let ((?x268 (v_b_SP_G_2$ ?v1)))
(let (($x286 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (not (>= (+ ?x268 ?x1907) 0)) $x286 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x268 ?x1907) 0)))))) :qid k!38))
))
(let ((@x1939 (nnf-neg (refl (~ $x1927 $x1927)) (nnf-neg (refl (~ $x1930 $x1930)) (~ (not $x1921) $x1933)) (~ (not (or (not (and $x1905 $x1910)) $x1921)) $x1937))))
(let ((@x1941 (trans (sk (~ (not $x1324) (not (or (not (and $x1905 $x1910)) $x1921)))) @x1939 (~ (not $x1324) $x1937))))
(let ((@x1902 (nnf-neg (nnf-pos (refl (~ $x1281 $x1281)) (~ $x1284 $x1284)) (~ (not $x1287) $x1284))))
(let ((@x1949 (nnf-neg (sk (~ $x1287 $x1893)) (nnf-neg @x1902 @x1941 (~ (not $x1327) $x1942)) (~ (not $x1330) $x1946))))
(let ((@x1875 (nnf-neg (nnf-pos (refl (~ $x1262 $x1262)) (~ $x1265 $x1265)) (~ (not $x1268) $x1265))))
(let ((@x1957 (nnf-neg (sk (~ $x1268 $x1866)) (nnf-neg @x1875 @x1949 (~ (not $x1333) $x1950)) (~ (not $x1336) $x1954))))
(let ((@x1852 (nnf-neg (nnf-pos (refl (~ (>= ?x268 0) (>= ?x268 0))) (~ $x1251 $x1251)) (~ (not $x1254) $x1251))))
(let ((@x1965 (nnf-neg (sk (~ $x1254 $x1843)) (nnf-neg @x1852 @x1957 (~ (not $x1339) $x1958)) (~ (not $x1342) $x1962))))
(let ((@x1973 (nnf-neg (refl (~ $x768 $x768)) (nnf-neg (refl (~ $x1837 $x1837)) @x1965 (~ (not $x1345) $x1966)) (~ (not $x1348) $x1970))))
(let ((@x1834 (nnf-neg (nnf-pos (refl (~ (or $x295 $x273) (or $x295 $x273))) (~ $x647 $x647)) (~ (not $x780) $x647))))
(let ((@x1981 (nnf-neg (sk (~ $x780 $x1825)) (nnf-neg @x1834 @x1973 (~ (not $x1351) $x1974)) (~ (not $x1354) $x1978))))
(let ((@x1817 (nnf-neg (nnf-pos (refl (~ $x1238 $x1238)) (~ $x1242 $x1242)) (~ (not $x1245) $x1242))))
(let ((@x1989 (nnf-neg (sk (~ $x1245 $x1808)) (nnf-neg @x1817 @x1981 (~ (not $x1357) $x1982)) (~ (not $x1360) $x1986))))
(let ((@x1798 (monotonicity (sk (~ $x1075 (and $x1769 $x1774))) (refl (~ $x253 $x253)) (refl (~ $x1209 $x1209)) (nnf-pos (refl (~ $x1201 $x1201)) (~ $x1204 $x1204)) (refl (~ $x261 $x261)) (nnf-pos (refl (~ $x1185 $x1185)) (~ $x1188 $x1188)) (nnf-pos (refl (~ $x1191 $x1191)) (~ $x1194 $x1194)) (~ $x1230 $x1796))))
(let ((@x1993 (nnf-neg (nnf-neg @x1798 (~ (not $x1235) $x1796)) @x1989 (~ (not $x1363) $x1990))))
(let ((@x1743 (nnf-neg (nnf-pos (refl (~ $x1138 $x1138)) (~ $x1141 $x1141)) (~ (not $x1144) $x1141))))
(let ((@x1754 (nnf-neg (sk (~ $x1144 $x1734)) (nnf-neg @x1743 (refl (~ $x1744 $x1744)) (~ (not $x1147) $x1747)) (~ (not $x1150) $x1751))))
(let ((@x1710 (nnf-pos (monotonicity (refl (~ $x1101 $x1101)) (sk (~ $x1117 $x1702)) (~ $x1120 $x1705)) (~ $x1123 $x1708))))
(let ((@x1758 (nnf-neg (nnf-neg @x1710 (~ (not $x1126) $x1708)) @x1754 (~ (not $x1153) $x1755))))
(let (($x1671 (exists ((?v1 B_Vertex$) )(! (let ((?x1656 (fun_app$a v_b_SP_G_3$ ?v0!8)))
(let ((?x1657 (* (- 1) ?x1656)))
(let ((?x227 (fun_app$a v_b_SP_G_3$ ?v1)))
(and (not (>= (+ ?x227 ?x1657) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x227 ?x1657) 0))))) :qid k!38))
))
(let ((@x1688 (nnf-neg (refl (~ $x1676 $x1676)) (nnf-neg (refl (~ $x1679 $x1679)) (~ (not $x1671) $x1682)) (~ (not (or (not (and $x1655 $x1660)) $x1671)) $x1686))))
(let ((@x1690 (trans (sk (~ $x1126 (not (or (not (and $x1655 $x1660)) $x1671)))) @x1688 (~ $x1126 $x1686))))
(let ((@x1649 (monotonicity (nnf-neg (refl (~ (not $x1072) (not $x1072))) (~ $x1078 $x1636)) (refl (~ $x209 $x209)) (refl (~ $x212 $x212)) (refl (~ $x214 $x214)) (refl (~ $x217 $x217)) (~ $x1084 $x1647))))
(let ((@x1766 (nnf-neg (nnf-neg @x1649 (~ (not $x1089) $x1647)) (nnf-neg @x1690 @x1758 (~ (not $x1156) $x1759)) (~ (not $x1159) $x1763))))
(let ((@x1626 (nnf-pos (monotonicity (refl (~ $x1004 $x1004)) (sk (~ $x1026 $x1618)) (~ $x1029 $x1621)) (~ $x1032 $x1624))))
(let ((@x1591 (nnf-pos (monotonicity (refl (~ $x949 $x949)) (sk (~ $x969 $x1583)) (~ $x972 $x1586)) (~ $x975 $x1589))))
(let ((@x1629 (monotonicity @x1591 (refl (~ $x170 $x170)) (nnf-pos (refl (~ (>= ?x171 0) (>= ?x171 0))) (~ $x1046 $x1046)) (nnf-pos (refl (~ $x1037 $x1037)) (~ $x1040 $x1040)) (nnf-pos (refl (~ $x989 $x989)) (~ $x992 $x992)) @x1626 (~ $x1064 $x1627))))
(let ((@x2001 (nnf-neg (nnf-neg @x1629 (~ (not $x1069) $x1627)) (nnf-neg @x1766 @x1993 (~ (not $x1366) $x1994)) (~ (not $x1369) $x1998))))
(let (($x1550 (exists ((?v1 B_Vertex$) )(! (let ((?x1535 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1536 (* (- 1) ?x1535)))
(let ((?x124 (v_b_SP_G_0$ ?v1)))
(let (($x133 (fun_app$ v_b_Visited_G_0$ ?v1)))
(and (not (>= (+ ?x124 ?x1536) 0)) $x133 (= (+ ?x124 ?x1536 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))) :qid k!38))
))
(let ((@x1568 (nnf-neg (refl (~ $x1556 $x1556)) (nnf-neg (refl (~ $x1559 $x1559)) (~ (not $x1550) $x1562)) (~ (not (or (not (and $x1534 $x1539)) $x1550)) $x1566))))
(let ((@x1570 (trans (sk (~ (not $x975) (not (or (not (and $x1534 $x1539)) $x1550)))) @x1568 (~ (not $x975) $x1566))))
(let ((@x1531 (nnf-neg (nnf-pos (refl (~ $x931 $x931)) (~ $x934 $x934)) (~ (not $x937) $x934))))
(let ((@x2009 (nnf-neg @x1531 (nnf-neg @x1570 @x2001 (~ (not $x1372) $x2002)) (~ (not $x1375) $x2006))))
(let ((@x1504 (nnf-neg (nnf-pos (refl (~ $x906 $x906)) (~ $x909 $x909)) (~ (not $x912) $x909))))
(let ((@x2017 (nnf-neg @x1504 (nnf-neg (sk (~ $x937 $x1522)) @x2009 (~ (not $x1378) $x2010)) (~ (not $x1381) $x2014))))
(let ((@x1481 (nnf-neg (nnf-pos (refl (~ (>= ?x124 0) (>= ?x124 0))) (~ $x894 $x894)) (~ (not $x897) $x894))))
(let ((@x2025 (nnf-neg @x1481 (nnf-neg (sk (~ $x912 $x1495)) @x2017 (~ (not $x1384) $x2018)) (~ (not $x1387) $x2022))))
(let ((@x2033 (nnf-neg (refl (~ $x1466 $x1466)) (nnf-neg (sk (~ $x897 $x1472)) @x2025 (~ (not $x1390) $x2026)) (~ (not $x1393) $x2030))))
(let ((@x2037 (mp~ (not-or-elim (mp (asserted $x344) @x1406 $x1402) (not $x1396)) (nnf-neg (refl (~ $x864 $x864)) @x2033 (~ (not $x1396) $x2034)) $x2034)))
(let ((@x3873 (mp (mp (mp @x2037 (monotonicity @x2338 (= $x2034 $x2339)) $x2339) @x3015 $x3013) (monotonicity @x3869 (= $x3013 $x3870)) $x3870)))
(let ((@x4276 (unit-resolution @x3873 (lemma (unit-resolution @x5800 @x3487 (hypothesis $x864) false) $x142) $x3867)))
(let ((@x4278 (unit-resolution (def-axiom (or $x3861 $x1472 $x3855)) (unit-resolution (def-axiom (or $x3864 $x3858)) @x4276 $x3858) (lemma @x5085 $x1471) $x3855)))
(let ((@x3051 (unit-resolution ((_ quant-inst ?v0!2) (or (not $x3495) $x2343)) @x3500 (hypothesis $x1486) false)))
(let ((@x4352 (unit-resolution (def-axiom (or $x3849 $x2363 $x3843)) (unit-resolution (def-axiom (or $x2358 $x1486)) (lemma @x3051 $x2343) $x2358) (unit-resolution (def-axiom (or $x3852 $x3846)) @x4278 $x3846) $x3843)))
(let ((@x4355 (unit-resolution (def-axiom (or $x3837 $x2409 $x3831)) (unit-resolution (def-axiom (or $x3840 $x3834)) @x4352 $x3834) (unit-resolution (def-axiom (or $x2404 $x1507)) (lemma @x4007 $x2389) $x2404) $x3831)))
(let ((@x4357 (unit-resolution (def-axiom (or $x3825 $x3539 $x3819)) (unit-resolution (def-axiom (or $x3828 $x3822)) @x4355 $x3822) (lemma @x3189 $x3536) $x3819)))
(let ((@x4135 (unit-resolution (def-axiom (or $x3816 $x170)) @x4357 $x170)))
(let ((@x4159 (hypothesis $x3652)))
(let ((@x4139 (unit-resolution (def-axiom (or $x3649 $x214)) @x4159 $x214)))
(let ((@x4149 (unit-resolution (def-axiom (or $x3625 $x1744)) (trans (monotonicity @x4139 (= ?x242 ?x169)) @x4135 $x243) $x3625)))
(let (($x1720 (not $x1719)))
(let ((@x3125 (hypothesis $x2645)))
(let (($x4264 (>= (+ ?x1716 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v1!10))) 0)))
(let ((@x4002 (symm (hypothesis $x214) (= v_b_SP_G_1$ v_b_SP_G_3$))))
(let ((@x5768 (symm (monotonicity @x4002 (= (fun_app$a v_b_SP_G_1$ ?v1!10) ?x1716)) (= ?x1716 (fun_app$a v_b_SP_G_1$ ?v1!10)))))
(let ((@x5656 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1716 (fun_app$a v_b_SP_G_1$ ?v1!10))) $x4264)) @x5768 $x4264)))
(let (($x5398 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v1!10))) 0)))
(let (($x5689 (fun_app$ v_b_Visited_G_1$ ?v1!10)))
(let (($x6142 (not $x5689)))
(let ((?x5569 (fun_app$a v_b_SP_G_1$ ?v1!10)))
(let ((?x5512 (fun_app$a v_b_SP_G_1$ ?v0!11)))
(let ((?x5709 (* (- 1) ?x5512)))
(let ((?x4184 (+ ?x1722 ?x5709 ?x5569)))
(let (($x4211 (>= ?x4184 0)))
(let ((?x4266 (+ ?x1729 ?x5709)))
(let (($x4267 (<= ?x4266 0)))
(let ((@x4273 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1729 ?x5512)) $x4267)) (symm (monotonicity @x4002 (= ?x5512 ?x1729)) (= ?x1729 ?x5512)) $x4267)))
(let ((@x4363 ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis $x4267) (hypothesis $x4264) (hypothesis $x4211) (hypothesis (not $x2204)) false)))
(let ((@x4274 (unit-resolution (lemma @x4363 (or (not $x4211) (not $x4267) (not $x4264) $x2204)) @x4273 @x5656 (unit-resolution (def-axiom (or $x2640 (not $x2204))) @x3125 (not $x2204)) (not $x4211))))
(let (($x4220 (or $x3573 $x6142 $x1725 $x4211)))
(let (($x5674 (or $x6142 $x1725 (>= (+ ?x1722 ?x5569 ?x5709) 0))))
(let (($x4221 (or $x3573 $x5674)))
(let ((@x4210 (monotonicity (rewrite (= (+ ?x1722 ?x5569 ?x5709) ?x4184)) (= (>= (+ ?x1722 ?x5569 ?x5709) 0) $x4211))))
(let ((@x4224 (monotonicity (monotonicity @x4210 (= $x5674 (or $x6142 $x1725 $x4211))) (= $x4221 (or $x3573 (or $x6142 $x1725 $x4211))))))
(let ((@x4227 (trans @x4224 (rewrite (= (or $x3573 (or $x6142 $x1725 $x4211)) $x4220)) (= $x4221 $x4220))))
(let ((@x4360 (unit-resolution (mp ((_ quant-inst ?v0!11 ?v1!10) $x4221) @x4227 $x4220) (unit-resolution (def-axiom (or $x3816 $x3568)) @x4357 $x3568) (unit-resolution (def-axiom (or $x2640 (not $x1725))) @x3125 (not $x1725)) (or $x6142 $x4211))))
(let (($x5857 (or $x5689 $x5398)))
(let ((@x5652 (mp ((_ quant-inst ?v1!10) (or $x3590 $x5857)) (rewrite (= (or $x3590 $x5857) (or $x3590 $x5689 $x5398))) (or $x3590 $x5689 $x5398))))
(let ((@x4367 (unit-resolution (unit-resolution @x5652 (hypothesis $x3585) $x5857) (unit-resolution @x4360 @x4274 $x6142) $x5398)))
(let ((@x4362 ((_ th-lemma arith farkas -1 1 1) @x4367 @x5656 (unit-resolution (def-axiom (or $x2640 $x1720)) @x3125 $x1720) false)))
(let ((@x4151 (unit-resolution (lemma @x4362 (or $x2640 $x3590 $x2703)) (unit-resolution (def-axiom (or $x3649 $x3585)) @x4159 $x3585) @x4139 $x2640)))
(let ((@x4161 (unit-resolution (def-axiom (or $x3637 $x3631)) (unit-resolution (def-axiom (or $x3634 $x2645 $x3628)) @x4151 @x4149 $x3634) $x3637)))
(let ((@x4158 (unit-resolution (def-axiom (or $x3646 $x3606 $x3640)) @x4161 (unit-resolution (def-axiom (or $x3649 $x3643)) @x4159 $x3643) $x3606)))
(let (($x3139 (<= (+ b_Infinity$ (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0!8))) 0)))
(let ((?x5112 (fun_app$a v_b_SP_G_1$ ?v0!8)))
(let ((?x5119 (* (- 1) ?x5112)))
(let ((?x3935 (?v1!7 ?v0!8)))
(let ((?x3976 (pair$ ?x3935 ?v0!8)))
(let ((?x3971 (b_G$ ?x3976)))
(let ((?x3928 (fun_app$a v_b_SP_G_1$ ?x3935)))
(let ((?x3958 (+ ?x3928 ?x3971 ?x5119)))
(let (($x3970 (= ?x3958 0)))
(let (($x3980 (not $x3970)))
(let (($x3930 (fun_app$ v_b_Visited_G_1$ ?x3935)))
(let (($x3959 (not $x3930)))
(let (($x3890 (>= (+ ?x3928 ?x5119) 0)))
(let (($x4009 (or $x3890 $x3959 $x3980)))
(let ((?x4378 (fun_app$a v_b_SP_G_3$ ?x3935)))
(let ((?x4397 (* (- 1) ?x4378)))
(let ((?x4601 (+ ?x3928 ?x4397)))
(let (($x4605 (>= ?x4601 0)))
(let ((@x4642 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3928 ?x4378)) $x4605)) (symm (monotonicity (hypothesis $x214) (= ?x4378 ?x3928)) (= ?x3928 ?x4378)) $x4605)))
(let ((?x4137 (+ ?x1656 ?x5119)))
(let (($x4122 (>= ?x4137 0)))
(let ((@x4625 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1656 ?x5112)) $x4122)) (symm (monotonicity @x4002 (= ?x5112 ?x1656)) (= ?x1656 ?x5112)) $x4122)))
(let (($x4065 (<= ?x3958 0)))
(let ((@x5126 (unit-resolution (def-axiom (or $x4009 $x3970)) (hypothesis (not $x4009)) $x3970)))
(let (($x4604 (<= ?x4601 0)))
(let ((@x5858 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3928 ?x4378)) $x4604)) (symm (monotonicity (hypothesis $x214) (= ?x4378 ?x3928)) (= ?x3928 ?x4378)) $x4604)))
(let (($x4121 (<= ?x4137 0)))
(let ((@x5140 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1656 ?x5112)) $x4121)) (symm (monotonicity @x4002 (= ?x5112 ?x1656)) (= ?x1656 ?x5112)) $x4121)))
(let (($x4058 (>= ?x3958 0)))
(let (($x4399 (<= (+ ?x1656 ?x4397) 0)))
(let (($x4338 (not $x4399)))
(let ((@x4989 (unit-resolution (def-axiom (or $x4009 (not $x3890))) (hypothesis (not $x4009)) (not $x3890))))
(let ((@x5003 (unit-resolution ((_ th-lemma arith assign-bounds -1 1 -1) (or $x4338 (not $x4122) $x3890 (not $x4605))) @x4989 @x4625 @x4642 $x4338)))
(let (($x4758 (not $x4605)))
(let (($x4757 (not $x4122)))
(let (($x4898 (or $x4399 $x3600 (not $x4058) (not $x4121) (not $x4604) (not $x4065) $x4757 $x4758)))
(let ((?x5665 (* (- 1) ?x3971)))
(let ((?x4417 (+ ?x1656 ?x5665 ?x4397)))
(let (($x4445 (>= ?x4417 0)))
(let ((@x5038 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 -1) (or $x4445 (not $x4065) $x4757 $x4758)) (hypothesis $x4065) (hypothesis $x4122) (hypothesis $x4605) $x4445)))
(let (($x4444 (<= ?x4417 0)))
(let ((@x4331 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 -1) (or $x4444 (not $x4058) (not $x4121) (not $x4604))) (hypothesis $x4058) (hypothesis $x4121) (hypothesis $x4604) $x4444)))
(let (($x4418 (= ?x4417 0)))
(let (($x4428 (not $x4418)))
(let (($x4430 (or $x4399 $x4428)))
(let (($x4447 (or $x3600 $x4399 $x4428)))
(let (($x4384 (>= (+ ?x4378 ?x1657) 0)))
(let (($x4388 (or $x4384 (not (= (+ ?x4378 ?x1657 ?x3971) 0)))))
(let (($x4432 (or $x3600 $x4388)))
(let ((@x4414 (monotonicity (rewrite (= (+ ?x4378 ?x1657 ?x3971) (+ ?x1657 ?x3971 ?x4378))) (= (= (+ ?x4378 ?x1657 ?x3971) 0) (= (+ ?x1657 ?x3971 ?x4378) 0)))))
(let ((@x4427 (trans @x4414 (rewrite (= (= (+ ?x1657 ?x3971 ?x4378) 0) $x4418)) (= (= (+ ?x4378 ?x1657 ?x3971) 0) $x4418))))
(let ((@x4396 (monotonicity (rewrite (= (+ ?x4378 ?x1657) (+ ?x1657 ?x4378))) (= $x4384 (>= (+ ?x1657 ?x4378) 0)))))
(let ((@x4406 (trans @x4396 (rewrite (= (>= (+ ?x1657 ?x4378) 0) $x4399)) (= $x4384 $x4399))))
(let ((@x4446 (monotonicity @x4406 (monotonicity @x4427 (= (not (= (+ ?x4378 ?x1657 ?x3971) 0)) $x4428)) (= $x4388 $x4430))))
(let ((@x4442 (trans (monotonicity @x4446 (= $x4432 (or $x3600 $x4430))) (rewrite (= (or $x3600 $x4430) $x4447)) (= $x4432 $x4447))))
(let ((@x5041 (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!8)) $x4432) @x4442 $x4447) (hypothesis $x3595) $x4430)))
(let ((@x4897 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4418 (not $x4444) (not $x4445))) (unit-resolution @x5041 (hypothesis $x4338) $x4428) @x4331 @x5038 false)))
(let ((@x3135 (unit-resolution (lemma @x4897 $x4898) @x5003 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3980 $x4058)) @x5126 $x4058) (hypothesis $x3595) @x5140 @x5858 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3980 $x4065)) @x5126 $x4065) @x4625 @x4642 false)))
(let ((@x4168 (unit-resolution (lemma @x3135 (or $x4009 $x3600 $x2703)) (unit-resolution (def-axiom (or $x3603 $x3595)) @x4158 $x3595) @x4139 $x4009)))
(let ((@x4189 (unit-resolution (def-axiom (or $x3816 $x3576)) @x4357 $x3576)))
(let (($x4014 (not $x4009)))
(let (($x4042 (or $x3581 $x1654 $x3139 $x4014)))
(let (($x3956 (<= (+ ?x5112 (* (- 1) ?x3928)) 0)))
(let (($x3033 (or $x1654 $x3139 (not (or $x3956 $x3959 (not (= (+ ?x5112 (* (- 1) ?x3928) ?x5665) 0)))))))
(let (($x4043 (or $x3581 $x3033)))
(let (($x3964 (= (not (or $x3956 $x3959 (not (= (+ ?x5112 (* (- 1) ?x3928) ?x5665) 0)))) $x4014)))
(let (($x4010 (= (or $x3956 $x3959 (not (= (+ ?x5112 (* (- 1) ?x3928) ?x5665) 0))) $x4009)))
(let (($x5977 (= (+ ?x5112 (* (- 1) ?x3928) ?x5665) 0)))
(let ((@x3929 (rewrite (= (+ ?x5112 (* (- 1) ?x3928) ?x5665) (+ (* (- 1) ?x3928) ?x5665 ?x5112)))))
(let ((@x3957 (monotonicity @x3929 (= $x5977 (= (+ (* (- 1) ?x3928) ?x5665 ?x5112) 0)))))
(let ((@x3988 (trans @x3957 (rewrite (= (= (+ (* (- 1) ?x3928) ?x5665 ?x5112) 0) $x3970)) (= $x5977 $x3970))))
(let ((@x3898 (monotonicity (rewrite (= (+ ?x5112 (* (- 1) ?x3928)) (+ (* (- 1) ?x3928) ?x5112))) (= $x3956 (<= (+ (* (- 1) ?x3928) ?x5112) 0)))))
(let ((@x3927 (trans @x3898 (rewrite (= (<= (+ (* (- 1) ?x3928) ?x5112) 0) $x3890)) (= $x3956 $x3890))))
(let ((@x4011 (monotonicity (monotonicity @x3927 (monotonicity @x3988 (= (not $x5977) $x3980)) $x4010) $x3964)))
(let ((@x4050 (monotonicity (monotonicity @x4011 (= $x3033 (or $x1654 $x3139 $x4014))) (= $x4043 (or $x3581 (or $x1654 $x3139 $x4014))))))
(let ((@x4053 (trans @x4050 (rewrite (= (or $x3581 (or $x1654 $x3139 $x4014)) $x4042)) (= $x4043 $x4042))))
(let ((@x4248 (unit-resolution (mp ((_ quant-inst ?v0!8) $x4043) @x4053 $x4042) @x4189 (unit-resolution (def-axiom (or $x3603 $x1655)) @x4158 $x1655) (or $x3139 $x4014))))
(let (($x4136 (= ?x1656 ?x5112)))
(let ((@x4235 (monotonicity (symm @x4139 (= v_b_SP_G_1$ v_b_SP_G_3$)) (= ?x5112 ?x1656))))
(let ((@x4237 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4136) $x4122)) (symm @x4235 $x4136) $x4122)))
(let ((@x4238 ((_ th-lemma arith farkas 1 -1 1) @x4237 (unit-resolution @x4248 @x4168 $x3139) (unit-resolution (def-axiom (or $x3603 $x1660)) @x4158 $x1660) false)))
(let ((@x4802 (unit-resolution (def-axiom (or $x3813 $x3652 $x3807)) (lemma @x4238 $x3649) (unit-resolution (def-axiom (or $x3816 $x3810)) @x4357 $x3810) $x3807)))
(let ((@x6739 (symm (unit-resolution (def-axiom (or $x3804 $x261)) @x4802 $x261) (= ?x260 v_b_Visited_G_2$))))
(let ((@x10168 (symm (monotonicity @x6739 (= $x5237 (fun_app$ v_b_Visited_G_2$ ?v0!20))) (= (fun_app$ v_b_Visited_G_2$ ?v0!20) $x5237))))
(let ((@x10119 (monotonicity @x10168 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!20)) $x9037))))
(let (($x4298 (fun_app$ v_b_Visited_G_2$ ?v0!20)))
(let (($x4299 (not $x4298)))
(let ((?x4413 (fun_app$a v_b_SP_G_1$ ?v0!20)))
(let ((?x4438 (* (- 1) ?x4413)))
(let ((?x4439 (+ ?x1906 ?x4438)))
(let (($x6002 (>= ?x4439 0)))
(let (($x9479 (not $x6002)))
(let ((@x9476 (hypothesis $x6002)))
(let (($x9588 (or (not (<= (+ ?x1906 (* (- 1) (v_b_SP_G_2$ (?v1!7 ?v0!20)))) 0)) $x9479)))
(let ((?x4661 (?v1!7 ?v0!20)))
(let ((?x4662 (fun_app$a v_b_SP_G_1$ ?x4661)))
(let ((?x4663 (* (- 1) ?x4662)))
(let ((?x4664 (+ ?x4413 ?x4663)))
(let (($x4665 (<= ?x4664 0)))
(let ((?x4668 (pair$ ?x4661 ?v0!20)))
(let ((?x4669 (b_G$ ?x4668)))
(let ((?x4670 (* (- 1) ?x4669)))
(let ((?x4671 (+ ?x4413 ?x4663 ?x4670)))
(let (($x4672 (= ?x4671 0)))
(let (($x4673 (not $x4672)))
(let (($x4666 (fun_app$ v_b_Visited_G_1$ ?x4661)))
(let (($x4667 (not $x4666)))
(let (($x4674 (or $x4665 $x4667 $x4673)))
(let (($x4675 (not $x4674)))
(let (($x1884 (not $x1883)))
(let ((@x8699 (hypothesis $x2806)))
(let (($x7517 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!19)))) 0)))
(let ((?x7554 (pair$ v_b_v_G_1$ ?v0!19)))
(let ((?x7555 (b_G$ ?x7554)))
(let ((?x7388 (fun_app$a v_b_SP_G_1$ ?v0!19)))
(let ((?x7461 (* (- 1) ?x7388)))
(let (($x4944 (>= (+ ?x254 ?x7461 ?x7555) 0)))
(let (($x8378 (or $x7517 $x4944)))
(let ((?x7471 (+ ?x254 ?x1889 ?x7555)))
(let (($x6876 (= ?x7471 0)))
(let (($x8868 (not $x6876)))
(let (($x6123 (>= ?x7471 0)))
(let (($x8149 (not $x6123)))
(let ((?x7512 (* (- 1) ?x7555)))
(let ((?x9069 (+ ?x1880 ?x7512)))
(let (($x8504 (>= ?x9069 0)))
(let (($x6383 (= ?v1!18 v_b_v_G_1$)))
(let (($x5168 (fun_app$ v_b_Visited_G_1$ ?v1!18)))
(let (($x6179 (not $x5168)))
(let (($x7401 (<= (+ ?x1888 ?x7461) 0)))
(let ((?x5283 (b_G$ (pair$ v_b_v_G_1$ ?v0!13))))
(let ((?x5139 (+ ?x254 ?x1805 ?x5283)))
(let (($x4859 (= ?x5139 0)))
(let (($x4202 (>= (+ ?x254 (* (- 1) ?x1803) ?x5283) 0)))
(let (($x3165 (<= (+ b_Infinity$ (* (- 1) ?x5283)) 0)))
(let (($x4930 (or $x3165 $x4202)))
(let (($x4933 (not $x4930)))
(let ((@x4771 (monotonicity (commutativity (= (= ?x1803 ?x1804) (= ?x1804 ?x1803))) (= (not (= ?x1803 ?x1804)) (not (= ?x1804 ?x1803))))))
(let (($x4765 (not (= ?x1803 ?x1804))))
(let ((@x4772 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4765 $x1807)) (hypothesis $x1808) $x4765) @x4771 (not (= ?x1804 ?x1803)))))
(let (($x4288 (= ?x1804 ?x1803)))
(let (($x4284 (or $x4933 $x4288)))
(let ((@x4803 (unit-resolution (def-axiom (or $x3804 $x3673)) @x4802 $x3673)))
(let (($x4290 (or $x3678 $x4933 $x4288)))
(let (($x4289 (or (not (or $x3165 (<= (+ ?x1803 ?x1168 (* (- 1) ?x5283)) 0))) $x4288)))
(let (($x4291 (or $x3678 $x4289)))
(let (($x3167 (<= (+ ?x1803 ?x1168 (* (- 1) ?x5283)) 0)))
(let ((@x4198 (rewrite (= (+ ?x1803 ?x1168 (* (- 1) ?x5283)) (+ ?x1168 ?x1803 (* (- 1) ?x5283))))))
(let ((@x4195 (monotonicity @x4198 (= $x3167 (<= (+ ?x1168 ?x1803 (* (- 1) ?x5283)) 0)))))
(let ((@x5138 (trans @x4195 (rewrite (= (<= (+ ?x1168 ?x1803 (* (- 1) ?x5283)) 0) $x4202)) (= $x3167 $x4202))))
(let ((@x4283 (monotonicity (monotonicity @x5138 (= (or $x3165 $x3167) $x4930)) (= (not (or $x3165 $x3167)) $x4933))))
(let ((@x4294 (monotonicity (monotonicity @x4283 (= $x4289 $x4284)) (= $x4291 (or $x3678 $x4284)))))
(let ((@x5050 (mp ((_ quant-inst ?v0!13) $x4291) (trans @x4294 (rewrite (= (or $x3678 $x4284) $x4290)) (= $x4291 $x4290)) $x4290)))
(let ((@x4805 (unit-resolution (def-axiom (or $x4930 (not $x3165))) (unit-resolution (unit-resolution @x5050 @x4803 $x4284) @x4772 $x4933) (not $x3165))))
(let ((@x4788 (unit-resolution (def-axiom (or $x4930 (not $x4202))) (unit-resolution (unit-resolution @x5050 @x4803 $x4284) @x4772 $x4933) (not $x4202))))
(let (($x5127 (or $x3165 $x4202 $x4859)))
(let ((@x4789 (unit-resolution (def-axiom (or $x3804 $x3665)) @x4802 $x3665)))
(let (($x5129 (or $x3670 $x3165 $x4202 $x4859)))
(let (($x4192 (or $x3165 $x3167 (= (+ ?x254 ?x5283 ?x1805) 0))))
(let (($x5130 (or $x3670 $x4192)))
(let ((@x4861 (monotonicity (rewrite (= (+ ?x254 ?x5283 ?x1805) ?x5139)) (= (= (+ ?x254 ?x5283 ?x1805) 0) $x4859))))
(let ((@x5135 (monotonicity (monotonicity @x5138 @x4861 (= $x4192 $x5127)) (= $x5130 (or $x3670 $x5127)))))
(let ((@x5160 (mp ((_ quant-inst ?v0!13) $x5130) (trans @x5135 (rewrite (= (or $x3670 $x5127) $x5129)) (= $x5130 $x5129)) $x5129)))
(let ((@x4787 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4859) (>= ?x5139 0))) (unit-resolution (unit-resolution @x5160 @x4789 $x5127) @x4788 @x4805 $x4859) (>= ?x5139 0))))
(let ((@x4795 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (<= ?x1806 0) $x1807)) (hypothesis $x1808) (<= ?x1806 0))))
(let ((@x5162 (unit-resolution (def-axiom (or $x3801 $x1808 $x3795)) (unit-resolution (def-axiom (or $x3804 $x3798)) @x4802 $x3798) $x3798)))
(let ((@x4711 (unit-resolution @x5162 (lemma ((_ th-lemma arith farkas 1 -1 1) @x4795 @x4788 @x4787 false) $x1807) $x3795)))
(let ((@x4714 (unit-resolution (def-axiom (or $x3792 $x3681)) @x4711 $x3681)))
(let (($x6395 (or $x3686 $x7401)))
(let ((@x8489 (monotonicity (rewrite (= (+ ?x7388 ?x1889) (+ ?x1889 ?x7388))) (= (>= (+ ?x7388 ?x1889) 0) (>= (+ ?x1889 ?x7388) 0)))))
(let ((@x7634 (trans @x8489 (rewrite (= (>= (+ ?x1889 ?x7388) 0) $x7401)) (= (>= (+ ?x7388 ?x1889) 0) $x7401))))
(let ((@x8284 (trans (monotonicity @x7634 (= (or $x3686 (>= (+ ?x7388 ?x1889) 0)) $x6395)) (rewrite (= $x6395 $x6395)) (= (or $x3686 (>= (+ ?x7388 ?x1889) 0)) $x6395))))
(let ((@x8710 (unit-resolution (mp ((_ quant-inst ?v0!19) (or $x3686 (>= (+ ?x7388 ?x1889) 0))) @x8284 $x6395) @x4714 $x7401)))
(let (($x8129 (>= (+ ?x1887 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v1!18))) 0)))
(let ((?x6950 (fun_app$a v_b_SP_G_1$ ?v1!18)))
(let (($x6951 (= ?x1887 ?x6950)))
(let (($x1819 (fun_app$ v_b_Visited_G_2$ ?v0!14)))
(let (($x3393 (not $x1823)))
(let (($x5543 (fun_app$ v_b_Visited_G_1$ ?v0!14)))
(let (($x5064 (= ?v0!14 v_b_v_G_1$)))
(let (($x6244 (or $x5064 $x5543)))
(let (($x5974 (fun_app$ ?x260 ?v0!14)))
(let (($x6373 (= $x5974 $x6244)))
(let (($x3463 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x63 (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v3)))
(= $x63 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :pattern ( (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v3) ) :qid k!34))
))
(let (($x73 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x63 (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v3)))
(= $x63 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :qid k!34))
))
(let (($x63 (fun_app$ (fun_upd$ ?3 ?2 ?1) ?0)))
(let (($x70 (= $x63 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0)))))
(let (($x68 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x63 (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v3)))
(= $x63 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :qid k!34))
))
(let ((@x72 (rewrite (= (= $x63 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0))) $x70))))
(let ((@x1438 (mp~ (mp (asserted $x68) (quant-intro @x72 (= $x68 $x73)) $x73) (nnf-pos (refl (~ $x70 $x70)) (~ $x73 $x73)) $x73)))
(let ((@x3468 (mp @x1438 (quant-intro (refl (= $x70 $x70)) (= $x73 $x3463)) $x3463)))
(let (($x4134 (not $x3463)))
(let (($x5805 (or $x4134 $x6373)))
(let ((@x5853 (monotonicity (rewrite (= (ite $x5064 true $x5543) $x6244)) (= (= $x5974 (ite $x5064 true $x5543)) $x6373))))
(let ((@x3152 (monotonicity @x5853 (= (or $x4134 (= $x5974 (ite $x5064 true $x5543))) $x5805))))
(let ((@x4912 (trans @x3152 (rewrite (= $x5805 $x5805)) (= (or $x4134 (= $x5974 (ite $x5064 true $x5543))) $x5805))))
(let ((@x4913 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!14) (or $x4134 (= $x5974 (ite $x5064 true $x5543)))) @x4912 $x5805)))
(let ((@x5240 (mp (hypothesis $x1819) (symm (monotonicity @x6739 (= $x5974 $x1819)) (= $x1819 $x5974)) $x5974)))
(let ((@x5728 (unit-resolution (def-axiom (or (not $x6373) (not $x5974) $x6244)) @x5240 (unit-resolution @x4913 @x3468 $x6373) $x6244)))
(let ((@x7078 (hypothesis $x3393)))
(let ((?x3063 (v_b_SP_G_2$ v_b_v_G_1$)))
(let (($x3024 (= ?x3063 ?x254)))
(let ((?x3076 (pair$ v_b_v_G_1$ v_b_v_G_1$)))
(let ((?x3077 (b_G$ ?x3076)))
(let (($x3038 (>= ?x3077 0)))
(let (($x3080 (<= (+ b_Infinity$ (* (- 1) ?x3077)) 0)))
(let (($x4540 (or $x3080 $x3038)))
(let (($x6342 (= ?x3077 0)))
(let (($x3469 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (or (not (= ?v0 ?v1)) (= (b_G$ (pair$ ?v0 ?v1)) 0)) :pattern ( (pair$ ?v0 ?v1) ) :qid k!36))
))
(let (($x95 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (or (not (= ?v0 ?v1)) (= (b_G$ (pair$ ?v0 ?v1)) 0)) :qid k!36))
))
(let (($x92 (or (not (= ?1 ?0)) (= (b_G$ (pair$ ?1 ?0)) 0))))
(let (($x89 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x80 (= ?v0 ?v1)))
(=> $x80 (= (b_G$ (pair$ ?v0 ?v1)) 0))) :qid k!36))
))
(let ((@x94 (rewrite (= (=> (= ?1 ?0) (= (b_G$ (pair$ ?1 ?0)) 0)) $x92))))
(let ((@x1443 (mp~ (mp (asserted $x89) (quant-intro @x94 (= $x89 $x95)) $x95) (nnf-pos (refl (~ $x92 $x92)) (~ $x95 $x95)) $x95)))
(let ((@x3474 (mp @x1443 (quant-intro (refl (= $x92 $x92)) (= $x95 $x3469)) $x3469)))
(let (($x3045 (not $x3469)))
(let (($x6595 (or $x3045 $x6342)))
(let ((@x6585 (monotonicity (rewrite (= (= v_b_v_G_1$ v_b_v_G_1$) true)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) (not true)))))
(let ((@x6587 (trans @x6585 (rewrite (= (not true) false)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) false))))
(let ((@x6590 (monotonicity @x6587 (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x6342) (or false $x6342)))))
(let ((@x6594 (trans @x6590 (rewrite (= (or false $x6342) $x6342)) (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x6342) $x6342))))
(let ((@x6599 (monotonicity @x6594 (= (or $x3045 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x6342)) $x6595))))
(let ((@x6602 (trans @x6599 (rewrite (= $x6595 $x6595)) (= (or $x3045 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x6342)) $x6595))))
(let ((@x6603 (mp ((_ quant-inst v_b_v_G_1$ v_b_v_G_1$) (or $x3045 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x6342))) @x6602 $x6595)))
(let ((@x6616 (lemma (unit-resolution @x6603 @x3474 (hypothesis (not $x6342)) false) $x6342)))
(let ((@x7085 (unit-resolution (def-axiom (or $x4540 (not $x3038))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6342) $x3038)) @x6616 $x3038) $x4540)))
(let (($x4579 (not $x4540)))
(let (($x4550 (or $x4579 $x3024)))
(let (($x4556 (or $x3678 $x4579 $x3024)))
(let (($x3874 (or (not (or $x3080 (<= (+ ?x254 ?x1168 (* (- 1) ?x3077)) 0))) $x3024)))
(let (($x4557 (or $x3678 $x3874)))
(let (($x3062 (<= (+ ?x254 ?x1168 (* (- 1) ?x3077)) 0)))
(let ((@x4468 (monotonicity (rewrite (= (+ ?x254 ?x1168 (* (- 1) ?x3077)) (* (- 1) ?x3077))) (= $x3062 (<= (* (- 1) ?x3077) 0)))))
(let ((@x4485 (trans @x4468 (rewrite (= (<= (* (- 1) ?x3077) 0) $x3038)) (= $x3062 $x3038))))
(let ((@x4549 (monotonicity (monotonicity @x4485 (= (or $x3080 $x3062) $x4540)) (= (not (or $x3080 $x3062)) $x4579))))
(let ((@x4561 (monotonicity (monotonicity @x4549 (= $x3874 $x4550)) (= $x4557 (or $x3678 $x4550)))))
(let ((@x4574 (mp ((_ quant-inst v_b_v_G_1$) $x4557) (trans @x4561 (rewrite (= (or $x3678 $x4550) $x4556)) (= $x4557 $x4556)) $x4556)))
(let ((@x7095 (trans (monotonicity (hypothesis $x5064) (= ?x1821 ?x3063)) (unit-resolution (unit-resolution @x4574 @x4803 $x4550) @x7085 $x3024) (= ?x1821 ?x254))))
(let ((@x7096 (trans @x7095 (symm (monotonicity (hypothesis $x5064) (= ?x1822 ?x254)) (= ?x254 ?x1822)) $x1823)))
(let ((@x6504 (unit-resolution (lemma (unit-resolution @x7078 @x7096 false) (or (not $x5064) $x1823)) @x7078 (not $x5064))))
(let ((@x6501 (unit-resolution (def-axiom (or (not $x6244) $x5064 $x5543)) @x6504 (or (not $x6244) $x5543))))
(let (($x6879 (>= (+ ?x254 (* (- 1) ?x1822)) 0)))
(let (($x7105 (not $x6879)))
(let (($x6372 (>= (+ ?x254 (* (- 1) ?x1822) (b_G$ (pair$ v_b_v_G_1$ ?v0!14))) 0)))
(let (($x6043 (not $x6372)))
(let (($x5623 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x6328 (or $x5623 $x6372)))
(let (($x5555 (not $x6328)))
(let (($x5565 (or $x3678 $x5555 $x1823)))
(let (($x5711 (<= (+ ?x1822 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5760 (or (not (or $x5623 $x5711)) $x1823)))
(let (($x5490 (or $x3678 $x5760)))
(let (($x5031 (<= (+ ?x1168 ?x1822 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5019 (= (+ ?x1822 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) (+ ?x1168 ?x1822 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))))))
(let ((@x6180 (trans (monotonicity (rewrite $x5019) (= $x5711 $x5031)) (rewrite (= $x5031 $x6372)) (= $x5711 $x6372))))
(let ((@x5556 (monotonicity (monotonicity @x6180 (= (or $x5623 $x5711) $x6328)) (= (not (or $x5623 $x5711)) $x5555))))
(let ((@x4918 (monotonicity (monotonicity @x5556 (= $x5760 (or $x5555 $x1823))) (= $x5490 (or $x3678 (or $x5555 $x1823))))))
(let ((@x6362 (trans @x4918 (rewrite (= (or $x3678 (or $x5555 $x1823)) $x5565)) (= $x5490 $x5565))))
(let ((@x6339 (unit-resolution (def-axiom (or $x6328 $x6043)) (unit-resolution (mp ((_ quant-inst ?v0!14) $x5490) @x6362 $x5565) @x4803 @x7078 $x5555) $x6043)))
(let ((?x5617 (pair$ v_b_v_G_1$ ?v0!14)))
(let ((?x5621 (b_G$ ?x5617)))
(let (($x6266 (>= ?x5621 0)))
(let ((@x6636 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x5621 0)) $x6266)) (hypothesis (not $x6266)) (not (= ?x5621 0)))))
(let (($x6078 (= v_b_v_G_1$ ?v0!14)))
(let (($x6076 (<= ?x5621 0)))
(let ((@x6410 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x6266 $x6076)) (hypothesis (not $x6266)) $x6076)))
(let (($x6080 (or $x6078 (not $x6076))))
(let (($x3475 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x80 (= ?v0 ?v1)))
(or $x80 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0)))) :pattern ( (pair$ ?v0 ?v1) ) :qid k!37))
))
(let (($x116 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x80 (= ?v0 ?v1)))
(or $x80 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0)))) :qid k!37))
))
(let (($x80 (= ?1 ?0)))
(let (($x113 (or $x80 (not (<= (b_G$ (pair$ ?1 ?0)) 0)))))
(let (($x101 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x29 (pair$ ?v0 ?v1)))
(let ((?x81 (b_G$ ?x29)))
(let (($x98 (< 0 ?x81)))
(=> (not (= ?v0 ?v1)) $x98)))) :qid k!37))
))
(let (($x106 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x29 (pair$ ?v0 ?v1)))
(let ((?x81 (b_G$ ?x29)))
(let (($x98 (< 0 ?x81)))
(let (($x80 (= ?v0 ?v1)))
(or $x80 $x98))))) :qid k!37))
))
(let ((?x29 (pair$ ?1 ?0)))
(let ((?x81 (b_G$ ?x29)))
(let (($x98 (< 0 ?x81)))
(let ((@x115 (monotonicity (rewrite (= $x98 (not (<= ?x81 0)))) (= (or $x80 $x98) $x113))))
(let ((@x108 (quant-intro (rewrite (= (=> (not $x80) $x98) (or $x80 $x98))) (= $x101 $x106))))
(let ((@x121 (mp (asserted $x101) (trans @x108 (quant-intro @x115 (= $x106 $x116)) (= $x101 $x116)) $x116)))
(let ((@x3480 (mp (mp~ @x121 (nnf-pos (refl (~ $x113 $x113)) (~ $x116 $x116)) $x116) (quant-intro (refl (= $x113 $x113)) (= $x116 $x3475)) $x3475)))
(let ((@x6389 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or (not $x3475) $x6080)) (rewrite (= (or (not $x3475) $x6080) (or (not $x3475) $x6078 (not $x6076)))) (or (not $x3475) $x6078 (not $x6076)))))
(let (($x6086 (= ?x5621 0)))
(let (($x6096 (or (not $x6078) $x6086)))
(let ((@x6264 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or $x3045 $x6096)) (rewrite (= (or $x3045 $x6096) (or $x3045 (not $x6078) $x6086))) (or $x3045 (not $x6078) $x6086))))
(let ((@x6993 (unit-resolution (unit-resolution @x6264 @x3474 $x6096) (unit-resolution (unit-resolution @x6389 @x3480 $x6080) @x6410 $x6078) @x6636 false)))
(let ((@x7107 (lemma ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x6266) (hypothesis $x6043) (hypothesis $x6879) false) (or (not $x6266) $x6372 $x7105))))
(let ((@x6134 (unit-resolution (unit-resolution @x7107 (lemma @x6993 $x6266) (or $x6372 $x7105)) @x6339 $x7105)))
(let ((@x6066 (unit-resolution (def-axiom (or $x3804 $x253)) @x4802 $x253)))
(let ((@x6683 (unit-resolution (def-axiom (or $x3816 $x3560)) @x4357 $x3560)))
(let (($x6034 (= (or $x3565 (or $x252 (not $x5543) $x6879)) (or $x3565 $x252 (not $x5543) $x6879))))
(let ((@x6556 (mp ((_ quant-inst ?v0!14 v_b_v_G_1$) (or $x3565 (or $x252 (not $x5543) $x6879))) (rewrite $x6034) (or $x3565 $x252 (not $x5543) $x6879))))
(let ((@x6850 (unit-resolution @x6556 @x6683 @x6066 @x6134 (unit-resolution @x6501 @x5728 $x5543) false)))
(let ((@x5791 (unit-resolution (lemma @x6850 $x1824) (unit-resolution (def-axiom (or $x1824 $x3393)) (hypothesis $x1825) $x3393) (unit-resolution (def-axiom (or $x1824 $x1819)) (hypothesis $x1825) $x1819) false)))
(let ((@x9261 (unit-resolution (def-axiom (or $x3789 $x1825 $x3783)) (unit-resolution (def-axiom (or $x3792 $x3786)) @x4711 $x3786) $x3786)))
(let ((@x9263 (unit-resolution (def-axiom (or $x3780 $x3690)) (unit-resolution @x9261 (lemma @x5791 $x1824) $x3783) $x3690)))
(let ((@x6271 (mp ((_ quant-inst ?v1!18) (or $x3695 (or $x2786 $x6951))) (rewrite (= (or $x3695 (or $x2786 $x6951)) (or $x3695 $x2786 $x6951))) (or $x3695 $x2786 $x6951))))
(let ((@x5205 (unit-resolution @x6271 @x9263 (unit-resolution (def-axiom (or $x2801 $x1878)) @x8699 $x1878) $x6951)))
(let ((@x8621 ((_ th-lemma arith assign-bounds -1 -1 1) (or (not (>= (+ ?x1880 ?x6950 ?x7461) 0)) (not $x7401) $x1891 (not $x8129)))))
(let ((@x8189 (unit-resolution @x8621 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6951) $x8129)) @x5205 $x8129) (unit-resolution (def-axiom (or $x2801 (not $x1891))) @x8699 (not $x1891)) @x8710 (not (>= (+ ?x1880 ?x6950 ?x7461) 0)))))
(let (($x5620 (= (or $x3573 (or $x6179 $x1883 (>= (+ ?x1880 ?x6950 ?x7461) 0))) (or $x3573 $x6179 $x1883 (>= (+ ?x1880 ?x6950 ?x7461) 0)))))
(let ((@x7205 (mp ((_ quant-inst ?v0!19 ?v1!18) (or $x3573 (or $x6179 $x1883 (>= (+ ?x1880 ?x6950 ?x7461) 0)))) (rewrite $x5620) (or $x3573 $x6179 $x1883 (>= (+ ?x1880 ?x6950 ?x7461) 0)))))
(let ((@x8192 (unit-resolution @x7205 (unit-resolution (def-axiom (or $x3816 $x3568)) @x4357 $x3568) (unit-resolution (def-axiom (or $x2801 $x1884)) @x8699 $x1884) (or $x6179 (>= (+ ?x1880 ?x6950 ?x7461) 0)))))
(let (($x8059 (or $x6383 $x5168)))
(let (($x4914 (fun_app$ ?x260 ?v1!18)))
(let (($x8555 (= $x4914 $x8059)))
(let (($x7052 (or $x4134 $x8555)))
(let ((@x8554 (monotonicity (rewrite (= (ite $x6383 true $x5168) $x8059)) (= (= $x4914 (ite $x6383 true $x5168)) $x8555))))
(let ((@x8280 (monotonicity @x8554 (= (or $x4134 (= $x4914 (ite $x6383 true $x5168))) $x7052))))
(let ((@x7080 (trans @x8280 (rewrite (= $x7052 $x7052)) (= (or $x4134 (= $x4914 (ite $x6383 true $x5168))) $x7052))))
(let ((@x7791 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!18) (or $x4134 (= $x4914 (ite $x6383 true $x5168)))) @x7080 $x7052)))
(let ((@x8161 (mp (unit-resolution (def-axiom (or $x2801 $x1878)) @x8699 $x1878) (symm (monotonicity @x6739 (= $x4914 $x1878)) (= $x1878 $x4914)) $x4914)))
(let ((@x8162 (unit-resolution (def-axiom (or (not $x8555) (not $x4914) $x8059)) @x8161 (unit-resolution @x7791 @x3468 $x8555) $x8059)))
(let ((@x8163 (unit-resolution (def-axiom (or (not $x8059) $x6383 $x5168)) @x8162 (unit-resolution @x8192 @x8189 $x6179) $x6383)))
(let ((@x5864 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1880 ?x7555)) $x8504)) (monotonicity (monotonicity @x8163 (= ?x1879 ?x7554)) (= ?x1880 ?x7555)) $x8504)))
(let (($x7609 (>= (+ ?x1887 (* (- 1) ?x3063)) 0)))
(let ((@x5835 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1887 ?x3063)) $x7609)) (monotonicity @x8163 (= ?x1887 ?x3063)) $x7609)))
(let ((?x3064 (* (- 1) ?x3063)))
(let ((?x3904 (+ ?x254 ?x3064)))
(let (($x3905 (<= ?x3904 0)))
(let (($x4587 (= ?x254 ?x3063)))
(let ((@x8351 (mp (unit-resolution (unit-resolution @x4574 @x4803 $x4550) @x7085 $x3024) (symm (commutativity (= $x4587 $x3024)) (= $x3024 $x4587)) $x4587)))
(let ((@x8148 ((_ th-lemma arith farkas 1 -1 1 -1 1) (hypothesis $x6123) (hypothesis (not $x1891)) (hypothesis $x7609) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4587) $x3905)) @x8351 $x3905) (hypothesis $x8504) false)))
(let ((@x6098 (unit-resolution (lemma @x8148 (or $x8149 $x1891 (not $x7609) (not $x8504))) (unit-resolution (def-axiom (or $x2801 (not $x1891))) @x8699 (not $x1891)) @x5835 @x5864 $x8149)))
(let ((@x8175 (unit-resolution (def-axiom (or $x8378 (not $x7517))) (hypothesis (not $x8378)) (not $x7517))))
(let (($x7000 (not $x4944)))
(let ((@x8640 (unit-resolution (def-axiom (or $x8378 $x7000)) (hypothesis (not $x8378)) $x7000)))
(let (($x6310 (or $x7517 $x4944 $x6876)))
(let (($x7071 (or $x3670 $x7517 $x4944 $x6876)))
(let (($x7524 (<= (+ ?x7388 ?x1168 ?x7512) 0)))
(let (($x7589 (or $x7517 $x7524 (= (+ ?x254 ?x7555 ?x1889) 0))))
(let (($x6768 (or $x3670 $x7589)))
(let ((@x6946 (monotonicity (rewrite (= (+ ?x254 ?x7555 ?x1889) ?x7471)) (= (= (+ ?x254 ?x7555 ?x1889) 0) $x6876))))
(let ((@x7308 (monotonicity (rewrite (= (+ ?x7388 ?x1168 ?x7512) (+ ?x1168 ?x7388 ?x7512))) (= $x7524 (<= (+ ?x1168 ?x7388 ?x7512) 0)))))
(let ((@x8377 (trans @x7308 (rewrite (= (<= (+ ?x1168 ?x7388 ?x7512) 0) $x4944)) (= $x7524 $x4944))))
(let ((@x6639 (monotonicity (monotonicity @x8377 @x6946 (= $x7589 $x6310)) (= $x6768 (or $x3670 $x6310)))))
(let ((@x6030 (mp ((_ quant-inst ?v0!19) $x6768) (trans @x6639 (rewrite (= (or $x3670 $x6310) $x7071)) (= $x6768 $x7071)) $x7071)))
(let ((@x8762 (unit-resolution (unit-resolution @x6030 @x4789 $x6310) @x8640 @x8175 (hypothesis $x8868) false)))
(let ((@x8475 (unit-resolution (lemma @x8762 (or $x8378 $x6876)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8868 $x6123)) @x6098 $x8868) $x8378)))
(let ((@x8713 (lemma ((_ th-lemma arith farkas -1 -1 1) @x8710 (hypothesis $x8149) (hypothesis $x4944) false) (or $x7000 $x6123))))
(let ((@x7808 (unit-resolution (def-axiom (or (not $x8378) $x7517 $x4944)) (unit-resolution @x8713 @x6098 $x7000) @x8475 $x7517)))
(let ((@x7807 ((_ th-lemma arith farkas 1 -1 1) @x5864 @x7808 (unit-resolution (def-axiom (or $x2801 $x1884)) @x8699 $x1884) false)))
(let (($x3381 (not $x1864)))
(let ((@x6859 (hypothesis $x2760)))
(let ((@x6910 (unit-resolution (def-axiom (or $x2755 $x3381)) @x6859 $x3381)))
(let (($x6437 (<= (+ ?x254 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v1!16))) 0)))
(let (($x4947 (fun_app$ v_b_Visited_G_1$ ?v1!16)))
(let (($x6336 (= ?v1!16 v_b_v_G_1$)))
(let (($x8534 (or $x6336 $x4947)))
(let (($x6263 (fun_app$ ?x260 ?v1!16)))
(let (($x6346 (= $x6263 $x8534)))
(let (($x8582 (or $x4134 $x6346)))
(let ((@x8309 (monotonicity (rewrite (= (ite $x6336 true $x4947) $x8534)) (= (= $x6263 (ite $x6336 true $x4947)) $x6346))))
(let ((@x8586 (monotonicity @x8309 (= (or $x4134 (= $x6263 (ite $x6336 true $x4947))) $x8582))))
(let ((@x8591 (trans @x8586 (rewrite (= $x8582 $x8582)) (= (or $x4134 (= $x6263 (ite $x6336 true $x4947))) $x8582))))
(let ((@x8592 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!16) (or $x4134 (= $x6263 (ite $x6336 true $x4947)))) @x8591 $x8582)))
(let ((@x7062 (monotonicity (symm (monotonicity @x6739 (= $x6263 $x1855)) (= $x1855 $x6263)) (= (not $x1855) (not $x6263)))))
(let ((@x7109 (mp (unit-resolution (def-axiom (or $x2755 (not $x1855))) @x6859 (not $x1855)) @x7062 (not $x6263))))
(let ((@x7053 (unit-resolution (def-axiom (or (not $x6346) $x6263 (not $x8534))) @x7109 (unit-resolution @x8592 @x3468 $x6346) (not $x8534))))
(let (($x7664 (or $x4947 $x6437)))
(let ((@x7108 (unit-resolution (def-axiom (or $x3804 $x3655)) @x4802 $x3655)))
(let (($x6930 (or $x3660 $x4947 $x6437)))
(let (($x7189 (>= (+ (fun_app$a v_b_SP_G_1$ ?v1!16) ?x1168) 0)))
(let (($x7192 (or $x4947 $x7189)))
(let (($x7392 (or $x3660 $x7192)))
(let ((@x6696 (rewrite (= (>= (+ ?x1168 (fun_app$a v_b_SP_G_1$ ?v1!16)) 0) $x6437))))
(let (($x7657 (= (+ (fun_app$a v_b_SP_G_1$ ?v1!16) ?x1168) (+ ?x1168 (fun_app$a v_b_SP_G_1$ ?v1!16)))))
(let ((@x6394 (monotonicity (rewrite $x7657) (= $x7189 (>= (+ ?x1168 (fun_app$a v_b_SP_G_1$ ?v1!16)) 0)))))
(let ((@x7789 (monotonicity (monotonicity (trans @x6394 @x6696 (= $x7189 $x6437)) (= $x7192 $x7664)) (= $x7392 (or $x3660 $x7664)))))
(let ((@x7788 (mp ((_ quant-inst ?v1!16) $x7392) (trans @x7789 (rewrite (= (or $x3660 $x7664) $x6930)) (= $x7392 $x6930)) $x6930)))
(let ((@x7110 (unit-resolution (unit-resolution @x7788 @x7108 $x7664) (unit-resolution (def-axiom (or $x8534 (not $x4947))) @x7053 (not $x4947)) $x6437)))
(let (($x6906 (<= (+ (v_b_SP_G_2$ ?v0!17) (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0!17))) 0)))
(let (($x7394 (or $x3686 $x6906)))
(let (($x6869 (>= (+ (fun_app$a v_b_SP_G_1$ ?v0!17) (* (- 1) (v_b_SP_G_2$ ?v0!17))) 0)))
(let (($x7794 (>= (+ (* (- 1) (v_b_SP_G_2$ ?v0!17)) (fun_app$a v_b_SP_G_1$ ?v0!17)) 0)))
(let (($x7505 (= (+ (fun_app$a v_b_SP_G_1$ ?v0!17) (* (- 1) (v_b_SP_G_2$ ?v0!17))) (+ (* (- 1) (v_b_SP_G_2$ ?v0!17)) (fun_app$a v_b_SP_G_1$ ?v0!17)))))
(let ((@x6937 (trans (monotonicity (rewrite $x7505) (= $x6869 $x7794)) (rewrite (= $x7794 $x6906)) (= $x6869 $x6906))))
(let ((@x7419 (trans (monotonicity @x6937 (= (or $x3686 $x6869) $x7394)) (rewrite (= $x7394 $x7394)) (= (or $x3686 $x6869) $x7394))))
(let (($x6920 (>= (+ (v_b_SP_G_2$ ?v1!16) (* (- 1) (fun_app$a v_b_SP_G_1$ ?v1!16))) 0)))
(let ((?x6958 (fun_app$a v_b_SP_G_1$ ?v1!16)))
(let ((?x1860 (v_b_SP_G_2$ ?v1!16)))
(let (($x6841 (= ?x1860 ?x6958)))
(let (($x7027 (>= (+ ?x254 (b_G$ (pair$ v_b_v_G_1$ ?v1!16)) (* (- 1) ?x6958)) 0)))
(let (($x6231 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v1!16)))) 0)))
(let (($x7455 (or $x6231 $x7027)))
(let ((?x6824 (pair$ v_b_v_G_1$ ?v1!16)))
(let ((?x6825 (b_G$ ?x6824)))
(let ((?x6938 (* (- 1) ?x1860)))
(let ((?x6929 (+ ?x254 ?x6938 ?x6825)))
(let (($x7553 (= ?x6929 0)))
(let (($x7206 (not $x7553)))
(let (($x6067 (<= ?x6929 0)))
(let (($x6919 (not $x6067)))
(let (($x6631 (fun_app$ v_b_Visited_G_1$ ?v0!17)))
(let (($x6844 (= ?v0!17 v_b_v_G_1$)))
(let (($x6265 (or $x6844 $x6631)))
(let (($x6895 (fun_app$ ?x260 ?v0!17)))
(let (($x6665 (= $x6895 $x6265)))
(let (($x5717 (or $x4134 $x6665)))
(let ((@x6990 (monotonicity (rewrite (= (ite $x6844 true $x6631) $x6265)) (= (= $x6895 (ite $x6844 true $x6631)) $x6665))))
(let ((@x7528 (monotonicity @x6990 (= (or $x4134 (= $x6895 (ite $x6844 true $x6631))) $x5717))))
(let ((@x7133 (trans @x7528 (rewrite (= $x5717 $x5717)) (= (or $x4134 (= $x6895 (ite $x6844 true $x6631))) $x5717))))
(let ((@x7043 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!17) (or $x4134 (= $x6895 (ite $x6844 true $x6631)))) @x7133 $x5717)))
(let ((@x7214 (mp (unit-resolution (def-axiom (or $x2755 $x1857)) @x6859 $x1857) (symm (monotonicity @x6739 (= $x6895 $x1857)) (= $x1857 $x6895)) $x6895)))
(let ((@x7215 (unit-resolution (def-axiom (or (not $x6665) (not $x6895) $x6265)) @x7214 (unit-resolution @x7043 @x3468 $x6665) $x6265)))
(let (($x7558 (<= ?x6825 0)))
(let (($x7559 (not $x7558)))
(let ((@x6953 (symm (commutativity (= (= v_b_v_G_1$ ?v1!16) $x6336)) (= $x6336 (= v_b_v_G_1$ ?v1!16)))))
(let ((@x6769 (mp (hypothesis (not $x6336)) (monotonicity @x6953 (= (not $x6336) (not (= v_b_v_G_1$ ?v1!16)))) (not (= v_b_v_G_1$ ?v1!16)))))
(let (($x7557 (= v_b_v_G_1$ ?v1!16)))
(let (($x7560 (or $x7557 $x7559)))
(let ((@x5992 (mp ((_ quant-inst v_b_v_G_1$ ?v1!16) (or (not $x3475) $x7560)) (rewrite (= (or (not $x3475) $x7560) (or (not $x3475) $x7557 $x7559))) (or (not $x3475) $x7557 $x7559))))
(let ((@x6161 (hypothesis $x3381)))
(let ((?x6285 (fun_app$a v_b_SP_G_1$ ?v0!17)))
(let ((?x6904 (* (- 1) ?x6285)))
(let ((?x7131 (+ ?x254 ?x6904)))
(let (($x6000 (>= ?x7131 0)))
(let (($x6858 (not $x6844)))
(let ((?x1861 (v_b_SP_G_2$ ?v0!17)))
(let (($x6188 (= ?x1861 ?x3063)))
(let (($x5847 (not $x6188)))
(let ((?x5089 (+ ?x1861 ?x3064)))
(let (($x5848 (<= ?x5089 0)))
(let (($x6925 (not $x5848)))
(let ((@x6267 (hypothesis $x6067)))
(let (($x3906 (>= ?x3904 0)))
(let (($x4341 (or $x3686 $x3906)))
(let ((@x4906 ((_ quant-inst v_b_v_G_1$) $x4341)))
(let ((@x6160 (unit-resolution @x4906 @x4714 $x3906)))
(let ((@x6971 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x6267 (hypothesis $x5848) @x6161 @x6160 (hypothesis $x7559) false) (or $x6925 $x6919 $x1864 $x7558))))
(let ((@x6928 (unit-resolution @x6971 @x6267 @x6161 (unit-resolution (unit-resolution @x5992 @x3480 $x7560) @x6769 $x7559) $x6925)))
(let ((@x6532 ((_ th-lemma arith triangle-eq) (or $x5847 $x5848))))
(let ((@x5114 (unit-resolution (hypothesis $x5847) (monotonicity (hypothesis $x6844) $x6188) false)))
(let ((@x5115 (lemma @x5114 (or $x6858 $x6188))))
(let ((@x8623 (def-axiom (or (not $x6265) $x6844 $x6631))))
(let ((@x4834 (unit-resolution @x8623 (unit-resolution @x5115 (unit-resolution @x6532 @x6928 $x5847) $x6858) (hypothesis $x6265) $x6631)))
(let (($x5475 (= (or $x3565 (or $x252 (not $x6631) $x6000)) (or $x3565 $x252 (not $x6631) $x6000))))
(let ((@x5735 (mp ((_ quant-inst ?v0!17 v_b_v_G_1$) (or $x3565 (or $x252 (not $x6631) $x6000))) (rewrite $x5475) (or $x3565 $x252 (not $x6631) $x6000))))
(let ((@x6914 ((_ th-lemma arith farkas 1 1 1 1 1) @x6267 (unit-resolution @x5735 @x6683 @x6066 @x4834 $x6000) (unit-resolution (mp ((_ quant-inst ?v0!17) (or $x3686 $x6869)) @x7419 $x7394) @x4714 $x6906) @x6161 (unit-resolution (unit-resolution @x5992 @x3480 $x7560) @x6769 $x7559) false)))
(let ((@x7217 (unit-resolution (lemma @x6914 (or $x6919 $x1864 (not $x6265) $x6336)) @x6910 @x7215 (unit-resolution (def-axiom (or $x8534 (not $x6336))) @x7053 (not $x6336)) $x6919)))
(let ((@x6357 (unit-resolution (def-axiom (or $x7455 (not $x6231))) (hypothesis (not $x7455)) (not $x6231))))
(let ((@x6426 (unit-resolution (def-axiom (or $x7455 (not $x7027))) (hypothesis (not $x7455)) (not $x7027))))
(let (($x7603 (or $x6231 $x7027 $x7553)))
(let (($x5113 (or $x3670 $x6231 $x7027 $x7553)))
(let (($x6826 (<= (+ ?x6958 ?x1168 (* (- 1) ?x6825)) 0)))
(let (($x6927 (or $x6231 $x6826 (= (+ ?x254 ?x6825 ?x6938) 0))))
(let (($x7688 (or $x3670 $x6927)))
(let ((@x7602 (monotonicity (rewrite (= (+ ?x254 ?x6825 ?x6938) ?x6929)) (= (= (+ ?x254 ?x6825 ?x6938) 0) $x7553))))
(let ((@x7947 (rewrite (= (+ ?x6958 ?x1168 (* (- 1) ?x6825)) (+ ?x1168 (* (- 1) ?x6825) ?x6958)))))
(let ((@x7737 (monotonicity @x7947 (= $x6826 (<= (+ ?x1168 (* (- 1) ?x6825) ?x6958) 0)))))
(let ((@x8385 (trans @x7737 (rewrite (= (<= (+ ?x1168 (* (- 1) ?x6825) ?x6958) 0) $x7027)) (= $x6826 $x7027))))
(let ((@x6604 (monotonicity (monotonicity @x8385 @x7602 (= $x6927 $x7603)) (= $x7688 (or $x3670 $x7603)))))
(let ((@x7391 (mp ((_ quant-inst ?v1!16) $x7688) (trans @x6604 (rewrite (= (or $x3670 $x7603) $x5113)) (= $x7688 $x5113)) $x5113)))
(let ((@x4197 (unit-resolution (unit-resolution @x7391 @x4789 $x7603) @x6426 @x6357 (hypothesis $x7206) false)))
(let ((@x7250 (unit-resolution (lemma @x4197 (or $x7455 $x7553)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7206 $x6067)) @x7217 $x7206) $x7455)))
(let (($x7639 (not $x7455)))
(let (($x7673 (or $x7639 $x6841)))
(let (($x7669 (or $x3678 $x7639 $x6841)))
(let ((@x7671 (monotonicity (monotonicity @x8385 (= (or $x6231 $x6826) $x7455)) (= (not (or $x6231 $x6826)) $x7639))))
(let ((@x7677 (monotonicity (monotonicity @x7671 (= (or (not (or $x6231 $x6826)) $x6841) $x7673)) (= (or $x3678 (or (not (or $x6231 $x6826)) $x6841)) (or $x3678 $x7673)))))
(let ((@x7387 (trans @x7677 (rewrite (= (or $x3678 $x7673) $x7669)) (= (or $x3678 (or (not (or $x6231 $x6826)) $x6841)) $x7669))))
(let ((@x7252 (unit-resolution (mp ((_ quant-inst ?v1!16) (or $x3678 (or (not (or $x6231 $x6826)) $x6841))) @x7387 $x7669) @x4803 $x7673)))
(let ((@x7315 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6841) $x6920)) (unit-resolution @x7252 @x7250 $x6841) $x6920)))
(let ((@x7323 (unit-resolution ((_ th-lemma arith assign-bounds -1 1 -1 -1) (or (not $x6000) (not $x6437) (not $x6920) (not $x6906) $x1864)) @x7315 (unit-resolution (mp ((_ quant-inst ?v0!17) (or $x3686 $x6869)) @x7419 $x7394) @x4714 $x6906) @x7110 @x6910 (not $x6000))))
(let ((@x7351 (unit-resolution ((_ th-lemma arith assign-bounds -1 1 -1 1) (or $x6925 (not $x3906) (not $x6437) (not $x6920) $x1864)) @x7315 @x6160 @x7110 @x6910 $x6925)))
(let ((@x7364 (unit-resolution @x8623 (unit-resolution @x5115 (unit-resolution @x6532 @x7351 $x5847) $x6858) @x7215 $x6631)))
(let (($x6106 (not (<= (b_G$ (pair$ v_b_v_G_1$ ?v0!15)) 0))))
(let (($x5808 (= v_b_v_G_1$ ?v0!15)))
(let (($x5324 (not $x5808)))
(let ((@x6624 (symm (commutativity (= $x5808 (= ?v0!15 v_b_v_G_1$))) (= (= ?v0!15 v_b_v_G_1$) $x5808))))
(let (($x6044 (= ?v0!15 v_b_v_G_1$)))
(let (($x6867 (not $x6044)))
(let (($x5521 (fun_app$ v_b_Visited_G_1$ ?v0!15)))
(let (($x6849 (or $x6044 $x5521)))
(let (($x6408 (fun_app$ ?x260 ?v0!15)))
(let (($x6494 (= $x6408 $x6849)))
(let (($x5683 (or $x4134 $x6494)))
(let ((@x6072 (monotonicity (rewrite (= (ite $x6044 true $x5521) $x6849)) (= (= $x6408 (ite $x6044 true $x5521)) $x6494))))
(let ((@x6772 (monotonicity @x6072 (= (or $x4134 (= $x6408 (ite $x6044 true $x5521))) $x5683))))
(let ((@x5812 (trans @x6772 (rewrite (= $x5683 $x5683)) (= (or $x4134 (= $x6408 (ite $x6044 true $x5521))) $x5683))))
(let ((@x5804 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!15) (or $x4134 (= $x6408 (ite $x6044 true $x5521)))) @x5812 $x5683)))
(let ((@x6715 (symm (monotonicity @x6739 (= $x6408 (fun_app$ v_b_Visited_G_2$ ?v0!15))) (= (fun_app$ v_b_Visited_G_2$ ?v0!15) $x6408))))
(let ((@x6719 (monotonicity @x6715 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!15)) (not $x6408)))))
(let (($x6151 (fun_app$ v_b_Visited_G_2$ ?v0!15)))
(let (($x6527 (not $x6151)))
(let ((@x6833 (hypothesis $x1843)))
(let (($x6836 (or (not (>= (+ ?x1841 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0!15))) 0)) $x1842)))
(let (($x6830 (>= (+ ?x1841 (* (- 1) (fun_app$a v_b_SP_G_1$ ?v0!15))) 0)))
(let ((?x6459 (fun_app$a v_b_SP_G_1$ ?v0!15)))
(let (($x6119 (>= ?x6459 0)))
(let ((@x4713 (unit-resolution (def-axiom (or $x3816 $x3551)) @x4357 $x3551)))
(let ((@x6834 ((_ th-lemma arith farkas -1 1 1) @x6833 (unit-resolution ((_ quant-inst ?v0!15) (or $x3556 $x6119)) @x4713 $x6119) (hypothesis $x6830) false)))
(let ((@x6656 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1841 ?x6459)) $x6830)) (unit-resolution (lemma @x6834 $x6836) @x6833 (not $x6830)) (not (= ?x1841 ?x6459)))))
(let (($x6618 (= (or $x3695 (or $x6527 (= ?x1841 ?x6459))) (or $x3695 $x6527 (= ?x1841 ?x6459)))))
(let ((@x6610 (mp ((_ quant-inst ?v0!15) (or $x3695 (or $x6527 (= ?x1841 ?x6459)))) (rewrite $x6618) (or $x3695 $x6527 (= ?x1841 ?x6459)))))
(let ((@x6720 (mp (unit-resolution @x6610 (hypothesis $x3690) @x6656 $x6527) @x6719 (not $x6408))))
(let ((@x6725 (unit-resolution (def-axiom (or (not $x6494) $x6408 (not $x6849))) @x6720 (unit-resolution @x5804 @x3468 $x6494) (not $x6849))))
(let ((@x6488 (mp (unit-resolution (def-axiom (or $x6849 $x6867)) @x6725 $x6867) (monotonicity @x6624 (= $x6867 $x5324)) $x5324)))
(let (($x6164 (or $x5808 $x6106)))
(let ((@x5318 (mp ((_ quant-inst v_b_v_G_1$ ?v0!15) (or (not $x3475) $x6164)) (rewrite (= (or (not $x3475) $x6164) (or (not $x3475) $x5808 $x6106))) (or (not $x3475) $x5808 $x6106))))
(let (($x3157 (>= ?x169 0)))
(let ((?x4056 (+ ?x169 ?x1168)))
(let (($x6181 (<= ?x4056 0)))
(let (($x3907 (= v_b_v_G_1$ b_Source$)))
(let ((?x3908 (?v1!7 v_b_v_G_1$)))
(let ((?x3915 (pair$ ?x3908 v_b_v_G_1$)))
(let ((?x3916 (b_G$ ?x3915)))
(let ((?x3917 (* (- 1) ?x3916)))
(let ((?x3909 (fun_app$a v_b_SP_G_1$ ?x3908)))
(let ((?x3910 (* (- 1) ?x3909)))
(let ((?x3918 (+ ?x254 ?x3910 ?x3917)))
(let (($x3919 (= ?x3918 0)))
(let (($x3913 (fun_app$ v_b_Visited_G_1$ ?x3908)))
(let (($x3914 (not $x3913)))
(let ((?x3911 (+ ?x254 ?x3910)))
(let (($x3912 (<= ?x3911 0)))
(let (($x3921 (or $x3912 $x3914 (not $x3919))))
(let (($x4342 (>= ?x3911 0)))
(let (($x6807 (not $x4342)))
(let ((@x6790 (hypothesis $x4342)))
(let (($x5838 (>= ?x3909 0)))
(let ((?x6528 (pair$ v_b_v_G_1$ ?v0!15)))
(let ((?x6529 (b_G$ ?x6528)))
(let ((?x6364 (* (- 1) ?x1841)))
(let ((?x5981 (+ ?x254 ?x6364 ?x6529)))
(let (($x6866 (<= ?x5981 0)))
(let (($x6554 (= ?x5981 0)))
(let (($x5936 (>= (+ ?x254 (* (- 1) ?x6459) ?x6529) 0)))
(let (($x6303 (<= (+ b_Infinity$ (* (- 1) ?x6529)) 0)))
(let (($x3933 (or $x6303 $x5936)))
(let (($x6288 (not $x3933)))
(let (($x6486 (= ?x1841 ?x6459)))
(let (($x6685 (or $x3678 $x6288 $x6486)))
(let (($x6462 (or (not (or $x6303 (<= (+ ?x6459 ?x1168 (* (- 1) ?x6529)) 0))) $x6486)))
(let (($x6686 (or $x3678 $x6462)))
(let (($x5681 (<= (+ ?x6459 ?x1168 (* (- 1) ?x6529)) 0)))
(let ((@x3990 (rewrite (= (+ ?x6459 ?x1168 (* (- 1) ?x6529)) (+ ?x1168 ?x6459 (* (- 1) ?x6529))))))
(let ((@x4138 (monotonicity @x3990 (= $x5681 (<= (+ ?x1168 ?x6459 (* (- 1) ?x6529)) 0)))))
(let ((@x3932 (trans @x4138 (rewrite (= (<= (+ ?x1168 ?x6459 (* (- 1) ?x6529)) 0) $x5936)) (= $x5681 $x5936))))
(let ((@x6693 (monotonicity (monotonicity @x3932 (= (or $x6303 $x5681) $x3933)) (= (not (or $x6303 $x5681)) $x6288))))
(let ((@x6509 (monotonicity (monotonicity @x6693 (= $x6462 (or $x6288 $x6486))) (= $x6686 (or $x3678 (or $x6288 $x6486))))))
(let ((@x5868 (trans @x6509 (rewrite (= (or $x3678 (or $x6288 $x6486)) $x6685)) (= $x6686 $x6685))))
(let ((@x6885 (unit-resolution (def-axiom (or $x3933 (not $x6303))) (hypothesis $x6288) (not $x6303))))
(let ((@x6886 (unit-resolution (def-axiom (or $x3933 (not $x5936))) (hypothesis $x6288) (not $x5936))))
(let (($x4983 (or $x6303 $x5936 $x6554)))
(let (($x3903 (or $x3670 $x6303 $x5936 $x6554)))
(let (($x5258 (or $x6303 $x5681 (= (+ ?x254 ?x6529 ?x6364) 0))))
(let (($x4854 (or $x3670 $x5258)))
(let ((@x4987 (monotonicity (rewrite (= (+ ?x254 ?x6529 ?x6364) ?x5981)) (= (= (+ ?x254 ?x6529 ?x6364) 0) $x6554))))
(let ((@x5496 (monotonicity (monotonicity @x3932 @x4987 (= $x5258 $x4983)) (= $x4854 (or $x3670 $x4983)))))
(let ((@x5069 (mp ((_ quant-inst ?v0!15) $x4854) (trans @x5496 (rewrite (= (or $x3670 $x4983) $x3903)) (= $x4854 $x3903)) $x3903)))
(let ((@x6888 (unit-resolution (unit-resolution @x5069 @x4789 $x4983) @x6886 @x6885 (hypothesis (not $x6554)) false)))
(let ((@x6099 (unit-resolution (lemma @x6888 (or $x3933 $x6554)) (unit-resolution (mp ((_ quant-inst ?v0!15) $x6686) @x5868 $x6685) @x4803 @x6656 $x6288) $x6554)))
(let ((@x6871 ((_ th-lemma arith farkas 1 1 1 1 1) @x6833 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6554) $x6866)) @x6099 $x6866) (unit-resolution ((_ quant-inst (?v1!7 v_b_v_G_1$)) (or $x3556 $x5838)) @x4713 $x5838) @x6790 (unit-resolution (unit-resolution @x5318 @x3480 $x6164) @x6488 $x6106) false)))
(let ((@x6225 (unit-resolution (lemma @x6871 (or $x3695 $x1842 $x6807)) (hypothesis $x3690) @x6833 $x6807)))
(let ((@x3174 (def-axiom (or $x3921 (not $x3912)))))
(let ((@x6645 (unit-resolution @x3174 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x4342 $x3912)) @x6225 $x3912) $x3921)))
(let (($x3922 (not $x3921)))
(let (($x4599 (or $x3581 $x3907 $x1208 $x3922)))
(let ((@x4617 (mp ((_ quant-inst v_b_v_G_1$) (or $x3581 (or $x3907 $x1208 $x3922))) (rewrite (= (or $x3581 (or $x3907 $x1208 $x3922)) $x4599)) $x4599)))
(let ((@x6649 (unit-resolution @x4617 @x4189 (unit-resolution (def-axiom (or $x3804 $x1209)) @x4802 $x1209) (or $x3907 $x3922))))
(let ((@x5588 (symm (monotonicity (unit-resolution @x6649 @x6645 $x3907) (= ?x254 ?x169)) (= ?x169 ?x254))))
(let ((@x5241 ((_ th-lemma arith farkas 1 1 1 1 1) @x6833 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6554) $x6866)) @x6099 $x6866) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x169 ?x254)) $x6181)) @x5588 $x6181) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2947 $x3157)) @x4135 $x3157) (unit-resolution (unit-resolution @x5318 @x3480 $x6164) @x6488 $x6106) false)))
(let ((@x8742 (unit-resolution (def-axiom (or $x3780 $x3774)) (unit-resolution @x9261 (lemma @x5791 $x1824) $x3783) $x3774)))
(let (($x4076 (= ?x291 ?x169)))
(let (($x4073 (<= (+ ?x169 ?x1168 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ b_Source$)))) 0)))
(let (($x4071 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ b_Source$)))) 0)))
(let (($x4074 (or $x4071 $x4073)))
(let (($x3924 (>= ?x254 0)))
(let (($x4636 (or $x3556 $x3924)))
(let ((@x4637 ((_ quant-inst v_b_v_G_1$) $x4636)))
(let (($x4075 (not $x4074)))
(let ((@x5775 (hypothesis $x4075)))
(let ((?x4061 (pair$ v_b_v_G_1$ b_Source$)))
(let ((?x4062 (b_G$ ?x4061)))
(let (($x5863 (>= ?x4062 0)))
(let (($x5333 (= ?x4062 0)))
(let (($x5329 (<= ?x4062 0)))
(let (($x4173 (<= ?x291 0)))
(let ((?x4078 (* (- 1) ?x291)))
(let ((?x4144 (+ ?x169 ?x4078)))
(let (($x4145 (>= ?x4144 0)))
(let (($x4905 (or $x3686 $x4145)))
(let ((@x5229 ((_ quant-inst b_Source$) $x4905)))
(let (($x3158 (<= ?x169 0)))
(let ((@x4838 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2947 $x3158)) @x4135 $x3158)))
(let ((@x4827 (unit-resolution ((_ th-lemma arith assign-bounds -1 1) (or $x4173 (not $x3158) (not $x4145))) @x4838 (unit-resolution @x5229 @x4714 $x4145) $x4173)))
(let ((?x4096 (+ ?x254 ?x4078 ?x4062)))
(let (($x4116 (<= ?x4096 0)))
(let (($x4099 (= ?x4096 0)))
(let (($x4102 (or $x4071 $x4073 $x4099)))
(let (($x4105 (or $x3670 $x4071 $x4073 $x4099)))
(let (($x4095 (or $x4071 $x4073 (= (+ ?x254 ?x4062 ?x4078) 0))))
(let (($x4106 (or $x3670 $x4095)))
(let ((@x4101 (monotonicity (rewrite (= (+ ?x254 ?x4062 ?x4078) ?x4096)) (= (= (+ ?x254 ?x4062 ?x4078) 0) $x4099))))
(let ((@x4110 (monotonicity (monotonicity @x4101 (= $x4095 $x4102)) (= $x4106 (or $x3670 $x4102)))))
(let ((@x4115 (mp ((_ quant-inst b_Source$) $x4106) (trans @x4110 (rewrite (= (or $x3670 $x4102) $x4105)) (= $x4106 $x4105)) $x4105)))
(let ((@x5780 (unit-resolution (unit-resolution @x4115 (hypothesis $x3665) $x4102) (unit-resolution (def-axiom (or $x4074 (not $x4073))) @x5775 (not $x4073)) (unit-resolution (def-axiom (or $x4074 (not $x4071))) @x5775 (not $x4071)) (hypothesis (not $x4099)) false)))
(let ((@x4831 (unit-resolution (lemma @x5780 (or $x4074 $x4099 $x3670)) @x4789 (or $x4074 $x4099))))
(let ((@x4846 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4099) $x4116)) (unit-resolution @x4831 @x5775 $x4099) $x4116)))
(let ((@x5939 ((_ th-lemma arith farkas -1 1 -1 1) (hypothesis $x3924) (hypothesis $x4173) (hypothesis (not $x5329)) (hypothesis $x4116) false)))
(let ((@x4867 (unit-resolution (lemma @x5939 (or $x5329 (not $x3924) (not $x4173) (not $x4116))) (unit-resolution @x4637 @x4713 $x3924) (or $x5329 (not $x4173) (not $x4116)))))
(let (($x5274 (= (or (not $x3475) (or $x3907 (not $x5329))) (or (not $x3475) $x3907 (not $x5329)))))
(let ((@x5275 (mp ((_ quant-inst v_b_v_G_1$ b_Source$) (or (not $x3475) (or $x3907 (not $x5329)))) (rewrite $x5274) (or (not $x3475) $x3907 (not $x5329)))))
(let ((@x5099 (rewrite (= (or $x3045 (or (not $x3907) $x5333)) (or $x3045 (not $x3907) $x5333)))))
(let ((@x5081 (mp ((_ quant-inst v_b_v_G_1$ b_Source$) (or $x3045 (or (not $x3907) $x5333))) @x5099 (or $x3045 (not $x3907) $x5333))))
(let ((@x4868 (unit-resolution @x5081 @x3474 (unit-resolution @x5275 @x3480 (unit-resolution @x4867 @x4846 @x4827 $x5329) $x3907) $x5333)))
(let ((@x4872 ((_ th-lemma arith farkas -1 1 1 1) @x4838 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5333) $x5863)) @x4868 $x5863) (unit-resolution (def-axiom (or $x4074 (not $x4073))) @x5775 (not $x4073)) (unit-resolution @x4637 @x4713 $x3924) false)))
(let (($x4077 (or $x4075 $x4076)))
(let (($x5055 (or $x3678 $x4075 $x4076)))
(let ((@x5303 (mp ((_ quant-inst b_Source$) (or $x3678 $x4077)) (rewrite (= (or $x3678 $x4077) $x5055)) $x5055)))
(let ((@x8878 (unit-resolution (unit-resolution @x5303 @x4803 $x4077) (lemma @x4872 $x4074) $x4076)))
(let ((@x9287 (unit-resolution (def-axiom (or $x3777 $x768 $x3771)) (mp @x8878 (monotonicity @x4135 (= $x4076 $x292)) $x292) (or $x3777 $x3771))))
(let ((@x8755 (unit-resolution (def-axiom (or $x3768 $x3762)) (unit-resolution @x9287 @x8742 $x3771) $x3762)))
(let ((@x8979 (unit-resolution (def-axiom (or $x3765 $x1843 $x3759)) @x8755 (unit-resolution (lemma @x5241 (or $x3695 $x1842)) @x9263 $x1842) $x3759)))
(let ((@x9416 (unit-resolution (def-axiom (or $x3753 $x2760 $x3747)) (unit-resolution (def-axiom (or $x3756 $x3750)) @x8979 $x3750) $x3750)))
(let ((@x9452 (unit-resolution @x9416 (lemma (unit-resolution @x5735 @x6683 @x6066 @x7364 @x7323 false) $x2755) $x3747)))
(let ((@x9454 (unit-resolution (def-axiom (or $x3741 $x2806 $x3735)) (unit-resolution (def-axiom (or $x3744 $x3738)) @x9452 $x3738) $x3738)))
(let ((@x9455 (unit-resolution @x9454 (lemma @x7807 $x2801) $x3735)))
(let ((@x9475 (unit-resolution (def-axiom (or $x3732 $x1910)) @x9455 $x1910)))
(let ((@x9478 ((_ th-lemma arith farkas -1 1 1) (hypothesis (<= (+ b_Infinity$ ?x4438) 0)) @x9476 @x9475 false)))
(let ((@x9241 (unit-resolution (lemma @x9478 (or $x9479 (not (<= (+ b_Infinity$ ?x4438) 0)))) @x9476 (not (<= (+ b_Infinity$ ?x4438) 0)))))
(let (($x4660 (<= (+ b_Infinity$ ?x4438) 0)))
(let (($x8499 (or $x3581 $x1904 $x4660 $x4675)))
(let ((@x7305 (mp ((_ quant-inst ?v0!20) (or $x3581 (or $x1904 $x4660 $x4675))) (rewrite (= (or $x3581 (or $x1904 $x4660 $x4675)) $x8499)) $x8499)))
(let ((@x9599 (unit-resolution @x7305 @x4189 (unit-resolution (def-axiom (or $x3732 $x1905)) @x9455 $x1905) (or $x4660 $x4675))))
(let ((@x9582 (unit-resolution @x9599 @x9241 $x4675)))
(let ((?x4717 (v_b_SP_G_2$ ?x4661)))
(let ((?x4720 (* (- 1) ?x4717)))
(let ((?x4721 (+ ?x4662 ?x4720)))
(let (($x4728 (>= ?x4721 0)))
(let ((@x9586 ((_ th-lemma arith farkas 1 1 -1 1) @x9476 (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3686 $x4728)) @x4714 $x4728) (hypothesis (<= (+ ?x1906 ?x4720) 0)) (unit-resolution (def-axiom (or $x4674 (not $x4665))) @x9582 (not $x4665)) false)))
(let ((@x8898 (unit-resolution (lemma @x9586 $x9588) @x9476 (not (<= (+ ?x1906 ?x4720) 0)))))
(let ((?x7341 (+ ?x1906 ?x4670 ?x4720)))
(let (($x7121 (= ?x7341 0)))
(let (($x5719 (<= ?x7341 0)))
(let (($x4844 (<= (+ b_Infinity$ ?x4670) 0)))
(let (($x8387 (not $x4844)))
(let (($x7025 (>= ?x4671 0)))
(let ((@x8158 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4673 $x7025)) (unit-resolution (def-axiom (or $x4674 $x4672)) @x9582 $x4672) $x7025)))
(let (($x4825 (>= ?x4662 0)))
(let ((@x8897 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1 -1) (or $x8387 (not $x4825) (not $x7025) $x1909 $x9479)) @x9475 (or $x8387 (not $x4825) (not $x7025) $x9479))))
(let ((@x8874 (unit-resolution @x8897 (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3556 $x4825)) @x4713 $x4825) @x9476 @x8158 $x8387)))
(let (($x4709 (fun_app$ v_b_Visited_G_2$ ?x4661)))
(let ((@x6057 (monotonicity (symm (hypothesis $x261) (= ?x260 v_b_Visited_G_2$)) (= (fun_app$ ?x260 ?x4661) $x4709))))
(let ((@x6061 (monotonicity (symm @x6057 (= $x4709 (fun_app$ ?x260 ?x4661))) (= (not $x4709) (not (fun_app$ ?x260 ?x4661))))))
(let (($x6003 (fun_app$ ?x260 ?x4661)))
(let (($x6010 (= ?x4661 v_b_v_G_1$)))
(let (($x6013 (or $x6010 $x4666)))
(let (($x6016 (= $x6003 $x6013)))
(let (($x6019 (or $x4134 $x6016)))
(let ((@x6018 (monotonicity (rewrite (= (ite $x6010 true $x4666) $x6013)) (= (= $x6003 (ite $x6010 true $x4666)) $x6016))))
(let ((@x6023 (monotonicity @x6018 (= (or $x4134 (= $x6003 (ite $x6010 true $x4666))) $x6019))))
(let ((@x6026 (trans @x6023 (rewrite (= $x6019 $x6019)) (= (or $x4134 (= $x6003 (ite $x6010 true $x4666))) $x6019))))
(let ((@x6027 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true (?v1!7 ?v0!20)) (or $x4134 (= $x6003 (ite $x6010 true $x4666)))) @x6026 $x6019)))
(let ((@x6050 (unit-resolution (def-axiom (or (not $x6016) $x6003 (not $x6013))) (unit-resolution (def-axiom (or $x6013 $x4667)) (hypothesis $x4666) $x6013) (or (not $x6016) $x6003))))
(let ((@x6063 (unit-resolution (unit-resolution @x6050 (unit-resolution @x6027 @x3468 $x6016) $x6003) (mp (hypothesis (not $x4709)) @x6061 (not $x6003)) false)))
(let ((@x8957 (unit-resolution (lemma @x6063 (or $x4709 $x2930 $x4667)) (unit-resolution (def-axiom (or $x3804 $x261)) @x4802 $x261) (or $x4709 $x4667))))
(let ((@x8892 (unit-resolution @x8957 (unit-resolution (def-axiom (or $x4674 $x4666)) @x9582 $x4666) $x4709)))
(let (($x4710 (not $x4709)))
(let (($x6183 (or $x3720 $x4710 $x4844 $x5719)))
(let (($x4848 (>= (+ ?x4669 ?x4717 ?x1907) 0)))
(let (($x4849 (or $x4710 $x4844 $x4848)))
(let (($x7891 (or $x3720 $x4849)))
(let ((@x7340 (monotonicity (rewrite (= (+ ?x4669 ?x4717 ?x1907) (+ ?x1907 ?x4669 ?x4717))) (= $x4848 (>= (+ ?x1907 ?x4669 ?x4717) 0)))))
(let ((@x7415 (trans @x7340 (rewrite (= (>= (+ ?x1907 ?x4669 ?x4717) 0) $x5719)) (= $x4848 $x5719))))
(let ((@x7922 (monotonicity (monotonicity @x7415 (= $x4849 (or $x4710 $x4844 $x5719))) (= $x7891 (or $x3720 (or $x4710 $x4844 $x5719))))))
(let ((@x7119 (trans @x7922 (rewrite (= (or $x3720 (or $x4710 $x4844 $x5719)) $x6183)) (= $x7891 $x6183))))
(let ((@x8954 (unit-resolution (mp ((_ quant-inst ?v0!20 (?v1!7 ?v0!20)) $x7891) @x7119 $x6183) (unit-resolution (def-axiom (or $x3732 $x3715)) @x9455 $x3715) @x8892 (or $x4844 $x5719))))
(let (($x8133 (>= ?x7341 0)))
(let ((@x9055 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1) (or $x8133 (not $x7025) $x9479 (not $x4728))) (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3686 $x4728)) @x4714 $x4728) @x8158 @x9476 $x8133)))
(let ((@x9049 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7121 (not $x5719) (not $x8133))) @x9055 (unit-resolution @x8954 @x8874 $x5719) $x7121)))
(let (($x7918 (not $x7121)))
(let ((?x4888 (+ ?x1906 ?x4720)))
(let (($x7874 (<= ?x4888 0)))
(let (($x8072 (or $x3729 $x7874 $x4710 $x7918)))
(let (($x4877 (>= (+ ?x4717 ?x1907) 0)))
(let (($x4881 (or $x4877 $x4710 (not (= (+ ?x4717 ?x1907 ?x4669) 0)))))
(let (($x8040 (or $x3729 $x4881)))
(let ((@x6258 (monotonicity (rewrite (= (+ ?x4717 ?x1907 ?x4669) (+ ?x1907 ?x4669 ?x4717))) (= (= (+ ?x4717 ?x1907 ?x4669) 0) (= (+ ?x1907 ?x4669 ?x4717) 0)))))
(let ((@x7178 (trans @x6258 (rewrite (= (= (+ ?x1907 ?x4669 ?x4717) 0) $x7121)) (= (= (+ ?x4717 ?x1907 ?x4669) 0) $x7121))))
(let ((@x7871 (monotonicity (rewrite (= (+ ?x4717 ?x1907) (+ ?x1907 ?x4717))) (= $x4877 (>= (+ ?x1907 ?x4717) 0)))))
(let ((@x7892 (trans @x7871 (rewrite (= (>= (+ ?x1907 ?x4717) 0) $x7874)) (= $x4877 $x7874))))
(let ((@x8041 (monotonicity @x7892 (monotonicity @x7178 (= (not (= (+ ?x4717 ?x1907 ?x4669) 0)) $x7918)) (= $x4881 (or $x7874 $x4710 $x7918)))))
(let ((@x8107 (trans (monotonicity @x8041 (= $x8040 (or $x3729 (or $x7874 $x4710 $x7918)))) (rewrite (= (or $x3729 (or $x7874 $x4710 $x7918)) $x8072)) (= $x8040 $x8072))))
(let ((@x9051 (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!20)) $x8040) @x8107 $x8072) (unit-resolution (def-axiom (or $x3732 $x3724)) @x9455 $x3724) @x8892 (or $x7874 $x7918))))
(let ((@x10024 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1906 ?x4413)) $x6002)) (lemma (unit-resolution @x9051 @x9049 @x8898 false) $x9479) (not (= ?x1906 ?x4413)))))
(let (($x4420 (= ?x1906 ?x4413)))
(let (($x4423 (or $x4299 $x4420)))
(let (($x8830 (or $x3695 $x4299 $x4420)))
(let ((@x8691 (mp ((_ quant-inst ?v0!20) (or $x3695 $x4423)) (rewrite (= (or $x3695 $x4423) $x8830)) $x8830)))
(let ((@x10120 (mp (unit-resolution (unit-resolution @x8691 @x9263 $x4423) @x10024 $x4299) @x10119 $x9037)))
(let (($x4629 (fun_app$ v_b_Visited_G_1$ ?v0!20)))
(let (($x5238 (= ?v0!20 v_b_v_G_1$)))
(let (($x10274 (or $x5238 $x4629)))
(let (($x10073 (= $x5237 $x10274)))
(let (($x10506 (or $x4134 $x10073)))
(let ((@x10500 (monotonicity (rewrite (= (ite $x5238 true $x4629) $x10274)) (= (= $x5237 (ite $x5238 true $x4629)) $x10073))))
(let ((@x10183 (monotonicity @x10500 (= (or $x4134 (= $x5237 (ite $x5238 true $x4629))) $x10506))))
(let ((@x10372 (trans @x10183 (rewrite (= $x10506 $x10506)) (= (or $x4134 (= $x5237 (ite $x5238 true $x4629))) $x10506))))
(let ((@x10020 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!20) (or $x4134 (= $x5237 (ite $x5238 true $x4629)))) @x10372 $x10506)))
(let ((?x4454 (pair$ v_b_v_G_1$ ?v0!20)))
(let ((?x4455 (b_G$ ?x4454)))
(let ((?x4507 (+ ?x254 ?x1907 ?x4455)))
(let (($x4527 (<= ?x4507 0)))
(let (($x8001 (= ?x4507 0)))
(let ((?x9161 (+ ?x254 ?x4438 ?x4455)))
(let (($x9165 (>= ?x9161 0)))
(let ((?x4456 (* (- 1) ?x4455)))
(let ((?x4457 (+ b_Infinity$ ?x4456)))
(let (($x4458 (<= ?x4457 0)))
(let (($x8810 (or $x4458 $x9165)))
(let (($x8814 (not $x8810)))
(let (($x8919 (or $x8814 $x4420)))
(let (($x8679 (or $x3678 $x8814 $x4420)))
(let (($x4463 (or (not (or $x4458 (<= (+ ?x4413 ?x1168 ?x4456) 0))) $x4420)))
(let (($x9386 (or $x3678 $x4463)))
(let ((@x9164 (monotonicity (rewrite (= (+ ?x4413 ?x1168 ?x4456) (+ ?x1168 ?x4413 ?x4456))) (= (<= (+ ?x4413 ?x1168 ?x4456) 0) (<= (+ ?x1168 ?x4413 ?x4456) 0)))))
(let ((@x8891 (trans @x9164 (rewrite (= (<= (+ ?x1168 ?x4413 ?x4456) 0) $x9165)) (= (<= (+ ?x4413 ?x1168 ?x4456) 0) $x9165))))
(let ((@x8813 (monotonicity @x8891 (= (or $x4458 (<= (+ ?x4413 ?x1168 ?x4456) 0)) $x8810))))
(let ((@x8815 (monotonicity @x8813 (= (not (or $x4458 (<= (+ ?x4413 ?x1168 ?x4456) 0))) $x8814))))
(let ((@x9295 (monotonicity (monotonicity @x8815 (= $x4463 $x8919)) (= $x9386 (or $x3678 $x8919)))))
(let ((@x9441 (mp ((_ quant-inst ?v0!20) $x9386) (trans @x9295 (rewrite (= (or $x3678 $x8919) $x8679)) (= $x9386 $x8679)) $x8679)))
(let ((@x9984 (unit-resolution (def-axiom (or $x8810 (not $x4458))) (hypothesis $x8814) (not $x4458))))
(let ((@x9985 (unit-resolution (def-axiom (or $x8810 (not $x9165))) (hypothesis $x8814) (not $x9165))))
(let (($x8926 (or $x4458 $x9165 $x8001)))
(let (($x8928 (or $x3670 $x4458 $x9165 $x8001)))
(let (($x4460 (<= (+ ?x4413 ?x1168 ?x4456) 0)))
(let (($x4506 (or $x4458 $x4460 (= (+ ?x254 ?x4455 ?x1907) 0))))
(let (($x8929 (or $x3670 $x4506)))
(let ((@x8925 (monotonicity (rewrite (= (+ ?x254 ?x4455 ?x1907) ?x4507)) (= (= (+ ?x254 ?x4455 ?x1907) 0) $x8001))))
(let ((@x8953 (monotonicity (monotonicity @x8891 @x8925 (= $x4506 $x8926)) (= $x8929 (or $x3670 $x8926)))))
(let ((@x8682 (mp ((_ quant-inst ?v0!20) $x8929) (trans @x8953 (rewrite (= (or $x3670 $x8926) $x8928)) (= $x8929 $x8928)) $x8928)))
(let ((@x9987 (unit-resolution (unit-resolution @x8682 @x4789 $x8926) @x9985 @x9984 (hypothesis (not $x8001)) false)))
(let ((@x10276 (unit-resolution (lemma @x9987 (or $x8810 $x8001)) (unit-resolution (unit-resolution @x9441 @x4803 $x8919) @x10024 $x8814) $x8001)))
(let ((?x4401 (+ ?x1906 ?x3064)))
(let (($x6992 (<= ?x4401 0)))
(let ((?x4566 (+ ?x1906 ?x3064 ?x4456)))
(let (($x6987 (= ?x4566 0)))
(let (($x4590 (>= ?x4566 0)))
(let ((@x9966 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or (not $x4527) $x4590 (not $x3906))) @x6160 (or (not $x4527) $x4590))))
(let (($x4589 (<= ?x4566 0)))
(let (($x4181 (>= ?x3063 0)))
(let (($x6279 (or $x3703 $x4181)))
(let ((@x6374 ((_ quant-inst v_b_v_G_1$) $x6279)))
(let ((@x9257 (unit-resolution @x6374 (unit-resolution (def-axiom (or $x3756 $x3698)) @x8979 $x3698) $x4181)))
(let (($x4146 (fun_app$ v_b_Visited_G_2$ v_b_v_G_1$)))
(let (($x3097 (fun_app$ ?x260 v_b_v_G_1$)))
(let (($x3456 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v1) ?v2) :pattern ( (fun_upd$ ?v0 ?v1 ?v2) ) :qid k!33))
))
(let (($x55 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v1) ?v2) :qid k!33))
))
(let (($x52 (= (fun_app$ (fun_upd$ ?2 ?1 ?0) ?1) ?0)))
(let (($x50 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_upd$ ?v0 ?v1 ?v2) ?v1) ?v2) :qid k!33))
))
(let ((@x54 (rewrite (= (= (fun_app$ (fun_upd$ ?2 ?1 ?0) ?1) ?0) $x52))))
(let ((@x1427 (mp~ (mp (asserted $x50) (quant-intro @x54 (= $x50 $x55)) $x55) (nnf-pos (refl (~ $x52 $x52)) (~ $x55 $x55)) $x55)))
(let ((@x3461 (mp @x1427 (quant-intro (refl (= $x52 $x52)) (= $x55 $x3456)) $x3456)))
(let (($x4383 (or (not $x3456) $x3097)))
(let ((@x4480 (monotonicity (rewrite (= (= $x3097 true) $x3097)) (= (or (not $x3456) (= $x3097 true)) $x4383))))
(let ((@x4483 (trans @x4480 (rewrite (= $x4383 $x4383)) (= (or (not $x3456) (= $x3097 true)) $x4383))))
(let ((@x4484 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true) (or (not $x3456) (= $x3097 true))) @x4483 $x4383)))
(let ((@x9972 (mp (unit-resolution @x4484 @x3461 $x3097) (monotonicity @x6739 (= $x3097 $x4146)) $x4146)))
(let ((@x5439 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x4590 $x4589)) (hypothesis (not $x4589)) $x4590)))
(let (($x4147 (not $x4146)))
(let (($x5371 (or $x3720 $x4147 $x4458 $x4589)))
(let ((?x5354 (+ ?x4455 ?x3063 ?x1907)))
(let (($x5355 (>= ?x5354 0)))
(let (($x5358 (or $x4147 $x4458 $x5355)))
(let (($x5372 (or $x3720 $x5358)))
(let ((@x5363 (monotonicity (rewrite (= ?x5354 (+ ?x1907 ?x3063 ?x4455))) (= $x5355 (>= (+ ?x1907 ?x3063 ?x4455) 0)))))
(let ((@x5367 (trans @x5363 (rewrite (= (>= (+ ?x1907 ?x3063 ?x4455) 0) $x4589)) (= $x5355 $x4589))))
(let ((@x5376 (monotonicity (monotonicity @x5367 (= $x5358 (or $x4147 $x4458 $x4589))) (= $x5372 (or $x3720 (or $x4147 $x4458 $x4589))))))
(let ((@x5380 (trans @x5376 (rewrite (= (or $x3720 (or $x4147 $x4458 $x4589)) $x5371)) (= $x5372 $x5371))))
(let ((@x5381 (mp ((_ quant-inst ?v0!20 v_b_v_G_1$) $x5372) @x5380 $x5371)))
(let ((@x5443 (unit-resolution @x5381 (hypothesis $x3715) (hypothesis $x4146) (hypothesis (not $x4589)) $x4458)))
(let ((@x5447 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x5443 (hypothesis $x4181) @x5439 (hypothesis $x1910) false) (or $x4589 (not $x4181) $x1909 $x3720 $x4147))))
(let ((@x9976 (unit-resolution (unit-resolution @x5447 @x9972 (or $x4589 (not $x4181) $x1909 $x3720)) @x9257 (or $x4589 $x1909 $x3720))))
(let ((@x9977 (unit-resolution @x9976 (unit-resolution (def-axiom (or $x3732 $x3715)) @x9455 $x3715) @x9475 $x4589)))
(let ((@x9991 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x6987 (not $x4589) (not $x4590))) @x9977 (or $x6987 (not $x4590)))))
(let ((@x9992 (unit-resolution @x9991 (unit-resolution @x9966 (hypothesis $x4527) $x4590) $x6987)))
(let (($x7023 (not $x6987)))
(let (($x6921 (or $x3729 $x6992 $x4147 $x7023)))
(let (($x4536 (>= (+ ?x3063 ?x1907) 0)))
(let (($x4548 (or $x4536 $x4147 (not (= (+ ?x3063 ?x1907 ?x4455) 0)))))
(let (($x8524 (or $x3729 $x4548)))
(let ((@x7245 (monotonicity (rewrite (= (+ ?x3063 ?x1907 ?x4455) (+ ?x1907 ?x3063 ?x4455))) (= (= (+ ?x3063 ?x1907 ?x4455) 0) (= (+ ?x1907 ?x3063 ?x4455) 0)))))
(let ((@x7022 (trans @x7245 (rewrite (= (= (+ ?x1907 ?x3063 ?x4455) 0) $x6987)) (= (= (+ ?x3063 ?x1907 ?x4455) 0) $x6987))))
(let ((@x7049 (monotonicity (rewrite (= (+ ?x3063 ?x1907) (+ ?x1907 ?x3063))) (= $x4536 (>= (+ ?x1907 ?x3063) 0)))))
(let ((@x8373 (trans @x7049 (rewrite (= (>= (+ ?x1907 ?x3063) 0) $x6992)) (= $x4536 $x6992))))
(let ((@x7936 (monotonicity @x8373 (monotonicity @x7022 (= (not (= (+ ?x3063 ?x1907 ?x4455) 0)) $x7023)) (= $x4548 (or $x6992 $x4147 $x7023)))))
(let ((@x8581 (trans (monotonicity @x7936 (= $x8524 (or $x3729 (or $x6992 $x4147 $x7023)))) (rewrite (= (or $x3729 (or $x6992 $x4147 $x7023)) $x6921)) (= $x8524 $x6921))))
(let ((@x8053 (mp ((_ quant-inst v_b_v_G_1$) $x8524) @x8581 $x6921)))
(let ((@x9995 (unit-resolution @x8053 (unit-resolution (def-axiom (or $x3732 $x3724)) @x9455 $x3724) @x9972 (or $x6992 $x7023))))
(let (($x5406 (<= ?x4455 0)))
(let (($x5407 (not $x5406)))
(let (($x5405 (= v_b_v_G_1$ ?v0!20)))
(let (($x5409 (not $x5405)))
(let ((@x10003 (monotonicity (symm (commutativity (= $x5405 $x5238)) (= $x5238 $x5405)) (= (not $x5238) $x5409))))
(let (($x5408 (or $x5405 $x5407)))
(let (($x3099 (not $x3475)))
(let (($x9955 (or $x3099 $x5405 $x5407)))
(let ((@x9962 (mp ((_ quant-inst v_b_v_G_1$ ?v0!20) (or $x3099 $x5408)) (rewrite (= (or $x3099 $x5408) $x9955)) $x9955)))
(let ((@x10006 (unit-resolution (unit-resolution @x9962 @x3480 $x5408) (mp (hypothesis (not $x5238)) @x10003 $x5409) $x5407)))
(let ((@x10007 ((_ th-lemma arith farkas -1 -1 1 1) @x6160 @x10006 (hypothesis $x4527) (unit-resolution @x9995 @x9992 $x6992) false)))
(let ((@x10279 (unit-resolution (lemma @x10007 (or (not $x4527) $x5238)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8001) $x4527)) @x10276 $x4527) $x5238)))
(let ((@x10164 (unit-resolution (def-axiom (or (not $x10073) $x5237 (not $x10274))) (unit-resolution (def-axiom (or $x10274 (not $x5238))) @x10279 $x10274) (or (not $x10073) $x5237))))
(unit-resolution (unit-resolution @x10164 (unit-resolution @x10020 @x3468 $x10073) $x5237) @x10120 false

