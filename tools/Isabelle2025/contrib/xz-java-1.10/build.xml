<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-License-Identifier: 0BSD -->
<!-- SPDX-FileCopyrightText: The XZ for Java authors and contributors -->
<!-- SPDX-FileContributor: Lasse Collin <lasse.collin@tukaani.org> -->

<project name="XZ" default="jar"
         xmlns:if="ant:if" xmlns:unless="ant:unless">

    <property file="build.properties"/>

    <tstamp>
        <format property="timestamp" pattern="yyyy-MM-dd'T'HH:mm:ssXXX"/>
    </tstamp>

    <target name="clean"
            description="Deletes all generated files">
        <delete dir="${build_dir}"/>
    </target>

    <target name="dist"
            description="Creates a source package (.zip) using 'git archive'">
        <mkdir dir="${dist_dir}"/>
        <exec output="${dist_file}" logError="true" failonerror="true"
              executable="git">
            <arg value="archive"/>
            <arg value="--format=zip"/>
            <arg value="HEAD"/>
        </exec>
    </target>

    <target name="doc"
            description="Generates HTML documentation with javadoc">
        <mkdir dir="${doc_dir}"/>
        <javadoc sourcepath="${src_dir}" destdir="${doc_dir}"
                 failonerror="true"
                 packagenames="org.tukaani.xz"
                 windowtitle="${title}"
                 nodeprecatedlist="true" nohelp="true">
            <arg value="-notimestamp"/>
            <!-- javadoc's -locale option is buggy in OpenJDK 11/17/22.
                 In OpenJDK 8 it works. Overriding JVM's default locale
                 works with all versions, so do that instead of using
                 locale="en" or locale="en_US". See:
                 https://bugs.openjdk.org/browse/JDK-8222793 -->
            <arg if:true="${javadoc_english}"
                 line="-J-Duser.language=en -J-Duser.country=US"/>
        </javadoc>
    </target>

    <target name="compile" description="Compiles the classes">
        <mkdir dir="${classes_dir}"/>
        <javac srcdir="." sourcepath="${src_dir}" destdir="${classes_dir}"
               includeAntRuntime="false" debug="${debug}"
               source="${sourcever}" target="${sourcever}"
               release="${sourcever}"
               includesfile="fileset-src.txt"
               excludes="**/package-info.java">
            <compilerarg compiler="modern" line="-Xlint -Xlint:-options"/>
            <compilerarg compiler="modern" line="-implicit:none"/>
        </javac>

        <mkdir unless:true="${java8only}" dir="${classes9_dir}"/>
        <javac unless:true="${java8only}"
               srcdir="." sourcepath="${src9_dir}:${src_dir}"
               destdir="${classes9_dir}"
               includeAntRuntime="false" debug="${debug}"
               release="${sourcever9}"
               includesfile="fileset-src9.txt">
            <compilerarg compiler="modern" line="-Xlint"/>
            <compilerarg compiler="modern" line="-implicit:none"/>
        </javac>
    </target>

    <target name="manifest">
        <mkdir dir="${manifest_dir}"/>

        <manifest file="${manifest_base}">
            <!-- The exact Ant version used for the build shouldn't make
                 any difference in the produced files, so don't let it
                 affect the manifest either. -->
            <attribute name="Ant-Version" value="Intentionally omitted"
                       if:true="${manifest_cleanup}"/>

            <!-- Compiler output varies between major OpenJDK releases but
                 it can be stable between minor releases, thus the minor
                 version information can be annoying for reproducible builds.
                 java.specification.version contains only the major version.
                 It's already used by Maven Archiver for Build-Jdk-Spec. -->
            <attribute name="Created-By" value="${java.specification.version}"
                       if:true="${manifest_cleanup}"/>

            <!-- Unconditionally add Build-Jdk-Spec too because its real-world
                 use is more clearly defined than that of Created-By. -->
            <attribute name="Build-Jdk-Spec"
                       value="${java.specification.version}"/>
        </manifest>
    </target>

    <target name="jar" depends="compile, manifest"
            description="Creates JAR packages">
        <mkdir dir="${jar_dir}"/>

        <jar destfile="${jar_dir}/xz.jar" modificationtime="${timestamp}"
             manifest="${manifest_base}">
            <fileset dir="${classes_dir}" includes="org/tukaani/xz/**"/>
            <zipfileset prefix="META-INF/versions/9/" dir="${classes9_dir}"
                        unless:true="${java8only}"/>
            <manifest>
                <attribute name="Implementation-Title" value="${title}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Implementation-URL" value="${homepage}"/>
                <attribute name="Sealed" value="true"/>
                <attribute name="Multi-Release" value="true"
                           unless:true="${java8only}"/>
                <!-- Attributes for OSGi bundles: -->
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-SymbolicName" value="org.tukaani.xz"/>
                <attribute name="Bundle-Version" value="${version}"/>
                <attribute name="Export-Package" value="org.tukaani.xz"/>
                <attribute name="Bundle-Name" value="${title}"/>
                <attribute name="Bundle-DocURL" value="${doc_url}"/>
                <attribute name="Bundle-Copyright"
                           value="The XZ for Java authors and contributors"/>
                <attribute name="Bundle-License" value="0BSD"/>
            </manifest>
        </jar>

        <macrodef name="jar.program">
            <attribute name="name"/>
            <sequential>
                <jar destfile="${jar_dir}/@{name}.jar"
                     modificationtime="${timestamp}"
                     manifest="${manifest_base}"
                     basedir="${classes_dir}"
                     includes="@{name}.class">
                    <manifest>
                        <attribute name="Main-Class" value="@{name}"/>
                        <attribute name="Class-Path" value="xz.jar"/>
                    </manifest>
                </jar>
            </sequential>
        </macrodef>

        <jar.program name="TestAllocSpeed"/>
        <jar.program name="XZEncDemo"/>
        <jar.program name="XZDecDemo"/>
        <jar.program name="XZSeekEncDemo"/>
        <jar.program name="XZSeekDecDemo"/>
        <jar.program name="LZMAEncDemo"/>
        <jar.program name="LZMADecDemo"/>
    </target>

    <target name="pom" description="Creates xz.pom for a Maven repository">
        <mkdir dir="${pom_dir}"/>

        <copy file="${pom_template}" tofile="${pom_dir}/xz.pom"
              overwrite="true">
            <filterset>
                <filter token="VERSION" value="${version}"/>
                <filter token="TITLE" value="${title}"/>
                <filter token="HOMEPAGE" value="${homepage}"/>
            </filterset>
        </copy>
    </target>

    <target name="maven" depends="pom, manifest, doc, jar"
            description="Creates POM and JAR files for a Maven repository">
        <mkdir dir="${maven_dir}"/>

        <copy file="${pom_dir}/xz.pom" tofile="${maven_dir}/xz-${version}.pom"
              preservelastmodified="true" overwrite="true"/>

        <copy file="${jar_dir}/xz.jar" tofile="${maven_dir}/xz-${version}.jar"
              preservelastmodified="true" overwrite="true"/>

        <jar destfile="${maven_dir}/xz-${version}-javadoc.jar"
             modificationtime="${timestamp}"
             manifest="${manifest_base}"
             basedir="${doc_dir}"/>

        <jar destfile="${maven_dir}/xz-${version}-sources.jar"
             modificationtime="${timestamp}"
             manifest="${manifest_base}">
            <fileset dir="${src_dir}" includes="org/tukaani/xz/**"/>
            <zipfileset prefix="META-INF/versions/9/" dir="${src9_dir}"/>
        </jar>
    </target>

</project>
