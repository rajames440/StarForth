
ann
  "nonexhaustiveBind warn" "nonexhaustiveMatch warn"
  "redundantBind warn" "redundantMatch warn"
  "sequenceNonUnit ignore"
  "warnUnused false" "forceUsed"
in

local
  basis l8 =
    bas
      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb $(SML_LIB)/basis/sml-nj.mlb
    end
  basis l4 =
    bas
      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
    end
in
local
   $(SML_LIB)/basis/pervasive.mlb
   local
      open l4
   in
      structure gs_0 = AtomBinaryMap
   end
   local
      open l8
   in
      structure gs_1 = List
   end
   local
      open l4
   in
      structure gs_2 = Atom
   end
   local
      structure Atom = gs_2
      reactive-sig.sml
   in
      signature gs_3 = REACTIVE
   end
   local
      structure Atom = gs_2
      instruction.sml
   in
      structure gs_4 = Instruction
   end
   local
      structure Atom = gs_2
      structure Instruction = gs_4
      structure List = gs_1
      machine.sml
   in
      structure gs_5 = Machine
   end
   local
      structure AtomBinaryMap = gs_0
      structure Instruction = gs_4
      structure List = gs_1
      structure Machine = gs_5
      signature REACTIVE = gs_3
      reactive.sml
   in
      structure gs_6 = Reactive
   end
in
   signature REACTIVE = gs_3
   structure Reactive = gs_6
end
end

end
