<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.23">
<title>XMLShrink</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<link rel="stylesheet" href="./asciidoctor.css">
<link rel="stylesheet" href="./rouge-github.css">
<link rel="stylesheet" href="./mlton.css">

</head>
<body class="article">
<div id="mlton-header">
<div id="mlton-header-text">
<h2>
<a href="./Home">
MLton
20241230
</a>
</h2>
</div>
</div>
<div id="header">
<h1>XMLShrink</h1>
</div>
<div id="content">
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>XMLShrink is an optimization pass for the <a href="XML">XML</a>
<a href="IntermediateLanguage">IntermediateLanguage</a>, invoked from <a href="XMLSimplify">XMLSimplify</a>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_description">Description</h2>
<div class="sectionbody">
<div class="paragraph">
<p>This pass performs optimizations based on a reduction system.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_implementation">Implementation</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/MLton/mlton/blob/master/mlton/xml/shrink.sig"><code>shrink.sig</code></a></p>
</li>
<li>
<p><a href="https://github.com/MLton/mlton/blob/master/mlton/xml/shrink.fun"><code>shrink.fun</code></a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_details_and_notes">Details and Notes</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The simplifier is based on <a href="References#AppelJim97">Shrinking Lambda
Expressions in Linear Time</a>.</p>
</div>
<div class="paragraph">
<p>The source program may contain functions that are only called once, or
not even called at all.  Match compilation introduces many such
functions.  In order to reduce the program size, speed up later
phases, and improve the flow analysis, a source to source simplifier
is run on <a href="XML">XML</a> after type inference and match compilation.</p>
</div>
<div class="paragraph">
<p>The simplifier implements the reductions shown below.  The reductions
eliminate unnecessary declarations (see the side constraint in the
figure), applications where the function is immediate, and case
statements where the test is immediate.  Declarations can be
eliminated only when the expression is nonexpansive (see Section 4.7
of the <a href="DefinitionOfStandardML">Definition</a>), which is a syntactic
condition that ensures that the expression has no effects
(assignments, raises, or nontermination).  The reductions on case
statements do not show the other irrelevant cases that may exist.  The
reductions were chosen so that they were strongly normalizing and so
that they never increased tree size.</p>
</div>
<div class="ulist">
<ul>
<li>
<p></p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">e1</span> <span class="kr">in</span> <span class="n">e2</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>reduces to</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="n">e2</span> <span class="p">[</span><span class="n">x</span> <span class="p">-&gt;</span> <span class="n">e1</span><span class="p">]</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>if <code>e1</code> is a constant or variable or if <code>e1</code> is nonexpansive and <code>x</code> occurs zero or one time in <code>e2</code></p>
</div>
</div>
</div>
</li>
<li>
<p></p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="p">(</span><span class="kr">fn</span> <span class="n">x</span> <span class="p">=&gt;</span> <span class="n">e1</span><span class="p">)</span> <span class="n">e2</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>reduces to</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">e2</span> <span class="kr">in</span> <span class="n">e1</span></code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p></p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="n">e1</span> <span class="kr">handle</span> <span class="n">e2</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>reduces to</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="n">e1</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>if <code>e1</code> is nonexpansive</p>
</div>
</div>
</div>
</li>
<li>
<p></p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">case</span> <span class="kr">let</span> <span class="n">d</span> <span class="kr">in</span> <span class="n">e</span> <span class="kr">end</span> <span class="kr">of</span> <span class="n">p1</span> <span class="p">=&gt;</span> <span class="n">e1</span> <span class="p">...</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>reduces to</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">let</span> <span class="n">d</span> <span class="kr">in</span> <span class="kr">case</span> <span class="n">e</span> <span class="kr">of</span> <span class="n">p1</span> <span class="p">=&gt;</span> <span class="n">e1</span> <span class="p">...</span> <span class="kr">end</span></code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p></p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">case</span> <span class="n">C</span> <span class="n">e1</span> <span class="kr">of</span> <span class="n">C</span> <span class="n">x</span> <span class="p">=&gt;</span> <span class="n">e2</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>reduces to</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="sml"><span class="kr">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">e1</span> <span class="kr">in</span> <span class="n">e2</span></code></pre>
</div>
</div>
</div>
</div>
</li>
</ul>
</div>
</div>
</div>
</div>
<div id="mlton-footer">
<div id="mlton-footer-text">
<div>
Last updated Thu Oct 21 15:53:06 2021 -0400 by Matthew Fluet.
<a href="https://github.com/MLton/mlton/commits/master/doc/guide/src/XMLShrink.adoc">Log</a>
<a href="https://github.com/MLton/mlton/edit/master/doc/guide/src/XMLShrink.adoc">Edit</a>
</div>
</div>
</body>
</html>