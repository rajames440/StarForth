(*
    Copyright (c) 2000
        Cambridge University Technical Services Limited

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.
    
    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*)

structure InitialiseCore = struct
local open MotifTypes XmTypes MotifCore in
val U = XtSetExceptionType XmNaccelerator XmRString ;
val U = XtSetExceptionType XmNacceleratorText XmRXmString ;
val U = XtSetExceptionType XmNaccelerators XmRAcceleratorTable ;
val U = XtSetExceptionType XmNadjustLast XmRBool ;
val U = XtSetExceptionType XmNadjustMargin XmRBool ;
val U = XtSetExceptionType XmNalignment XmRAlignment ;
val U = XtSetExceptionType XmNallowOverlap XmRBool ;
val U = XtSetExceptionType XmNallowResize XmRBool ;
val U = XtSetExceptionType XmNallowShellResize XmRBool ;
val U = XtSetExceptionType XmNancestorSensitive XmRBool ;
val U = XtSetExceptionType XmNapplyLabelString XmRXmString ;
val U = XtSetExceptionType XmNargc XmRInt ;
val U = XtSetExceptionType XmNargv XmRStringTable ;
val U = XtSetExceptionType XmNarmColor XmRPixel ;
val U = XtSetExceptionType XmNarmPixmap XmRPixmap ;
val U = XtSetExceptionType XmNarrowDirection XmRArrowDirection ;
val U = XtSetExceptionType XmNautoShowCursorPosition XmRBool ;
val U = XtSetExceptionType XmNautoUnmanage XmRBool ;
val U = XtSetExceptionType XmNautomaticSelection XmRBool ;
val U = XtSetExceptionType XmNbackground XmRPixel ;
val U = XtSetExceptionType XmNbackgroundPixmap XmRPixmap ;
val U = XtSetExceptionType XmNbaseHeight XmRInt ;
val U = XtSetExceptionType XmNbaseWidth XmRInt ;
val U = XtSetExceptionType XmNblinkRate XmRInt ;
val U = XtSetExceptionType XmNborderColor XmRPixel ;
val U = XtSetExceptionType XmNborderPixmap XmRPixmap ;
val U = XtSetExceptionType XmNborderWidth XmRDimension ;
val U = XtSetExceptionType XmNbottomAttachment XmRAttachment ;
val U = XtSetExceptionType XmNbottomOffset XmRInt ;
val U = XtSetExceptionType XmNbottomPosition XmRInt ;
val U = XtSetExceptionType XmNbottomShadowColor XmRPixel ;
val U = XtSetExceptionType XmNbottomShadowPixmap XmRPixmap ;
val U = XtSetExceptionType XmNbottomWidget XmRWidget ;
val U = XtSetExceptionType XmNbuttonAcceleratorText XmRXmStringTable ;
val U = XtSetExceptionType XmNbuttonAccelerators XmRStringTable ;
val U = XtSetExceptionType XmNbuttonCount XmRInt ;
val U = XtSetExceptionType XmNbuttonFontList XmRFontList ;
val U = XtSetExceptionType XmNbuttonMnemonicCharSets XmRXmStringTable ;
val U = XtSetExceptionType XmNbuttonMnemonics XmRKeySymTable ;
val U = XtSetExceptionType XmNbuttonSet XmRInt ;
val U = XtSetExceptionType XmNbuttonType XmRButtonTypeTable ;
val U = XtSetExceptionType XmNbuttons XmRXmStringTable ;
val U = XtSetExceptionType XmNcancelButton XmRWidget ;
val U = XtSetExceptionType XmNcancelLabelString XmRXmString ;
val U = XtSetExceptionType XmNcascadePixmap XmRPixmap ;
val U = XtSetExceptionType XmNchildren XmRWidgetList ;
val U = XtSetExceptionType XmNclipWindow XmRWidget ;
val U = XtSetExceptionType XmNcolormap XmRColormap ;
val U = XtSetExceptionType XmNcolumns XmRShort ;
val U = XtSetExceptionType XmNcommand XmRXmString ;
val U = XtSetExceptionType XmNcommandWindow XmRWidget ;
val U = XtSetExceptionType XmNcommandWindowLocation XmRCommandWindowLocation ;
val U = XtSetExceptionType XmNcursorPosition XmRInt ;
val U = XtSetExceptionType XmNcursorPositionVisible XmRBool ;
val U = XtSetExceptionType XmNdecimalPoints XmRShort ;
val U = XtSetExceptionType XmNdefaultButton XmRWidget ;
val U = XtSetExceptionType XmNdefaultButtonShadowThickness XmRDimension ;
val U = XtSetExceptionType XmNdefaultButtonType XmRDefaultButtonType ;
val U = XtSetExceptionType XmNdefaultFontList XmRFontList ;
val U = XtSetExceptionType XmNdefaultPosition XmRBool ;
val U = XtSetExceptionType XmNdeleteResponse XmRDeleteResponse ;
val U = XtSetExceptionType XmNdepth XmRInt ;
val U = XtSetExceptionType XmNdialogStyle XmRDialogStyle ;
val U = XtSetExceptionType XmNdialogTitle XmRXmString ;
val U = XtSetExceptionType XmNdialogType XmRDialogType ;
val U = XtSetExceptionType XmNdirListItemCount XmRInt ;
val U = XtSetExceptionType XmNdirListItems XmRXmStringTable ;
val U = XtSetExceptionType XmNdirListLabelString XmRXmString ;
val U = XtSetExceptionType XmNdirMask XmRXmString ;
val U = XtSetExceptionType XmNdirSpec XmRXmString ;
val U = XtSetExceptionType XmNdirectory XmRXmString ;
val U = XtSetExceptionType XmNdirectoryValid XmRBool ;
val U = XtSetExceptionType XmNdoubleClickInterval XmRInt ;
val U = XtSetExceptionType XmNeditMode XmREditMode ;
val U = XtSetExceptionType XmNeditable XmRBool ;
val U = XtSetExceptionType XmNentryAlignment XmRAlignment ;
val U = XtSetExceptionType XmNentryBorder XmRDimension ;
val U = XtSetExceptionType XmNfileListItemCount XmRInt ;
val U = XtSetExceptionType XmNfileListItems XmRXmStringTable ;
val U = XtSetExceptionType XmNfileListLabelString XmRXmString ;
val U = XtSetExceptionType XmNfileTypeMask XmRFileTypeMask ;
val U = XtSetExceptionType XmNfillOnArm XmRBool ;
val U = XtSetExceptionType XmNfillOnSelect XmRBool ;
val U = XtSetExceptionType XmNfilterLabelString XmRXmString ;
val U = XtSetExceptionType XmNfontList XmRFontList ;
val U = XtSetExceptionType XmNforeground XmRPixel ;
val U = XtSetExceptionType XmNfractionBase XmRInt ;
val U = XtSetExceptionType XmNgeometry XmRString ;
val U = XtSetExceptionType XmNheight XmRDimension ;
val U = XtSetExceptionType XmNheightInc XmRInt ;
val U = XtSetExceptionType XmNhelpLabelString XmRXmString ;
val U = XtSetExceptionType XmNhighlightColor XmRPixel ;
val U = XtSetExceptionType XmNhighlightOnEnter XmRBool ;
val U = XtSetExceptionType XmNhighlightPixmap XmRPixmap ;
val U = XtSetExceptionType XmNhighlightThickness XmRDimension ;
val U = XtSetExceptionType XmNhistoryItemCount XmRInt ;
val U = XtSetExceptionType XmNhistoryItems XmRXmStringTable ;
val U = XtSetExceptionType XmNhistoryMaxItems XmRInt ;
val U = XtSetExceptionType XmNhistoryVisibleItemCount XmRInt ;
val U = XtSetExceptionType XmNhorizontalScrollBar XmRWidget ;
val U = XtSetExceptionType XmNhorizontalSpacing XmRDimension ;
val U = XtSetExceptionType XmNiconMask XmRPixmap ;
val U = XtSetExceptionType XmNiconName XmRString ;
val U = XtSetExceptionType XmNiconNameEncoding XmRAtom ;
val U = XtSetExceptionType XmNiconPixmap XmRPixmap ;
val U = XtSetExceptionType XmNiconWindow XmRPixmap ;
val U = XtSetExceptionType XmNiconX XmRInt ;
val U = XtSetExceptionType XmNiconY XmRInt ;
val U = XtSetExceptionType XmNiconic XmRBool ;
val U = XtSetExceptionType XmNincrement XmRInt ;
val U = XtSetExceptionType XmNindicatorOn XmRBool ;
val U = XtSetExceptionType XmNindicatorSize XmRDimension ;
val U = XtSetExceptionType XmNindicatorType XmRIndicatorType ;
val U = XtSetExceptionType XmNinitialDelay XmRInt ;
val U = XtSetExceptionType XmNinitialResourcesPersistent XmRBool ;
val U = XtSetExceptionType XmNinitialState XmRInitialState ;
val U = XtSetExceptionType XmNinput XmRBool ;
val U = XtSetExceptionType XmNisAligned XmRBool ;
val U = XtSetExceptionType XmNisHomogeneous XmRBool ;
val U = XtSetExceptionType XmNitemCount XmRInt ;
val U = XtSetExceptionType XmNitems XmRXmStringTable ;
val U = XtSetExceptionType XmNkeyboardFocusPolicy XmRKeyboardFocusPolicy ;
val U = XtSetExceptionType XmNlabelFontList XmRFontList ;
val U = XtSetExceptionType XmNlabelInsensitivePixmap XmRPixmap ;
val U = XtSetExceptionType XmNlabelPixmap XmRPixmap ;
val U = XtSetExceptionType XmNlabelString XmRXmString ;
val U = XtSetExceptionType XmNlabelType XmRLabelType ;
val U = XtSetExceptionType XmNleftAttachment XmRAttachment ;
val U = XtSetExceptionType XmNleftOffset XmRInt ;
val U = XtSetExceptionType XmNleftPosition XmRInt ;
val U = XtSetExceptionType XmNleftWidget XmRWidget ;
val U = XtSetExceptionType XmNlistItemCount XmRInt ;
val U = XtSetExceptionType XmNlistItems XmRXmStringTable ;
val U = XtSetExceptionType XmNlistLabelString XmRXmString ;
val U = XtSetExceptionType XmNlistMarginHeight XmRDimension ;
val U = XtSetExceptionType XmNlistMarginWidth XmRDimension ;
val U = XtSetExceptionType XmNlistSizePolicy XmRVisualPolicy ;
val U = XtSetExceptionType XmNlistSpacing XmRDimension ;
val U = XtSetExceptionType XmNlistUpdated XmRBool ;
val U = XtSetExceptionType XmNlistVisibleItemCount XmRInt ;
val U = XtSetExceptionType XmNmainWindowMarginHeight XmRDimension ;
val U = XtSetExceptionType XmNmainWindowMarginWidth XmRDimension ;
val U = XtSetExceptionType XmNmappedWhenManaged XmRBool ;
val U = XtSetExceptionType XmNmappingDelay XmRInt ;
val U = XtSetExceptionType XmNmargin XmRDimension ;
val U = XtSetExceptionType XmNmarginBottom XmRDimension ;
val U = XtSetExceptionType XmNmarginHeight XmRDimension ;
val U = XtSetExceptionType XmNmarginLeft XmRDimension ;
val U = XtSetExceptionType XmNmarginRight XmRDimension ;
val U = XtSetExceptionType XmNmarginTop XmRDimension ;
val U = XtSetExceptionType XmNmarginWidth XmRDimension ;
val U = XtSetExceptionType XmNmaxAspectX XmRInt ;
val U = XtSetExceptionType XmNmaxAspectY XmRInt ;
val U = XtSetExceptionType XmNmaxHeight XmRInt ;
val U = XtSetExceptionType XmNmaxLength XmRInt ;
val U = XtSetExceptionType XmNmaxWidth XmRInt ;
val U = XtSetExceptionType XmNmaximum XmRInt ;
val U = XtSetExceptionType XmNmenuAccelerator XmRString ;
val U = XtSetExceptionType XmNmenuBar XmRWidget ;
val U = XtSetExceptionType XmNmenuCursor XmRCursor ;
val U = XtSetExceptionType XmNmenuHelpWidget XmRWidget ;
val U = XtSetExceptionType XmNmenuHistory XmRWidget ;
val U = XtSetExceptionType XmNmenuPost XmRString ;
val U = XtSetExceptionType XmNmessageAlignment XmRAlignment ;
val U = XtSetExceptionType XmNmessageString XmRXmString ;
val U = XtSetExceptionType XmNmessageWindow XmRWidget ;
val U = XtSetExceptionType XmNminAspectX XmRInt ;
val U = XtSetExceptionType XmNminAspectY XmRInt ;
val U = XtSetExceptionType XmNminHeight XmRInt ;
val U = XtSetExceptionType XmNminWidth XmRInt ;
val U = XtSetExceptionType XmNminimizeButtons XmRBool ;
val U = XtSetExceptionType XmNminimum XmRInt ;
val U = XtSetExceptionType XmNmnemonic XmRKeySym ;
val U = XtSetExceptionType XmNmnemonicCharSet XmRString ;
val U = XtSetExceptionType XmNmultiClick XmRMultiClick ;
val U = XtSetExceptionType XmNmustMatch XmRBool ;
val U = XtSetExceptionType XmNmwmDecorations XmRInt ;
val U = XtSetExceptionType XmNmwmFunctions XmRInt ;
val U = XtSetExceptionType XmNmwmInputMode XmRInt ;
val U = XtSetExceptionType XmNmwmMenu XmRString ;
val U = XtSetExceptionType XmNnavigationType XmRNavigationType ;
val U = XtSetExceptionType XmNnoMatchString XmRXmString ;
val U = XtSetExceptionType XmNnoResize XmRBool ;
val U = XtSetExceptionType XmNnumChildren XmRCardinal ;
val U = XtSetExceptionType XmNnumColumns XmRShort ;
val U = XtSetExceptionType XmNokLabelString XmRXmString ;
val U = XtSetExceptionType XmNoptionLabel XmRXmString ;
val U = XtSetExceptionType XmNoptionMnemonic XmRKeySym ;
val U = XtSetExceptionType XmNorientation XmROrientation ;
val U = XtSetExceptionType XmNoverrideRedirect XmRBool ;
val U = XtSetExceptionType XmNpacking XmRPacking ;
val U = XtSetExceptionType XmNpageIncrement XmRInt ;
val U = XtSetExceptionType XmNpaneMaximum XmRDimension ;
val U = XtSetExceptionType XmNpaneMinimum XmRDimension ;
val U = XtSetExceptionType XmNpattern XmRXmString ;
val U = XtSetExceptionType XmNpendingDelete XmRBool ;
val U = XtSetExceptionType XmNpopupEnabled XmRBool ;
val U = XtSetExceptionType XmNpostFromButton XmRInt ;
val U = XtSetExceptionType XmNprocessingDirection XmRProcessingDirection ;
val U = XtSetExceptionType XmNpromptString XmRXmString ;
val U = XtSetExceptionType XmNpushButtonEnabled XmRBool ;
val U = XtSetExceptionType XmNradioAlwaysOne XmRBool ;
val U = XtSetExceptionType XmNradioBehavior XmRBool ;
val U = XtSetExceptionType XmNrecomputeSize XmRBool ;
val U = XtSetExceptionType XmNrefigureMode XmRBool ;
val U = XtSetExceptionType XmNrepeatDelay XmRInt ;
val U = XtSetExceptionType XmNresizable XmRBool ;
val U = XtSetExceptionType XmNresizeHeight XmRBool ;
val U = XtSetExceptionType XmNresizePolicy XmRResizePolicy ;
val U = XtSetExceptionType XmNresizeWidth XmRBool ;
val U = XtSetExceptionType XmNrightAttachment XmRAttachment ;
val U = XtSetExceptionType XmNrightOffset XmRInt ;
val U = XtSetExceptionType XmNrightPosition XmRInt ;
val U = XtSetExceptionType XmNrightWidget XmRWidget ;
val U = XtSetExceptionType XmNrowColumnType XmRRowColumnType ;
val U = XtSetExceptionType XmNrows XmRShort ;
val U = XtSetExceptionType XmNrubberPositioning XmRBool ;
val U = XtSetExceptionType XmNsashHeight XmRDimension ;
val U = XtSetExceptionType XmNsashIndent XmRPosition ;
val U = XtSetExceptionType XmNsashShadowThickness XmRDimension ;
val U = XtSetExceptionType XmNsashWidth XmRDimension ;
val U = XtSetExceptionType XmNsaveUnder XmRBool ;
val U = XtSetExceptionType XmNscaleHeight XmRDimension ;
val U = XtSetExceptionType XmNscaleMultiple XmRInt ;
val U = XtSetExceptionType XmNscaleWidth XmRDimension ;
val U = XtSetExceptionType XmNscrollBarDisplayPolicy XmRScrollBarDisplayPolicy ;
val U = XtSetExceptionType XmNscrollBarPlacement XmRScrollBarPlacement ;
val U = XtSetExceptionType XmNscrollHorizontal XmRBool ;
val U = XtSetExceptionType XmNscrollLeftSide XmRBool ;
val U = XtSetExceptionType XmNscrollTopSide XmRBool ;
val U = XtSetExceptionType XmNscrollVertical XmRBool ;
val U = XtSetExceptionType XmNscrolledWindowMarginHeight XmRDimension ;
val U = XtSetExceptionType XmNscrolledWindowMarginWidth XmRDimension ;
val U = XtSetExceptionType XmNscrollingPolicy XmRScrollingPolicy ;
val U = XtSetExceptionType XmNselectColor XmRPixel ;
val U = XtSetExceptionType XmNselectInsensitivePixmap XmRPixmap ;
val U = XtSetExceptionType XmNselectPixmap XmRPixmap ;
val U = XtSetExceptionType XmNselectThreshold XmRInt ;
val U = XtSetExceptionType XmNselectedItemCount XmRInt ;
val U = XtSetExceptionType XmNselectedItems XmRXmStringTable ;
val U = XtSetExceptionType XmNselectionArray XmRTextScanTypeTable ;
val U = XtSetExceptionType XmNselectionArrayCount XmRInt ;
val U = XtSetExceptionType XmNselectionLabelString XmRXmString ;
val U = XtSetExceptionType XmNselectionPolicy XmRSelectionPolicy ;
val U = XtSetExceptionType XmNsensitive XmRBool ;
val U = XtSetExceptionType XmNseparatorOn XmRBool ;
val U = XtSetExceptionType XmNseparatorType XmRShadowType ;
val U = XtSetExceptionType XmNset XmRBool ;
val U = XtSetExceptionType XmNshadowThickness XmRDimension ;
val U = XtSetExceptionType XmNshadowType XmRShadowType ;
val U = XtSetExceptionType XmNshellUnitType XmRUnitType ;
val U = XtSetExceptionType XmNshowArrows XmRBool ;
val U = XtSetExceptionType XmNshowAsDefault XmRDimension ;
val U = XtSetExceptionType XmNshowSeparator XmRBool ;
val U = XtSetExceptionType XmNshowValue XmRBool ;
val U = XtSetExceptionType XmNskipAdjust XmRBool ;
val U = XtSetExceptionType XmNsliderSize XmRInt ;
val U = XtSetExceptionType XmNspacing XmRDimension ;
val U = XtSetExceptionType XmNstringDirection XmRStringDirection ;
val U = XtSetExceptionType XmNsubMenuId XmRWidget ;
val U = XtSetExceptionType XmNsymbolPixmap XmRPixmap ;
val U = XtSetExceptionType XmNtextAccelerators XmRAcceleratorTable ;
val U = XtSetExceptionType XmNtextColumns XmRShort ;
val U = XtSetExceptionType XmNtextFontList XmRFontList ;
val U = XtSetExceptionType XmNtextString XmRXmString ;
val U = XtSetExceptionType XmNtextTranslations XmRTranslationTable ;
val U = XtSetExceptionType XmNtitle XmRString ;
val U = XtSetExceptionType XmNtitleEncoding XmRAtom ;
val U = XtSetExceptionType XmNtitleString XmRXmString ;
val U = XtSetExceptionType XmNtopAttachment XmRAttachment ;
val U = XtSetExceptionType XmNtopCharacter XmRInt ;
val U = XtSetExceptionType XmNtopItemPosition XmRInt ;
val U = XtSetExceptionType XmNtopOffset XmRInt ;
val U = XtSetExceptionType XmNtopPosition XmRInt ;
val U = XtSetExceptionType XmNtopShadowColor XmRPixel ;
val U = XtSetExceptionType XmNtopShadowPixmap XmRPixmap ;
val U = XtSetExceptionType XmNtopWidget XmRWidget ;
val U = XtSetExceptionType XmNtransient XmRBool ;
val U = XtSetExceptionType XmNtransientFor XmRWidget ;
val U = XtSetExceptionType XmNtranslations XmRTranslationTable ;
val U = XtSetExceptionType XmNtraversalOn XmRBool ;
val U = XtSetExceptionType XmNtroughColor XmRPixel ;
val U = XtSetExceptionType XmNunitType XmRUnitType ;
val U = XtSetExceptionType XmNuseAsyncGeometry XmRBool ;
val U = XtSetExceptionType XmNvalue XmRInt ;
val U = XtSetExceptionType XmNverifyBell XmRBool ;
val U = XtSetExceptionType XmNverticalScrollBar XmRWidget ;
val U = XtSetExceptionType XmNverticalSpacing XmRDimension ;

(* The O'Reilly book says this resource is a short - it's wrong! *)
val U = XtSetExceptionType XmNvisibleItemCount XmRInt;

val U = XtSetExceptionType XmNvisibleWhenOff XmRBool ;
val U = XtSetExceptionType XmNvisual XmRVisual ;
val U = XtSetExceptionType XmNvisualPolicy XmRVisualPolicy ;
val U = XtSetExceptionType XmNwaitForWm XmRBool ;
val U = XtSetExceptionType XmNwidth XmRDimension ;
val U = XtSetExceptionType XmNwidthInc XmRInt ;
val U = XtSetExceptionType XmNwinGravity XmRInt ;
val U = XtSetExceptionType XmNwindowGroup XmRPixmap ;
val U = XtSetExceptionType XmNwmTimeout XmRInt ;
val U = XtSetExceptionType XmNwordWrap XmRBool ;
val U = XtSetExceptionType XmNworkWindow XmRWidget ;
val U = XtSetExceptionType XmNx XmRPosition ;
val U = XtSetExceptionType XmNy XmRPosition ;
end (* local *) ;
end (* struct *) ;
